openapi: 3.0.1
info:
  title: ARGO web api
  description: ARGO is a lightweight service for Service Level Monitoring designed
    for medium and large sized e-Infrastructures. This swagger UI interface provides
    access to the ARGO web api, which in turn can be used for either retrieving Availability/Reliability
    and status results or for defining profiles and reports that should be used within
    the SLM computations. The ARGO web api is multitenant and can hence be used by
    multiple e-Infrastructure providers. To list, add, update or remove tenants use
    the Tenants resource below. Under all other resources use per given tenant the
    corresponding api key.
  contact:
    name: ARGO web api
    url: http://argoeu.github.io/argo-web-api
    email: argo-dev@lists.grnet.gr
  version: 1.11.0
servers:
- url: https://api.devel.argo.grnet.gr/api
tags:
- name: Tenants
  description: ARGO tenants
- name: Reports
  description: Everything about reports
- name: Operations Profiles
  description: Possible states and AND/OR truth tables
- name: Aggregation Profiles
  description: Service types groupings into higher groups
- name: Metric Profiles
  description: Metrics associated with a given service type
- name: Factors
  description: Multipliers for grouped aggregated A/R
- name: Recomputations
  description: A/R recomputations
- name: Results
  description: Availability/Reliability in numbers
- name: Status
  description: Status results in detail
- name: MetricResult
  description: Retrieve the full output of a  metric result
- name: Issues
  description: List of problematic endpoints
paths:
  /v2/admin/tenants/{TENANT_ID}:
    get:
      tags:
      - Tenants
      summary: List a specific tenant
      description: List one specific tenant designated by its unique id
      operationId: tenants.ListOne
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with one tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Tenants
      summary: Update a tenant
      description: update information on a specific tenant definition
      operationId: tenants.Update
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of tenant definition to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        201:
          description: Tenant definition updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: tenant
    delete:
      tags:
      - Tenants
      summary: Delete a tenant
      description: Delete a specific tenant which is targeted by it's unique id
      operationId: tenant.Delete
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant definition
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Tenant definition Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/admin/tenants:
    get:
      tags:
      - Tenants
      summary: List all available tenants
      description: List all available tenants in the system
      operationId: tenants.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list of all available tenants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Tenants
      summary: Create a tenant definition
      description: Create a new tenant definition
      operationId: tenants.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the tenant to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant'
        required: true
      responses:
        200:
          description: Tenant definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: tenant
  /v2/admin/tenants/{TENANT_ID}/status:
    get:
      tags:
      - Tenants
      summary: List a specific tenant's argo-engine status
      description: List one specific tenant's status designated by its unique id
      operationId: tenants.ListStatus
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with one tenant's argo-engine status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant_status_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Tenants
      summary: Update a tenant's status
      description: update information on a specific tenant's argo-engine status definition
      operationId: tenants.UpdateStatus
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of tenant's argo-engine status definition to
          be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tenant_status'
        required: true
      responses:
        201:
          description: Tenant's status definition updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: tenant
  /v2/admin/tenants/{TENANT_ID}/users:
    get:
      tags:
      - Tenants
      summary: List all available users
      description: List all available users in a tenant
      operationId: tenants.ListUSers
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list of all available user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Tenants
      summary: Create a new user on existing tenant
      description: Create a new user on existing tenant
      operationId: tenants.CreateUser
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the user to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        201:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: user
  /admin/tenants/{TENANT_ID}/users/{USER_ID}:
    get:
      tags:
      - Tenants
      summary: Get user info
      description: Get information of specific user member of specific tenant
      operationId: tenants.GetUser
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: USER_ID
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Tenants
      summary: Update a user
      description: Update an existing user on specific tenant
      operationId: tenants.UpdateUser
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: USER_ID
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the user to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: user
    delete:
      tags:
      - Tenants
      summary: Delete a user from tenant
      description: Delete a specific user from an existing tenant
      operationId: tenant.DeleteUser
      parameters:
      - name: TENANT_ID
        in: path
        description: id of the tenant definition
        required: true
        schema:
          type: string
      - name: USER_ID
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: User Deleted and removed from tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/admin/tenants/{TENANT_ID}/users/{USER_ID}/renew_api_key:
    post:
      tags:
      - Tenants
      summary: Renew a user's api key
      description: Renew a user's api key
      operationId: tenants.UserRenewKey
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: TENANT_ID
        in: path
        description: id of the tenant
        required: true
        schema:
          type: string
      - name: USER_ID
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: User key renewed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewedToken'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/admin/users:byID/{USER_ID}:
    get:
      tags:
      - Tenants
      summary: List a specific user
      description: List one specific user designated by its unique id
      operationId: tenants.user_by_id
      parameters:
      - name: export
        in: query
        description: the service will respond with just a flat json user object when
          this parameter is given(export=flat)
        schema:
          type: string
      - name: USER_ID
        in: path
        description: id of the user
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with one user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/reports/{REPORT_ID}:
    get:
      tags:
      - Reports
      summary: List a specific report
      description: List one specific report designated by its unique id
      operationId: reports.ListOne
      parameters:
      - name: REPORT_ID
        in: path
        description: id of the report
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with one report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Reports
      summary: Update a report
      description: update information on a specific report definition
      operationId: reports.Update
      parameters:
      - name: REPORT_ID
        in: path
        description: id of the report
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of report definition to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      responses:
        201:
          description: Report definition updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: report
    delete:
      tags:
      - Reports
      summary: Delete a report
      description: Delete a specific report which is targeted by it's unique id
      operationId: reports.Delete
      parameters:
      - name: REPORT_ID
        in: path
        description: id of the Report definition
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Report definition Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/reports:
    get:
      tags:
      - Reports
      summary: List all available reports
      description: Reports provide a collection
      operationId: reports.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list of all available Reports
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Reports
      summary: Create a report definition
      description: Create a new Report definition
      operationId: reports.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the report to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
        required: true
      responses:
        200:
          description: Report definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: report
  /v2/operations_profiles/{PROFILE_ID}:
    get:
      tags:
      - Operations Profiles
      summary: List a specific operations profile
      description: List one specific operations profile targeted by it's unique id
      operationId: operationsProfiles.ListOne
      parameters:
      - name: PROFILE_ID
        in: path
        description: id of the operations profile
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list with one operations profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operations_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Operations Profiles
      summary: Update an operations profile
      description: update information on a specific Operations Profile which is targeted
        by it's unique id
      operationId: operationsProfiles.Update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the operations profile
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the operations profile to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operations_profile'
        required: true
      responses:
        201:
          description: Operations profile Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: operations_profile
    delete:
      tags:
      - Operations Profiles
      summary: Delete an operations profile
      description: Delete a specific Operations Profile which is targeted by it's
        unique id
      operationId: operationsProfiles.Delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: PROFILE_ID
        in: path
        description: id of the operations profile
        required: true
        schema:
          type: string
      responses:
        200:
          description: Operations profile Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/operations_profiles:
    get:
      tags:
      - Operations Profiles
      summary: List all operations profiles
      description: Operations Profiles provides a list of available monitoring states
        and logical operations defined on how to aggregate them
      operationId: operationsProfiles.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list of Operations profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operations_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Operations Profiles
      summary: Create an Operations profile
      description: Create a new Operations Profile
      operationId: operationsProfiles.Create
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the operations profile to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operations_profile'
        required: true
      responses:
        200:
          description: Operations profile Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: operations_profile
  /v2/aggregation_profiles/{PROFILE_ID}:
    get:
      tags:
      - Aggregation Profiles
      summary: List a specific aggregation profile
      description: List one specific aggregation profile targeted by it's unique id
      operationId: aggregationProfiles.ListOne
      parameters:
      - name: PROFILE_ID
        in: path
        description: id of the aggregation profile
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list with one aggregation profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aggregation_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Aggregation Profiles
      summary: Update an aggregation profile
      description: update information on a specific aggregation Profile which is targeted
        by it's unique id
      operationId: aggregationProfiles.Update
      parameters:
      - name: PROFILE_ID
        in: path
        description: id of the aggregation profile
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the aggregation profile to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aggregation_profile'
        required: true
      responses:
        201:
          description: Aggregation profile Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: aggregation_profile
    delete:
      tags:
      - Aggregation Profiles
      summary: Delete an aggregation profile
      description: Delete a specific aggregation Profile which is targeted by it's
        unique id
      operationId: aggregationProfiles.Delete
      parameters:
      - name: PROFILE_ID
        in: path
        description: id of the aggregation profile
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Aggregation profile Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/aggregation_profiles:
    get:
      tags:
      - Aggregation Profiles
      summary: List all aggregation profiles
      description: Aggregation Profiles provide a hiearchy structure of how different
        services are being aggregated during computations
      operationId: aggregationProfiles.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list of aggregation profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aggregation_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Aggregation Profiles
      summary: Create an aggregation profile
      description: Create a new aggregation Profile
      operationId: aggregationProfiles.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the aggregation profile to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Aggregation_profile'
        required: true
      responses:
        200:
          description: Aggregation profile Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: aggregation_profile
  /v2/metric_profiles/{PROFILE_ID}:
    get:
      tags:
      - Metric Profiles
      summary: List a specific metric profile
      description: List one specific metric profile targeted by it's unique id
      operationId: metricProfiles.ListOne
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: PROFILE_ID
        in: path
        description: id of the metric profile
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with one metric profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Metric Profiles
      summary: update a metric profile
      description: update information on a specific metric Profile which is targeted
        by it's unique id
      operationId: metricProfiles.Update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the metric profile
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the metric profile to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metric_profile'
        required: true
      responses:
        201:
          description: Metric profile Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: metric_profile
    delete:
      tags:
      - Metric Profiles
      summary: Delete a metric profile
      description: Delete a specific metric Profile which is targeted by it's unique
        id
      operationId: metricProfiles.Delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: PROFILE_ID
        in: path
        description: id of the metric profile
        required: true
        schema:
          type: string
      responses:
        200:
          description: Metric profile Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/metric_profiles:
    get:
      tags:
      - Metric Profiles
      summary: List all metric profiles
      description: Metric Profiles provide a list of relevant services/metrics to
        be accounted during a computation
      operationId: metricProfiles.List
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list of metric profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Metric Profiles
      summary: Create a metric profile
      description: Create a new metric Profile which includes a list of relevant services
        and metrics to be accounted during a computation
      operationId: metricProfiles.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the metric profile to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metric_profile'
        required: true
      responses:
        200:
          description: Metric profile Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: metric_profile
  /v2/thresholds_profiles/{PROFILE_ID}:
    get:
      tags:
      - Thresholds Profiles
      summary: List a specific threhsolds profile
      description: List one specific thresholds profile targeted by it's unique id
      operationId: thresholdsProfiles.ListOne
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the thresholds profile
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with one thresholds profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thresholds_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Thresholds Profiles
      summary: update a threhsolds profile
      description: update information on a specific thresholds Profile which is targeted
        by it's unique id
      operationId: threhsoldsProfiles.Update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the thresholds profile
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the thresholds profile to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thresholds_profile'
        required: true
      responses:
        201:
          description: Thresholds profile Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: thresholds_profile
    delete:
      tags:
      - Thresholds Profiles
      summary: Delete a thresholds profile
      description: Delete a specific thresholds Profile which is targeted by it's
        unique id
      operationId: thresholdsProfiles.Delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: PROFILE_ID
        in: path
        description: id of the thresholds profile
        required: true
        schema:
          type: string
      responses:
        200:
          description: Thresholds profile Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/thresholds_profiles:
    get:
      tags:
      - Thresholds Profiles
      summary: List all threhsolds profiles
      description: Thresholds profiles provide a list of threshold rules to be accounted
        during a computation
      operationId: thresholdsProfiles.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list of thresholds profiles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thresholds_profile_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Thresholds Profiles
      summary: Create a thresholds profile
      description: Create a new thresholds profile which includes a list of threshold
        ruels to be accounted during a computation
      operationId: thresholdsProfiles.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the thresholds profile to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thresholds_profile'
        required: true
      responses:
        200:
          description: Thresholds profile Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: thresholds_profile
  /v2/downtimes:
    get:
      tags:
      - Downtimes
      summary: List all downtimes resources for specific name
      description: List available downtimes resources
      operationId: downtimes.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list of downtimes resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtimes_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Downtimes
      summary: Create a new downtimes resource
      description: Create a new downtimes resource that includes a list of downtime
        periods assigned to hosts
      operationId: downtimes.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the downtimes resource to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtimes'
        required: true
      responses:
        200:
          description: Downtimes resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: downtimes_resource
    delete:
      tags:
      - Downtimes
      summary: Delete a downtimes resource
      description: Delete a specific downtimes resource which is targeted by it's
        unique id
      operationId: downtimes.Delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Downtimes resource deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/weights/{PROFILE_ID}:
    get:
      tags:
      - Weights
      summary: List a specific weights resource
      description: List one specific weights resource targeted by it's unique id
      operationId: weights.ListOne
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the weights resource
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with a weights resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weights_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Weights
      summary: update an existing weights resource
      description: update information on a specific weights resource which is targeted
        by it's unique id
      operationId: weights.Update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: PROFILE_ID
        in: path
        description: id of the weights resource
        required: true
        schema:
          type: string
      requestBody:
        description: Json description of the weight_resource to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weights'
        required: true
      responses:
        201:
          description: Weights resource Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: weights_resource
    delete:
      tags:
      - Weights
      summary: Delete a weights resource
      description: Delete a specific weights resource which is targeted by it's unique
        id
      operationId: weights.Delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: PROFILE_ID
        in: path
        description: id of the weights resource
        required: true
        schema:
          type: string
      responses:
        200:
          description: Weights resource deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/weights:
    get:
      tags:
      - Weights
      summary: List all weight resource
      description: List available weight resources
      operationId: weights.List
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: A list of weights resources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weights_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Weights
      summary: Create a new weights resource
      description: Create a new weights resource that includes mapping of groups and
        weights to be used through a computation
      operationId: weights.Create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of the weights resource to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weights'
        required: true
      responses:
        200:
          description: Weights resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: weights_resource
  /v2/topology/stats/{report_name}:
    get:
      tags:
      - Topology
      summary: List topology statistics for a specific report
      description: This request lists number of groups and services contained in the
        report
      operationId: topology
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: date
        in: query
        description: target day to get latest topology statistics
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Successful retrieval of latest metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
  /v2/topology/tags:
    get:
      tags:
      - Topology
      summary: List topology tags and values
      description: This request lists the available tags and their distinct values
        present in the daily topology items
      operationId: topology.tags
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target day to get latest topology statistics
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Successful retrieval of latest metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyTags_list'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
  /v2/topology/groups:
    get:
      tags:
      - Topology
      summary: List group topology per date
      description: List group topology per date
      operationId: topology_groups.list
      parameters:
      - name: name
        in: query
        description: filter results by group name
        schema:
          type: string
      - name: type
        in: query
        description: filter results by group type
        schema:
          type: string
      - name: subgroup
        in: query
        description: filter results by subgroup
        schema:
          type: string
      - name: tags
        in: query
        description: filter results by tags using the pattern tags=key:value,key:value
          etc...
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Topology resources listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Topology
      summary: Create a new group topology per date
      description: Create a new group topology which maps top level groups to subgroups
      operationId: topology_groups.create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of group topology items to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyGroups'
        required: true
      responses:
        200:
          description: Topology resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        409:
          description: Content already created for specific date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: group_resource
    delete:
      tags:
      - Topology
      summary: Delete topology of groups for a specific date
      description: Delete a list of groups (topology) for a specific date
      operationId: topology_groups.delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: groups topology definition Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/topology/groups/by_report/{report_name}:
    get:
      tags:
      - Topology
      summary: List group topology per date and filter by report
      description: List group topology per date and filter by report
      operationId: topology_groups_report.list
      parameters:
      - name: report_name
        in: path
        description: filter results based on selected report
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: filtered topology resources listed based on report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/topology/service-types:
    get:
      tags:
      - Topology
      summary: List types of available service types per date
      description: List types of available service types per date
      operationId: topology_services.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Topology resources listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Topology
      summary: Create a new list of service types per date
      description: Creates a new list of available service types per tenant for a
        specific date
      operationId: topology_services.create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of service type items to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyServiceTypes'
        required: true
      responses:
        200:
          description: Topology resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        409:
          description: Content already created for specific date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: group_resource
    delete:
      tags:
      - Topology
      summary: Delete list of available service types
      description: Delete list of available service types for a specific date
      operationId: topology_services.delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: list of service types deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/topology/endpoints:
    get:
      tags:
      - Topology
      summary: List topology endpoints per date
      description: List topology endpoints per date
      operationId: topology_endpoints.list
      parameters:
      - name: name
        in: query
        description: filter results by group name
        schema:
          type: string
      - name: type
        in: query
        description: filter results by group type
        schema:
          type: string
      - name: service
        in: query
        description: filter results by service
        schema:
          type: string
      - name: hostname
        in: query
        description: filter results by hostname
        schema:
          type: string
      - name: tags
        in: query
        description: filter results by tags using the pattern tags=key:value,key:value
          etc...
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Topology resource listed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    post:
      tags:
      - Topology
      summary: Create a new endpoints topology resource
      description: Create a new endpoints topology resource which maps endpoints to
        endpoint groups
      operationId: topology_endpoints.create
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of endpoint topology items to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopologyEndpoints'
        required: true
      responses:
        200:
          description: Topology resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: endpoint_resource
    delete:
      tags:
      - Topology
      summary: Delete topology of endpoints for a specific date
      description: Delete a list of endpoints (topology) for a specific date
      operationId: topology_endpoints.delete
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: Endpoint topology definition Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /topology/endpoints/by_report/{report_name}:
    get:
      tags:
      - Topology
      summary: List endpoint topology per date and filter by report
      description: List endpoint topology per date and filter by report
      operationId: topology_endpoints_report.list
      parameters:
      - name: report_name
        in: path
        description: filter results based on selected report
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: filtered topology resources listed based on report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/metrics:
    get:
      tags:
      - Metrics
      summary: List of metrics
      description: List of metrics
      operationId: metrics.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: list of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/metrics/by_report/{report_name}:
    get:
      tags:
      - Metrics
      summary: List metrics per date and filter by report
      description: List metrics per date and filter by report
      operationId: metrics_report.list
      parameters:
      - name: report_name
        in: path
        description: filter results based on selected report
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      responses:
        200:
          description: filtered metric list based on the metric profile attached to
            the report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/admin/metrics:
    get:
      tags:
      - Metrics
      summary: List of metrics (administrative)
      description: List of metrics from an admin point of view
      operationId: metrics_admin.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: list of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Metrics
      summary: Update list of metrics (administrative)
      description: Update the list of metrics
      operationId: metrics_admin.update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      requestBody:
        description: Json description of endpoint topology items to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricList'
        required: true
      responses:
        200:
          description: Topology resource Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: endpoint_resource
  /latest/{report_name}/{lgroup_type}:
    get:
      tags:
      - Latest
      summary: List latest metric data for available in a specific report
      description: This request lists the latest metric data  and supports filtering
        by status value. If user uses filter=non-ok will get all non ok statuses
      operationId: statusLatestList
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: date
        in: query
        description: target day to get latest metric data
        schema:
          type: string
          default: todays_date_zulu_format
      - name: filter
        in: query
        description: 'filter by statuses: ok, non-ok, critical, warning, ok, unknown,
          missing, all'
        schema:
          type: string
          default: all
      - name: limit
        in: query
        description: limit latest results by number
        schema:
          type: string
          default: "500"
      - name: strict
        in: query
        description: the servce will return only the latest entry grouped by endpoint_group/host/service/metric
        schema:
          type: string
          default: "false"
      responses:
        200:
          description: Successful retrieval of latest metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDataList'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
  /v2/latest/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      tags:
      - Latest
      summary: List latest metric data for a target endpoint group and filter by status
      description: This request lists the latest metric data available for a specific
        endpoint group and supports filtering by status value. If user uses filter=non-ok
        will get all non ok statuses
      operationId: statusLatestListGroup
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: date
        in: query
        description: target day to get latest metric data
        schema:
          type: string
          default: todays_date_zulu_format
      - name: filter
        in: query
        description: 'filter by statuses: ok, non-ok, critical, warning, ok, unknown,
          missing, all'
        schema:
          type: string
          default: all
      - name: limit
        in: query
        description: limit latest results by number
        schema:
          type: string
          default: "500"
      - name: strict
        in: query
        description: the servce will return only the latest entry grouped by endpoint_group/host/service/metric
        schema:
          type: string
          default: "false"
      responses:
        200:
          description: Successful retrieval of latest metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDataList'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      tags:
      - Status
      summary: List status results for a given endpoint group (i.e. Group_A)
      description: This request is used to retrieve all the statuses of endpoint groups
        that match the given criteria of report name, group type and optionally group
        name.
      operationId: statusEndpointGroupsNameFilterID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /status/{report_name}/{lgroup_type}:
    get:
      tags:
      - Status
      summary: List status results for all endpoint groups of a given type
      description: This request is used to retrieve all the statuses of endpoint groups
        that match the given criteria of report name, group type and optionally group
        name.
      operationId: statusEndpointGroupsID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      tags:
      - Status
      summary: List status results for all services of a given endpoint group
      description: This method may be used to retrieve a specific service type status
        timeline (applies for a specific service endpoint group)
      operationId: statusServicesID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      tags:
      - Status
      summary: List status results for a given service (under a given endpoint group)
      description: This method may be used to retrieve a specific service type status
        timeline (applies for a specific service endpoint group)
      operationId: statusServicesNameFilteredID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      tags:
      - Status
      summary: List status results for all endpoints (under a given service and endpoint
        group)
      description: This method may be used to retrieve a specific service endpoint
        status timeline (applies on a specific service type)
      operationId: statusEndpointID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEndpointResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusEndpointResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}:
    get:
      tags:
      - Status
      summary: List status results for a given endpoint (under a given service and
        endpoint group)
      description: This method may be used to retrieve a specific service endpoint
        status timeline (applies on a specific service type)
      operationId: statusEndpointNameFilteredID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEndpointResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusEndpointResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics:
    get:
      tags:
      - Status
      summary: List status results for all metrics (under a given endpoint, service
        and endpoint group)
      description: This method may be used to retrieve a specific and detailed metric
        result.
      operationId: statusMetricID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusMetricResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusMetricResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics/{metric_name}:
    get:
      tags:
      - Status
      summary: List status results for a given metric (under a given endpoint, service
        and endpoint group)
      description: This method may be used to retrieve a specific and detailed metric
        result.
      operationId: statusMetricNameFilteredID
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      - name: metric_name
        in: path
        description: name of the metric profile
        required: true
        schema:
          type: string
          default: argo.mem.check
      responses:
        200:
          description: Successful retrieval of statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusMetricResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/StatusMetricResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/endpoints:
    get:
      tags:
      - Status
      summary: Flat List status results of all endpoints
      description: This method returns a flat list of all endpoint status results
        based on a given report.
      operationId: statusFlatEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatEndpointStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatEndpointStatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/status/{report_name}/metrics/{metric_name}:
    get:
      tags:
      - Status
      summary: Flat List endpoint metric results by metric name
      description: This method returns a flat list of all endpoint status results
        based on a given metric.
      operationId: statusFlatMetrics
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: metric_name
        in: path
        description: The name of the probe (metric)
        required: true
        schema:
          type: string
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatMetricsStatusResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatMetricsStatusResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/metric_result/{endpoint}:
    get:
      tags:
      - MetricResult
      summary: Retrieve a list of all metric results for a specific day and a specific
        host
      description: Retrieve a list with  the full output of all metric results for
        a specific date
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: endpoint
        in: path
        description: The fqdn of the monitored host
        required: true
        schema:
          type: string
      - name: exec_time
        in: query
        description: 'The execution date of query in zulu format. In order to get
          the correct execution time get status results for all metrics (under a given
          endpoint, service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics
          List) '
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: filter
        in: query
        description: 'filter by statuses: ok, non-ok, critical, warning, ok, unknown,
          missing, all'
        schema:
          type: string
          default: all
      responses:
        200:
          description: Successful retrieval of multiple metric results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleMetricResults'
            application/xml:
              schema:
                $ref: '#/components/schemas/MultipleMetricResults'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/metric_result/{endpoint}/{metric_name}:
    get:
      tags:
      - MetricResult
      summary: Retrieve the full output of a metric result
      description: Retrieve the full output of a metric result
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: endpoint
        in: path
        description: The fqdn of the monitored host
        required: true
        schema:
          type: string
      - name: metric_name
        in: path
        description: The name of the probe (metric)
        required: true
        schema:
          type: string
      - name: exec_time
        in: query
        description: 'The execution date of query in zulu format. In order to get
          the correct execution time get status results for all metrics (under a given
          endpoint, service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics
          List) '
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/MetricResult'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      tags:
      - Results
      summary: List A/R results of all services (under a given endpoint group)
      description: This method retrieves the results of a specified service flavor
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsServiceGroup
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      tags:
      - Results
      summary: List A/R results of a given service (under a given endpoint group)
      description: This method retrieves the results of a specified service flavor
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsServiceGroupWithServiceFilter
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      tags:
      - Results
      summary: List A/R results of all services (under a given endpoint group)
      description: This method retrieves the results of a specified service flavor
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsServiceEndpointGroup
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      tags:
      - Results
      summary: List A/R results of a given service (under a given endpoint group)
      description: This method retrieves the results of a specified service flavor
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsServiceEndpointGroupWithServiceFilter
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ServiceResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      tags:
      - Results
      summary: List A/R results of all endpoints (under a given service)
      description: This method retrieves the results of specified service's endpoints
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsGroupServiceEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  ? /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}
  : get:
      tags:
      - Results
      summary: List A/R results of a given endpoint (under a given service)
      description: This method retrieves the results of a specified endpoint that
        where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsGroupServiceEndpoint
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      tags:
      - Results
      summary: List A/R results of all endpoints (under a given service)
      description: This method retrieves the results of endpoints under a specific
        service that where computed based on a given report. Results can be retrieved
        on daily, monthly or custom granularity.
      operationId: resultsServiceEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}:
    get:
      tags:
      - Results
      summary: List A/R results of a given endpoint (under a given service)
      description: This method retrieves the results of a specified endpoint that
        where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsServiceEndpoint
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: service_name
        in: path
        description: service name of the probes
        required: true
        schema:
          type: string
          default: argo.test.metric.profile.service.1
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/endpoints:
    get:
      tags:
      - Results
      summary: List A/R results of all endpoints (under a given group)
      description: This method retrieves the results of specified group's endpoints
        that where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsGroupEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/endpoints/{endpoint_name}:
    get:
      tags:
      - Results
      summary: List A/R results of a given endpoint (under a given group)
      description: This method retrieves the results of a specified endpoint that
        where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsGroupEndpoint
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/endpoints:
    get:
      tags:
      - Results
      summary: List A/R results of all endpoints (under a given group)
      description: This method retrieves the results of endpoints under a specific
        group that where computed based on a given report. Results can be retrieved
        on daily, monthly or custom granularity.
      operationId: resultsEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}/endpoints/{endpoint_name}:
    get:
      tags:
      - Results
      summary: List A/R results of a given endpoint (under a given group)
      description: This method retrieves the results of a specified endpoint that
        where computed based on a given report. Results can be retrieved on daily
        or monthly granularity.
      operationId: resultsEndpoint
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      - name: endpoint_name
        in: path
        description: endpoint_name of the probes
        required: true
        schema:
          type: string
          default: example1.com
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/endpoints:
    get:
      tags:
      - Results
      summary: Flat List A/R results of all endpoints
      description: This method returns a flat list of all endpoint a/r results based
        on a given report. Results can be retrieved on daily, monthly or custom granularity.
      operationId: resultsFlatEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlatEndpointResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/FlatEndpointResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}:
    get:
      tags:
      - Results
      summary: List A/R results for a given endpoint group
      description: his method retrieves the results of a specified endpoint group
        or multiple endpoint groups of a specific type that where computed based on
        a given report. Results can be retrieved on daily, monthly or custom granularity.
      operationId: resultsEndpointGroupWithServiceFilter
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: group_name
        in: path
        description: group names of the probes
        required: true
        schema:
          type: string
          default: ALL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointGroupResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointGroupResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{group_type}:
    get:
      tags:
      - Results
      summary: List A/R results for a given type of supergroup
      description: his method retrieves the results of a specified endpoint group
        or multiple endpoint groups of a specific type that where computed based on
        a given report. Results can be retrieved on daily, monthly or custom granularity.
      operationId: resultsEndpointGroupWithoutSuperGroup
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: group_type
        in: path
        description: group type of the probes
        required: true
        schema:
          type: string
          default: SuperGroup
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/GroupResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/results/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      tags:
      - Results
      summary: List A/R results for a given endpoint group
      description: This method retrieves the results of a specified endpoint group
        or multiple endpoint groups of a specific type that where computed based on
        a given report. Results can be retrieved on daily, monthly or custom granularity.
      operationId: resultsGroupWithServiceFilter
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: lgroup_type
        in: path
        description: endpoing group type of the probes
        required: true
        schema:
          type: string
          default: EndpointGroup
      - name: lgroup_name
        in: path
        description: endpoint group names of the probes
        required: true
        schema:
          type: string
          default: Group_A
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointGroupResultsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/EndpointGroupResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/issues/{REPORT_NAME}/endpoints:
    get:
      tags:
      - Issues
      summary: List problematic endpoints
      description: List endpoints that are in problematic status (critical, warning,
        missing etc)
      operationId: issues.ListEndpoints
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: filter
        in: query
        description: name of the problematic status to filter by
        schema:
          type: string
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with problematic endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Endpoint_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/status/metrics:
    get:
      tags:
      - Trends
      summary: List trends for top status service endpoint metrics
      description: List top status service endpoint metrics by status events
      operationId: trends.StatusMetrics
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with status trends for metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_status_metrics_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/status/metrics/tags:
    get:
      tags:
      - Trends
      summary: List trends by tags for top status service endpoint metrics
      description: List top status service endpoint metrics by tags and status events
      operationId: trends.StatusMetricsTags
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with status trends for metrics by tags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_status_metrics_tags_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/status/endpoints:
    get:
      tags:
      - Trends
      summary: List trends for top status service endpoints
      description: List top status service endpoints by status events
      operationId: trends.StatusEndpoints
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with status trends for endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_status_endpoints_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/status/services:
    get:
      tags:
      - Trends
      summary: List trends for top status service trends
      description: List top status services by status events
      operationId: trends.StatusServices
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with status trends for services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_status_services_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/status/groups:
    get:
      tags:
      - Trends
      summary: List trends for top status endpoint group trends
      description: List top endpoint groups by status events
      operationId: trends.StatusEgroups
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with status trends for endpoint groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_status_egroups_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/flapping/metrics:
    get:
      tags:
      - Trends
      summary: List trends for top flapping service endpoint metrics
      description: List top flapping service endpoint metrics (that change status
        frequently)
      operationId: trends.FlappingMetrics
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with flapping metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_metrics_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/flapping/metrics/tags:
    get:
      tags:
      - Trends
      summary: List trends for top flapping service endpoint metrics by tag
      description: List top flapping service endpoint metrics (that change status
        frequently)
      operationId: trends.FlappingMetricsTags
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with flapping metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_metrics_tags_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/flapping/endpoints:
    get:
      tags:
      - Trends
      summary: List trends for top flapping service endpoints
      description: List top flapping service endpoints (that change status frequently)
      operationId: trends.FlappingEdpoints
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with flapping endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_endpoints_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/flapping/services:
    get:
      tags:
      - Trends
      summary: List trends for top flapping services
      description: List top flapping services (that change status frequently)
      operationId: trends.FlappingServices
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with flapping services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_services_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/trends/{REPORT_NAME}/flapping/groups:
    get:
      tags:
      - Trends
      summary: List trends for top flapping endpoint groups
      description: List top flapping endpoint groups (that change status frequently)
      operationId: trends.FlappingGroups
      parameters:
      - name: date
        in: query
        description: target date to retrieve a historic version of the profile
        schema:
          type: string
          default: todays_date in YYYY-MM-DD format
      - name: start_date
        in: query
        description: start date used to define a range of results
        schema:
          type: string
      - name: end_date
        in: query
        description: end date used to define a range of results
        schema:
          type: string
      - name: top
        in: query
        description: define a number of top results
        schema:
          type: string
      - name: granularity
        in: query
        description: use granularity=monthly to get a monthly view of the results
        schema:
          type: string
          default: empty
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: REPORT_NAME
        in: path
        description: name of the report
        required: true
        schema:
          type: string
      responses:
        200:
          description: A list with flapping endpoint groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trends_groups_list'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
  /v2/factors:
    get:
      tags:
      - Factors
      summary: List Factors Requests
      description: This method can be used to retrieve a list of factors.
      operationId: factorsId
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Successful retrieval of factors
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/FactorsResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FactorsResponse'
        400:
          description: Item not found
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
  /v2/feeds/topology:
    get:
      tags:
      - Feeds
      summary: List of topology feed parameters
      description: list of topology feed parameters
      operationId: feeds.topology.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with a topology feed parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsTopo'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Feeds
      summary: update toplogy feed parameters
      description: update topology feeds parameters
      operationId: feeds.topo.update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the feeds topology resource to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedsTopo'
        required: true
      responses:
        201:
          description: Feeds topology resource Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: feeds_topo_resource
  /feeds/weights:
    get:
      tags:
      - Feeds
      summary: List of weights feed parameters
      description: list of weights feed parameters
      operationId: feeds.weights.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with weights feed parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsTopo'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Feeds
      summary: update weights feeds parameters
      description: update weights feeds parameters
      operationId: feeds.weights.update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the feeds weights resource to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedsTopo'
        required: true
      responses:
        200:
          description: Feeds weights resource Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: feeds_topo_resource
  /v2/feeds/data:
    get:
      tags:
      - Feeds
      summary: List of data feed parameters
      description: list of data feed parameters
      operationId: feeds.data.list
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: A list with data feed parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedsData'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
    put:
      tags:
      - Feeds
      summary: update data feeds parameters
      description: update data feeds parameters
      operationId: feeds.data.update
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the feeds data resource to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedsData'
        required: true
      responses:
        200:
          description: Feeds data resource Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Bad request due to malformed JSON in put body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: feeds_data_resource
  /v2/recomputations/{ID}/status:
    post:
      tags:
      - Recomputations
      summary: change recomputation status
      description: change status of a recomputation with a given ID
      parameters:
      - name: ID
        in: path
        description: the recomputation id
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: incoming status recomputation
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/recomputation_status'
        required: false
      responses:
        200:
          description: Successful change of status in recomputation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
      x-codegen-request-body-name: status
    delete:
      tags:
      - Recomputations
      summary: reset a recomputation status
      description: reset status for a given recomputation
      parameters:
      - name: ID
        in: path
        description: the recomputation id
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Successful reset status of recomputation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/recomputations/{ID}:
    get:
      tags:
      - Recomputations
      summary: Get Recomputation details
      description: Get details of a recomputation with id ID.
      parameters:
      - name: ID
        in: path
        description: the recomputation id
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: Successful retrieval of recomputation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecomputationsListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecomputationsListResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
    delete:
      tags:
      - Recomputations
      summary: Delete a specific recomputation
      description: Delete a specific recomputation using its ID.
      parameters:
      - name: ID
        in: path
        description: the recomputation id
        required: true
        schema:
          type: string
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      responses:
        200:
          description: 'Successful deletion of recomputation '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        404:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
  /v2/recomputations:
    get:
      tags:
      - Recomputations
      summary: List Recomputation Requests
      description: This method can be used to retrieve a list of recomputation requests.
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: date
        in: query
        description: specific date in YYYY-MM-DD format to retrieve relevant recomputations
          that cover this date
        schema:
          type: string
      - name: report
        in: query
        description: filter recomputation requests by report name
        schema:
          type: string
      responses:
        200:
          description: Successful retrieval of recomputations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecomputationsListResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/RecomputationsListResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
    post:
      tags:
      - Recomputations
      summary: Create a new recomputation
      description: This method can be used to create a new recomputation request.
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      requestBody:
        description: Json description of the recomputation to be created
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/recomputation_request'
        required: true
      responses:
        200:
          description: Recomputation Request Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self_reference'
            application/xml:
              schema:
                $ref: '#/components/schemas/Self_reference'
        400:
          description: Bad request due to malformed JSON in post body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: Unauthorized user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status_error'
      x-codegen-request-body-name: recomputation_request
  /v2/version:
    get:
      tags:
      - Version
      summary: List API Version information
      description: List api version information such as release version, commit hash
        etc
      responses:
        200:
          description: Successful retrieval of version info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
            application/xml:
              schema:
                $ref: '#/components/schemas/Version'
  /v3/results/{report_name}:
    get:
      tags:
      - Availability & Reliability Results (v3)
      summary: List A/R results for top level supergroups and included groups
      description: his method retrieves the a/r results of top level supergroups and
        their included groups
      operationId: resultsSupergroupsAndGroups
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: granularity
        in: query
        description: daily, monthly or custom granularity
        schema:
          type: string
          default: daily
      responses:
        200:
          description: Successful retrieval of results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupergroupResultsResponse'
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                
  /v3/results/{report_name}/id/{resource_id}:
    get:
      tags:
      - Availability & Reliability Results (v3)
      summary: List Status result for a specific endpoint by providing it's resource id
      description: this method retrieves the latest status result or the status timeline for a specific endpoint by providing its resource-id
      operationId: arEndpointsByID
      externalDocs:
        description: Argo-web-api documentation on ar results (v3)
        url: https://argoeu.github.io/argo-web-api/docs/apiv3/v3_ar_results#get-list-availability-and-reliability-results-for-endpoints-with-specific-resource-id
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: Default
      - name: resource_id
        in: path
        description: the resource id of the endpoint
        required: true
        schema:
          type: string
          default: resource-id
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: false
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: false
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      responses:
        200:
          description: Successful retrieval of latest availability/reliability results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArEndpointsIdResponse'
              examples:
                daily a/r results:
                  value:
                    id: simple.queue.101
                    endpoints:
                      - name: q01.example.com
                        service: compute.queue
                        group: infra01
                        info:
                          id: simple.queue.101
                          url: https://q01.example.com/broker
                        results:
                         - date: '2022-10-12'
                           availability: 100
                           reliability: 100
                           uptime: 1
                           unknown: 0
                           downtime: 0
                         - date: '2022-10-13'
                           availability: 80
                           reliability: 80
                           uptime: 0.8
                           unknown: 0
                           downtime: 0   
                monthly a/r results:
                  value:
                    id: simple.queue.101
                    endpoints:
                      - name: q01.example.com
                        service: compute.queue
                        group: infra01
                        info:
                          id: simple.queue.101
                          url: https://q01.example.com/broker
                        results:
                         - date: '2022-10'
                           availability: 98.53
                           reliability: 98.53
                           uptime: 0.9853
                           unknown: 0
                           downtime: 0
                      
             

        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string                
                

  /v3/status/{report_name}:
    get:
      tags:
      - Status Results (v3)
      summary: List Status results for top level groups and included endpoints
      description: his method retrieves the status result timeline for top level groups
        and their included endpoints
      operationId: statusGroupsEndpoints
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: CRITICAL
      - name: start_time
        in: query
        description: start date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        required: true
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: view
        in: query
        description: Use view=details to enrich status results with additional information
          such as threshold rules that may have been applied. Use view=latest to display
          only the latest status for each item.
        schema:
          type: string
          default: "false"
      responses:
        200:
          description: Successful retrieval of status timelines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusGroupsEndpointsResponse'
            
        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                
                
  /v3/status/{report_name}/id/{resource_id}:
    get:
      tags:
      - Status Results (v3)
      summary: List Status result for a specific endpoint by providing it's resource id
      description: this method retrieves the latest status result or the status timeline for a specific endpoint by providing its resource-id
      operationId: statusEndpointsByID
      externalDocs:
        description: Argo-web-api documentation on Status results (v3)
        url: https://argoeu.github.io/argo-web-api/docs/apiv3/v3_status_results#get-list-latest-status-result-for-a-specific-endpoint-using-its-resource-id
      parameters:
      - name: x-api-key
        in: header
        description: the x-api-key
        required: true
        schema:
          type: string
          default: SecretKey123
      - name: report_name
        in: path
        description: report the probes belong to
        required: true
        schema:
          type: string
          default: Default
      - name: resource_id
        in: path
        description: the resource id of the endpoint
        required: true
        schema:
          type: string
          default: resource-id
      - name: start_time
        in: query
        description: start date of query in zulu format
        schema:
          type: string
          default: 2006-01-01T00:04:05Z
      - name: end_time
        in: query
        description: end date of query in zulu format
        schema:
          type: string
          default: 2006-01-03T15:04:05Z
      - name: view
        in: query
        description: Use view=latest to display the latest (current) status of the endpoint. Use view=details to display the full timeline of events (status changes) for the item
        schema:
          type: string
          default: "false"
      responses:
        200:
          description: Successful retrieval of latest status result or timeline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusEndpointsIdResponse'
              examples:
                latest status result:
                  value:
                    id: simple.queue.101
                    endpoints:
                      - hostname: q01.example.com
                        service: compute.queue
                        group: Infra-01
                        statuses:
                         - timestamp: '2022-10-12T00:00:00Z'
                           status: OK
                status timeline:
                  value:
                    id: simple.queue.101
                    endpoints:
                      - hostname: q01.example.com
                        service: compute.queue
                        group: Infra-01
                        statuses:
                         - timestamp: '2022-10-12T00:00:00Z'
                           status: OK
                         - timestamp: '2022-10-12T05:00:00Z'
                           status: WARNING
                         - timestamp: '2022-10-12T12:35:00Z'
                           status: OK
                         - timestamp: '2022-10-12T23:59:59'
                           status: OK
             

        400:
          description: Item not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        401:
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: string
                  details:
                    type: string
        406:
          description: Content Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status_error'
        500:
          description: internal server error
          content:
            application/json:
              schema:
                type: string
                
components:
  schemas:
    Endpoint_list:
      type: array
      items:
        $ref: '#/components/schemas/Endpoint'
    Endpoint:
      type: object
      properties:
        endpoint:
          type: string
          description: name of the endpoint
        endpoint_group:
          type: string
          description: name of the group the endpoint belongs to
        service:
          type: string
          description: name of the service the endpoint hosts
        status:
          type: string
          description: status value
        timestamp:
          type: string
          description: ISO8601 timestamp since when the status last updated
        info:
          type: object
          properties: {}
          description: optional dictionary with various other information about the
            endpoint
    TopologyEndpoint:
      type: object
      properties:
        group:
          type: string
          description: name of the endpoint group
        type:
          type: string
          description: 'type of the endpoint group, for example: SITES or SERVICEGROUPS
            etc... '
        service:
          type: string
          description: service type of the endpoint belonging to the endpoint group
        hostname:
          type: string
          description: hostname of the endpoint belonging to the endpoint group
        tags:
          type: object
          properties: {}
          description: key value tags
    TopologyEndpoints:
      type: array
      items:
        $ref: '#/components/schemas/TopologyEndpoint'
    TopologyGroups:
      type: array
      items:
        $ref: '#/components/schemas/TopologyGroup'
    TopologyGroup:
      type: object
      properties:
        group:
          type: string
          description: name of the topology group
        type:
          type: string
          description: 'type of the topology group, eg. PROJECTS, NGIS etc... '
        subgroup:
          type: string
          description: name of subgroup contained in the top level group
        tags:
          type: object
          properties: {}
          description: key value tags
    TopologyServiceTypes:
      type: array
      items:
        $ref: '#/components/schemas/TopologyServiceType'
    TopologyServiceType:
      type: object
      properties:
        name:
          type: string
          description: name of the service type
        description:
          type: string
          description: short description of the service type
        tags:
          type: array
          items:
            type: string
    MetricList:
      type: array
      items:
        $ref: '#/components/schemas/Metric'
    Metric:
      type: object
      properties:
        name:
          type: string
          description: the name of the metric
        tags:
          type: array
          description: a list of tags attached to the metric
          items:
            type: string
    StatusGroupsEndpointsResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              statuses:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                    status:
                      type: string
              endpoints:
                type: array
                items:
                  type: object
                  properties:
                    hostname:
                      type: string
                    service:
                      type: string
                    statuses:
                      type: array
                      items:
                        type: object
                        properties:
                          timestamp:
                            type: string
                          status:
                            type: string
    StatusEndpointsIdResponse:
      type: object
      properties:
        id: 
          type: string
        endpoints:
          type: array
          items:
            type: object
            properties:
              hostname:
                type: string
              service:
                type: string
              info:
                type: object
              statuses:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                    status:
                      type: string
    ArEndpointsIdResponse:
      type: object
      properties:
        id: 
          type: string
        endpoints:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              service:
                type: string
              group:
                type: string
              info:
                type: object
              results:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    availability:
                      type: number
                    reliability:
                      type: number
                    unknown:
                      type: number
                    uptime:
                      type: number
                    downtime:
                      type: number
    FactorsResponse:
      type: object
      properties:
        factors:
          type: array
          description: List of endpoint groups and their relevant weights
          items:
            type: object
            properties:
              site:
                type: string
                description: The name of the endpoint group
              weight:
                type: string
                description: The weighting factor of the given endpoint group. The
                  higher the factor the more significant the contribution of the given
                  endpoint group in the overall A/R results.
    RecomputationsListResponse:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/recomputation'
    timestamp_value:
      type: object
      properties:
        timestamp:
          type: string
        value:
          type: string
        affected_by_threshold_rule:
          type: boolean
    results:
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: string
          availability:
            type: string
          reliability:
            type: string
          unknown:
            type: string
          uptime:
            type: string
          downtime:
            type: string
    GroupResultsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              results:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                    availability:
                      type: string
                    reliability:
                      type: string
    SupergroupResultsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              results:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    availability:
                      type: number
                    reliability:
                      type: number
              groups:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                    availability:
                      type: number
                    reliability:
                      type: number
                    unknown:
                      type: number
                    uptime:
                      type: number
                    downtime:
                      type: number
    EndpointGroupResultsResponse:
      type: object
      properties:
        root:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              endpoints:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    results:
                      $ref: '#/components/schemas/results'
    ServiceResultsResponse:
      type: object
      properties:
        root:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              serviceflavors:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    results:
                      $ref: '#/components/schemas/results'
    FlatEndpointStatusResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              service:
                type: string
              supergroup:
                type: string
              statuses:
                type: array
                items:
                  $ref: '#/components/schemas/timestamp_value'
        pageSize:
          type: integer
        nextPageToken:
          type: string
    FlatMetricsStatusResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              service:
                type: string
              supergroup:
                type: string
              metric:
                type: string
              statuses:
                type: array
                items:
                  $ref: '#/components/schemas/timestamp_value'
        pageSize:
          type: integer
        nextPageToken:
          type: string
    FlatEndpointResultsResponse:
      type: object
      properties:
        endpoints:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              service:
                type: string
              supergroup:
                type: string
              results:
                $ref: '#/components/schemas/results'
        pageSize:
          type: integer
        nextPageToken:
          type: string
    EndpointResultsResponse:
      type: object
      properties:
        root:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              serviceflavors:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    endpoints:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          type:
                            type: string
                          info:
                            type: object
                            properties: {}
                          results:
                            $ref: '#/components/schemas/results'
    StatusEndpointResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              services:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    endpoints:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          statuses:
                            type: array
                            items:
                              $ref: '#/components/schemas/timestamp_value'
    StatusMetricResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              services:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    type:
                      type: string
                    endpoints:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          metrics:
                            type: array
                            items:
                              $ref: '#/components/schemas/timestamp_value'
    StatusResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
              statuses:
                type: array
                items:
                  $ref: '#/components/schemas/timestamp_value'
    Status:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
    MetricDataList:
      type: object
      properties:
        status:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
        data:
          type: object
          properties:
            metric_data:
              type: array
              items:
                $ref: '#/components/schemas/MetricData'
    MetricData:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        endpoint:
          type: string
        metric:
          type: string
        timestamp:
          type: string
        status:
          type: string
    MultipleMetricResults:
      type: object
      properties:
        root:
          type: array
          items:
            type: object
            properties:
              Name:
                type: string
                description: The fqdn of the monitored endpoint
              Metrics:
                type: array
                items:
                  type: object
                  properties:
                    Name:
                      type: string
                      description: The name of the probe (metric)
                    Service:
                      type: string
                      description: Name of the corresponding service type
                    Details:
                      type: array
                      items:
                        type: object
                        properties:
                          Timestamp:
                            type: string
                            description: The execution time of the probe (metric)
                          Value:
                            type: string
                            description: The resulting state of the probe (metric)
                          Summary:
                            type: string
                            description: A summary of the metric result
                          Message:
                            type: string
                            description: The detailed output message of the probe
                              (metric)
                          actual_data:
                            type: string
                            description: Actual numerical data gathered by the probe
                              (optional)
                          threshold_rule:
                            type: string
                            description: Threshold rule applied to the specific metric
                              (optional)
                          original_status:
                            type: string
                            description: Original status of probe before applying
                              threhsold rule (optional)
    MetricResult:
      type: object
      properties:
        root:
          type: array
          items:
            type: object
            properties:
              Name:
                type: string
                description: The fqdn of the monitored endpoint
              Metrics:
                type: array
                items:
                  type: object
                  properties:
                    Name:
                      type: string
                      description: The name of the probe (metric)
                    Details:
                      type: array
                      items:
                        type: object
                        properties:
                          Timestamp:
                            type: string
                            description: The execution time of the probe (metric)
                          Value:
                            type: string
                            description: The resulting state of the probe (metric)
                          Summary:
                            type: string
                            description: A summary of the metric result
                          Message:
                            type: string
                            description: The detailed output message of the probe
                              (metric)
    RenewedToken:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: object
          properties:
            api_key:
              type: string
    Self_reference:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: object
          properties:
            id:
              type: string
            links:
              type: object
              properties:
                self:
                  type: string
    Metric_profile_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Metric_profile'
    recomputation:
      type: object
      properties:
        id:
          type: string
        requester_name:
          type: string
        requester_email:
          type: string
        report:
          type: string
        reason:
          type: string
          description: The reason why this request has been submitted
        start_time:
          type: string
          description: The start date regarding this A/R recomputation
        end_time:
          type: string
          description: The end date regarding this A/R recomputation
        exclude:
          type: array
          description: Comma separated list of excluded endpoint groups
          items:
            type: string
        status:
          type: string
          description: Can be one of approved, rejected, pending, running or done
        timestamp:
          type: string
          description: Creation timestamp
        history:
          type: array
          description: List of status changes
          items:
            $ref: '#/components/schemas/recomputation_status_item'
    recomputation_status_item:
      type: object
      properties:
        status:
          type: string
          description: Can be one of approved, rejected, pending, running or done
        timestamp:
          type: string
          description: zulu format timestamp when the status was changed
    recomputation_status:
      type: object
      properties:
        status:
          type: string
          description: Can be one of approved, rejected, pending, running or done
    recomputation_request:
      type: object
      properties:
        requester_name:
          type: string
          description: Name of the person submitting the recompuatation request
        requester_email:
          type: string
          description: Email of the person submitting the recomputation request
        reason:
          type: string
          description: A reason why this request is being submitted
        start_time:
          type: string
          description: start date for A/R recomputation in zulu format
          default: 2006-01-03T15:04:05Z
        end_time:
          type: string
          description: end date for A/R recomputation in zulu format
          default: 2006-01-03T15:04:05Z
        exclude:
          type: array
          description: Comma separated list of endpoint groups to exclude
          items:
            type: string
        exclude_metrics:
          type: array
          description: Optional definition to recompute by excluding specific metrics
          items:
            type: object
            properties:
              metric:
                type: string
                description: Metric name to be excluded
              hostname:
                type: object
                description: Hostname of a specific host to narrow down metric exclusion
                  (optional)
              service:
                type: object
                description: name of a specific service type to narrow down metric
                  exclusion (optional)
              group:
                type: object
                description: name of a specific group of endpoints to narrow down
                  metric exclusion (optional)
        report:
          type: string
          description: Name of job report
    Metric_profile:
      type: object
      properties:
        id:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Service:
      type: object
      properties:
        name:
          type: string
        metrics:
          type: array
          items:
            type: string
    Status_error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        details:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
              code:
                type: string
              details:
                type: string
    Trends_status_metrics:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        endpoint:
          type: string
        metric:
          type: string
        status:
          type: string
        duration_in_minutes:
          type: integer
    Trends_status_endpoints:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        endpoint:
          type: string
        status:
          type: string
        events:
          type: integer
    Trends_status_services:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        status:
          type: string
        events:
          type: integer
    Trends_status_egroups:
      type: object
      properties:
        endpoint_group:
          type: string
        status:
          type: string
        events:
          type: integer
    Trends_metrics:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        endpoint:
          type: string
        metric:
          type: string
        flapping:
          type: integer
    Trends_endpoints:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        endpoint:
          type: string
        flapping:
          type: integer
    Trends_services:
      type: object
      properties:
        endpoint_group:
          type: string
        service:
          type: string
        flapping:
          type: integer
    Trends_groups:
      type: object
      properties:
        endpoint_group:
          type: string
        flapping:
          type: integer
    Trends_status_egroups_group:
      type: object
      properties:
        status:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_egroups'
    Trends_status_services_group:
      type: object
      properties:
        status:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_services'
    Trends_status_endpoints_group:
      type: object
      properties:
        status:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_endpoints'
    Trends_status_metrics_tags_group:
      type: object
      properties:
        tag:
          type: string
        status:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_metrics'
    Trends_status_metrics_group:
      type: object
      properties:
        status:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_metrics'
    Trends_status_egroups_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_egroups_group'
    Trends_status_services_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_services_group'
    Trends_status_endpoints_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_endpoints_group'
    Trends_status_metrics_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_metrics_group'
    Trends_status_metrics_tags_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_status_metrics_tags_group'
    Trends_metrics_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_metrics'
    Trends_metrics_tags_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_metrics_tags_group'
    Trends_metrics_tags_group:
      type: object
      properties:
        tag:
          type: string
        top:
          type: array
          items:
            $ref: '#/components/schemas/Trends_metrics'
    Trends_endpoints_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_endpoints'
    Trends_services_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_services'
    Trends_groups_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Trends_groups'
    Downtimes_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Downtimes'
    Weights_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Weights'
    Thresholds_profile_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Thresholds_profile'
    Thresholds_profile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Threshold_rule'
    Threshold_rule:
      type: object
      properties:
        endpoint_group:
          type: string
        host:
          type: string
        metric:
          type: string
        threshold:
          type: string
    Aggregation_profile_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Aggregation_profile'
    Aggregation_profile:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        endpoint_group:
          type: string
        metric_operation:
          type: string
        profile_operation:
          type: string
        metric_profile:
          type: object
          properties:
            name:
              type: string
            id:
              type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Service_group'
    Service_group:
      type: object
      properties:
        name:
          type: string
        operation:
          type: string
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service_ops'
    Service_ops:
      type: object
      properties:
        name:
          type: string
        operation:
          type: string
    Operations_profile_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Operations_profile'
    Tenant_status_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tenant_status'
    Tenant_status:
      type: object
      properties:
        total_status:
          type: boolean
        ams:
          type: object
          properties:
            metric_data:
              type: object
              properties:
                ingestion:
                  type: boolean
                publishing:
                  type: boolean
                status_streaming:
                  type: boolean
                messages_arrived:
                  type: integer
            sync_data:
              type: object
              properties:
                ingestion:
                  type: boolean
                publishing:
                  type: boolean
                status_streaming:
                  type: boolean
                messages_arrived:
                  type: integer
        hdfs:
          type: object
          properties:
            metric_data:
              type: boolean
            sync_data:
              type: object
              additionalProperties:
                type: object
                properties:
                  downtimes:
                    type: boolean
                  group_endpoints:
                    type: boolean
                  blank_recomputation:
                    type: boolean
                  group_groups:
                    type: boolean
                  weights:
                    type: boolean
                  operations_profile:
                    type: boolean
                  metric_profile:
                    type: boolean
                  aggregation_profile:
                    type: boolean
        engine_config:
          type: boolean
        last_check:
          type: string
        name:
          type: string
        available_states:
          type: array
          items:
            type: string
        defaults:
          type: object
          properties:
            down:
              type: string
            missing:
              type: string
            unknown:
              type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    Downtimes:
      type: object
      properties:
        date:
          type: string
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/HostDowntime'
    HostDowntime:
      type: object
      properties:
        hostname:
          type: string
        service:
          type: string
        start_time:
          type: string
        end_time:
          type: string
    Weights:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        name:
          type: string
        weight_type:
          type: string
        group_type:
          type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupWeight'
    GroupWeight:
      type: object
      properties:
        name:
          type: string
        value:
          type: number
    Operations_profile:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
        name:
          type: string
        available_states:
          type: array
          items:
            type: string
        defaults:
          type: object
          properties:
            down:
              type: string
            missing:
              type: string
            unknown:
              type: string
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
    Operation:
      type: object
      properties:
        name:
          type: string
        truth_table:
          type: array
          items:
            $ref: '#/components/schemas/Truth_statement'
    Truth_statement:
      type: object
      properties:
        a:
          type: string
        b:
          type: string
        x:
          type: string
    Report_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    Report:
      type: object
      properties:
        id:
          type: string
        tenant:
          type: string
        disabled:
          type: string
        weight:
          type: string
        info:
          type: object
          properties:
            name:
              type: string
            description:
              type: string
            created:
              type: string
            updated:
              type: string
        computations:
          type: object
          properties:
            ar:
              type: boolean
            status:
              type: boolean
            trends:
              type: array
              items:
                type: string
        thresholds:
          type: object
          properties:
            availability:
              type: number
            reliability:
              type: number
            uptime:
              type: number
            unknown:
              type: number
            downtime:
              type: number
        topology_schema:
          type: object
          properties:
            group:
              type: object
              properties:
                type:
                  type: string
                group:
                  type: object
                  properties:
                    type:
                      type: string
        profiles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              name:
                type: string
        filter_tags:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
              context:
                type: string
    FeedsData:
      type: object
      properties:
        tenants:
          type: array
          items:
            type: string
    FeedsTopo:
      type: object
      properties:
        type:
          type: string
        feed_url:
          type: string
        paginated:
          type: string
        fetch_type:
          type: array
          items:
            type: string
        uid_endpoints:
          type: string
    FeedsWeights:
      type: object
      properties:
        type:
          type: string
        feed_url:
          type: string
        weight_type:
          type: string
        group_type:
          type: string
    TopologyResponse:
      type: object
      properties:
        group_count:
          type: integer
        group_type:
          type: string
        group_list:
          type: array
          items:
            type: string
        endpoint_group_count:
          type: integer
        endpoint_group_type:
          type: string
        endpoint_group_list:
          type: array
          items:
            type: string
        service_count:
          type: integer
        service_list:
          type: array
          items:
            type: string
    Tenant_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tenant'
    Users_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
    TopologyTags_list:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        data:
          type: array
          items:
            $ref: '#/components/schemas/TopologyTags'
    TopologyTags:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
          values:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                values:
                  type: array
                  items:
                    type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        api-key:
          type: string
        roles:
          type: array
          items:
            type: string
    Tenant:
      type: object
      properties:
        id:
          type: string
        info:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            description:
              type: string
            image:
              type: string
            website:
              type: string
            created:
              type: string
            updated:
              type: string
        db_conf:
          type: array
          items:
            type: object
            properties:
              store:
                type: string
              server:
                type: string
              port:
                type: integer
              username:
                type: string
              password:
                type: string
        topology:
          type: object
          properties:
            type:
              type: string
            feed:
              type: string
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              email:
                type: string
              api-key:
                type: string
              roles:
                type: array
                items:
                  type: string
    Version:
      type: object
      properties:
        release:
          type: string
        commit:
          type: string
        build_time:
          type: string
        golang:
          type: string
        compiler:
          type: string
        os:
          type: string
        architecture:
          type: string
  responses:
    404:
      description: Item not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status_error'
    406:
      description: Content Not acceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status_error'
    422:
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status_error'
    ServerError:
      description: internal server error
      content:
        application/json:
          schema:
            type: string
    Unauthorized:
      description: unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              code:
                type: string
              details:
                type: string
  parameters:
    trendsGran:
      name: granularity
      in: query
      description: use granularity=monthly to get a monthly view of the results
      schema:
        type: string
        default: empty
    profDate:
      name: date
      in: query
      description: target date to retrieve a historic version of the profile
      schema:
        type: string
        default: todays_date in YYYY-MM-DD format
    trendsStartDate:
      name: start_date
      in: query
      description: start date used to define a range of results
      schema:
        type: string
    trendsEndDate:
      name: end_date
      in: query
      description: end date used to define a range of results
      schema:
        type: string
    trendsTop:
      name: top
      in: query
      description: define a number of top results
      schema:
        type: string
    topoDate:
      name: date
      in: query
      description: target day to get latest topology statistics
      schema:
        type: string
        default: todays_date in YYYY-MM-DD format
    latestDate:
      name: date
      in: query
      description: target day to get latest metric data
      schema:
        type: string
        default: todays_date_zulu_format
    latestFilter:
      name: filter
      in: query
      description: 'filter by statuses: ok, non-ok, critical, warning, ok, unknown,
        missing, all'
      schema:
        type: string
        default: all
    latestLimit:
      name: limit
      in: query
      description: limit latest results by number
      schema:
        type: string
        default: "500"
    apiKey:
      name: x-api-key
      in: header
      description: the x-api-key
      required: true
      schema:
        type: string
        default: SecretKey123
    reportName:
      name: report_name
      in: path
      description: report the probes belong to
      required: true
      schema:
        type: string
        default: CRITICAL
    groupType:
      name: group_type
      in: path
      description: group type of the probes
      required: true
      schema:
        type: string
        default: SuperGroup
    groupName:
      name: group_name
      in: path
      description: group names of the probes
      required: true
      schema:
        type: string
        default: ALL
    lgroupName:
      name: lgroup_name
      in: path
      description: endpoint group names of the probes
      required: true
      schema:
        type: string
        default: Group_A
    lgroupType:
      name: lgroup_type
      in: path
      description: endpoing group type of the probes
      required: true
      schema:
        type: string
        default: EndpointGroup
    service_name:
      name: service_name
      in: path
      description: service name of the probes
      required: true
      schema:
        type: string
        default: argo.test.metric.profile.service.1
    endpoint_name:
      name: endpoint_name
      in: path
      description: endpoint_name of the probes
      required: true
      schema:
        type: string
        default: example1.com
    metric_name:
      name: metric_name
      in: path
      description: name of the metric profile
      required: true
      schema:
        type: string
        default: argo.mem.check
    startDate:
      name: start_time
      in: query
      description: start date of query in zulu format
      required: true
      schema:
        type: string
        default: 2006-01-01T00:04:05Z
    endDate:
      name: end_time
      in: query
      description: end date of query in zulu format
      required: true
      schema:
        type: string
        default: 2006-01-03T15:04:05Z
    Granularity:
      name: granularity
      in: query
      description: daily, monthly or custom granularity
      schema:
        type: string
        default: daily
    execDate:
      name: exec_time
      in: query
      description: 'The execution date of query in zulu format. In order to get the
        correct execution time get status results for all metrics (under a given endpoint,
        service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics
        List) '
      required: true
      schema:
        type: string
        default: 2006-01-01T00:04:05Z
    export:
      name: export
      in: query
      description: the service will respond with just a flat json user object when
        this parameter is given(export=flat)
      schema:
        type: string
    strict:
      name: strict
      in: query
      description: the servce will return only the latest entry grouped by endpoint_group/host/service/metric
      schema:
        type: string
        default: "false"
    statusView:
      name: view
      in: query
      description: Use view=details to enrich status results with additional information
        such as threshold rules that may have been applied. Use view=latest to display
        only the latest status for each item.
      schema:
        type: string
        default: "false"

