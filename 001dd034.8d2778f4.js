(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{52:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return b})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return o}));var a=t(2),s=t(6),r=(t(0),t(89)),b={id:"tenants",title:"Tenants",slug:"/"},c={unversionedId:"tenants",id:"tenants",isDocsHomePage:!1,title:"Tenants",description:"API Calls",source:"@site/docs/tenants.md",slug:"/",permalink:"/argo-web-api/docs/",version:"current",sidebar:"someSidebar",next:{title:"Feeds",permalink:"/argo-web-api/docs/feeds"}},i=[{value:"API Calls",id:"api-calls",children:[]},{value:"GET: List Tenants",id:"get-list-tenants",children:[{value:"Input",id:"input",children:[]},{value:"Response",id:"response",children:[]}]},{value:"GET: List A Specific tenant",id:"get-list-a-specific-tenant",children:[{value:"Input",id:"input-1",children:[]},{value:"Response",id:"response-1",children:[]}]},{value:"GET: List A Specific User",id:"get-list-a-specific-user",children:[{value:"Input",id:"input-2",children:[]},{value:"Response",id:"response-2",children:[]},{value:"NOTE",id:"note",children:[]}]},{value:"POST: Create a new Tenant",id:"post-create-a-new-tenant",children:[{value:"Input",id:"input-3",children:[]},{value:"Response",id:"response-3",children:[]}]},{value:"PUT: Update information on an existing tenant",id:"put-update-information-on-an-existing-tenant",children:[{value:"Input",id:"input-4",children:[]},{value:"Response",id:"response-4",children:[]}]},{value:"DELETE: Delete an existing tenant",id:"delete-delete-an-existing-tenant",children:[{value:"Input",id:"input-5",children:[]},{value:"Response",id:"response-5",children:[]}]},{value:"GET: List A Specific tenant&#39;s argo-engine status",id:"get-list-a-specific-tenants-argo-engine-status",children:[{value:"Input",id:"input-6",children:[]},{value:"Response",id:"response-6",children:[]}]},{value:"PUT: Update argo-engine status information on an existing tenant",id:"put-update-argo-engine-status-information-on-an-existing-tenant",children:[{value:"Input",id:"input-7",children:[]},{value:"Response",id:"response-7",children:[]}]},{value:"POST: Create new user",id:"post-create-new-user",children:[{value:"Input",id:"input-8",children:[]},{value:"Response",id:"response-8",children:[]}]},{value:"PUT: Update user",id:"put-update-user",children:[{value:"Input",id:"input-9",children:[]},{value:"Response",id:"response-9",children:[]}]},{value:"POST: Renew User API key",id:"post-renew-user-api-key",children:[{value:"Input",id:"input-10",children:[]},{value:"Response",id:"response-10",children:[]}]},{value:"DELETE: Delete User",id:"delete-delete-user",children:[{value:"Input",id:"input-11",children:[]},{value:"Response",id:"response-11",children:[]}]},{value:"GET: List all avaliable users that belong to a specific tenant",id:"get-list-all-avaliable-users-that-belong-to-a-specific-tenant",children:[{value:"Input",id:"input-12",children:[]},{value:"Response",id:"response-12",children:[]}]},{value:"GET: Get user",id:"get-get-user",children:[{value:"Input",id:"input-13",children:[]},{value:"Response",id:"response-13",children:[]}]}],d={rightToc:i};function o(e){var n=e.components,t=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},d,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"api-calls"},"API Calls"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Shortcut"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GET: List Tenants"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to retrieve a list of current tenants"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#1"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GET: List a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to retrieve a specific metric tenant based on its id."),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#2"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"POST: Create a new tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to create a new tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#3"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"PUT: Update a tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to update information on an existing tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#4"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"DELETE: Delete a tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to delete an existing tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#5"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GET: Get a tenant's arg engine status"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to get status for a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#6"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"PUT: Update a tenant's engine status"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to update argo engine status information for a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#7"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"POST: Create tenant user"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to add a new user to existing tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#8"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"PUT: Update tenant user"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to update information on an existing user of a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#9"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"POST: Renew User's API key"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to renew user's api key"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#10"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"DELETE: Delete Users"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to remove and delete a user from a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#11"})," Description"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"GET: List Users"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This method can be used to list all users that belong to a specific tenant"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#12"})," Description"))))),Object(r.b)("a",{id:"1"}),Object(r.b)("h2",{id:"get-list-tenants"},"[GET]",": List Tenants"),Object(r.b)("p",null,"This method can be used to retrieve a list of current tenants"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note"),": This method restricts tenant database and user information when the x-api-key token holder is a ",Object(r.b)("strong",{parentName:"p"},"restricted")," super admin\n",Object(r.b)("strong",{parentName:"p"},"Note"),": This method shows only tenants that have admin ui users when the x-api-key token holder is a ",Object(r.b)("strong",{parentName:"p"},"super_admin_ui")),Object(r.b)("h3",{id:"input"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/tenants\n")),Object(r.b)("h4",{id:"request-headers"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-for-super-admin-users"},"Response body for super admin users"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n   "info": {\n    "name": "Tenant1",\n    "email": "email1@tenant1.com",\n    "description" : "a simple tenant",\n    "image" : "url to image",\n    "website": "www.tenant1.com",\n    "created": "2015-10-20 02:08:04",\n    "updated": "2015-10-20 02:08:04"\n   },\n   "db_conf": [\n    {\n     "store": "ar",\n     "server": "a.mongodb.org",\n     "port": 27017,\n     "database": "ar_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    },\n    {\n     "store": "status",\n     "server": "b.mongodb.org",\n     "port": 27017,\n     "database": "status_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    }\n   ],\n   "topology": {\n    "type": "GOCDB",\n    "feed": "gocdb1.example.foo"\n   },\n   "users": [\n    {\n     "id": "acb74194-553a-11e9-8647-d663bd873d93",\n     "name": "cap",\n     "email": "cap@email.com",\n     "api_key": "C4PK3Y",\n     "roles": [\n        "admin"\n     ]\n    },\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d94",\n     "name": "thor",\n     "email": "thor@email.com",\n     "api_key": "TH0RK3Y",\n     "roles": [\n        "viewer"\n     ]\n    }\n   ]\n  },\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n   "info": {\n    "name": "tenant2",\n    "email": "tenant2@email.com",\n    "description" : "a simple tenant",\n    "image" : "url to image",\n    "website": "www.tenant2.com",\n    "created": "2015-10-20 02:08:04",\n    "updated": "2015-10-20 02:08:04"\n   },\n   "db_conf": [\n    {\n     "store": "ar",\n     "server": "a.mongodb.org",\n     "port": 27017,\n     "database": "ar_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    },\n    "topology": {\n    "type": "GOCDB",\n    "feed": "gocdb2.example.foo"\n   },\n    {\n     "store": "status",\n     "server": "b.mongodb.org",\n     "port": 27017,\n     "database": "status_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    }\n   ],\n   "users": [\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n     "name": "groot",\n     "email": "groot@email.com",\n     "api_key": "GR00TK3Y",\n     "roles": [\n         "admin", "admin_ui"\n      ]\n    },\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d97",\n     "name": "starlord",\n     "email": "starlord@email.com",\n     "api_key": "ST4RL0RDK3Y",\n     "roles": [\n         "admin"\n      ]\n    }\n   ]\n  }\n ]\n}\n')),Object(r.b)("h4",{id:"response-body-for-restricted-super-admin-users"},"Response body for restricted super admin users:"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n            "info": {\n                "name": "Tenant1",\n                "email": "email1@tenant1.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant1.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb1.example.foo"\n            }\n        },\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            }\n        }\n    ]\n}\n')),Object(r.b)("h4",{id:"response-body-for-super_admin_ui-users"},"Response body for super_admin_ui users:"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                }\n            ]\n        }\n    ]\n}\n')),Object(r.b)("a",{id:"2"}),Object(r.b)("h2",{id:"get-list-a-specific-tenant"},"[GET]",": List A Specific tenant"),Object(r.b)("p",null,"This method can be used to retrieve specific tenant based on its id"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Note"),": This method shows only tenants that have admin ui users when the x-api-key token holder is a ",Object(r.b)("strong",{parentName:"p"},"super_admin_ui")),Object(r.b)("h3",{id:"input-1"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/tenants/{ID}\n")),Object(r.b)("h4",{id:"request-headers-1"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-1"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "db_conf": [\n                {\n                    "store": "ar",\n                    "server": "a.mongodb.org",\n                    "port": 27017,\n                    "database": "ar_db",\n                    "username": "admin",\n                    "password": "3NCRYPT3D"\n                },\n                {\n                    "store": "status",\n                    "server": "b.mongodb.org",\n                    "port": 27017,\n                    "database": "status_db",\n                    "username": "admin",\n                    "password": "3NCRYPT3D"\n                }\n            ],\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb1.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                },\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d97",\n                    "name": "starlord",\n                    "email": "starlord@email.com",\n                    "api_key": "ST4RL0RDK3Y",\n                    "roles": ["admin"]\n                }\n            ]\n        }\n    ]\n}\n')),Object(r.b)("h4",{id:"response-body-for-super_admin_ui-users-1"},"Response body for super_admin_ui users:"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                }\n            ]\n        }\n    ]\n}\n')),Object(r.b)("h2",{id:"get-list-a-specific-user"},"[GET]",": List A Specific User"),Object(r.b)("p",null,"This method can be used to retrieve specific user based on its id"),Object(r.b)("h3",{id:"input-2"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/users:byID/{ID}\n")),Object(r.b)("h4",{id:"request-headers-2"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-2"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-1"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "acb74194-553a-11e9-8647-d663bd873d93",\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),Object(r.b)("h3",{id:"note"},"NOTE"),Object(r.b)("p",null,"Specifying the filter, ",Object(r.b)("inlineCode",{parentName:"p"},"export=flat"),", it will return a flat user json object"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "id": "acb74194-553a-11e9-8647-d663bd873d93",\n    "name": "cap",\n    "email": "cap@email.com",\n    "api_key": "C4PK3Y",\n    "roles": ["admin"]\n}\n')),Object(r.b)("a",{id:"3"}),Object(r.b)("h2",{id:"post-create-a-new-tenant"},"[POST]",": Create a new Tenant"),Object(r.b)("p",null,"This method can be used to insert a new tenant"),Object(r.b)("h3",{id:"input-3"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"POST /admin/tenants\n")),Object(r.b)("h4",{id:"request-headers-3"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h4",{id:"post-body"},"POST BODY"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "info": {\n        "name": "Tenant1",\n        "email": "email1@tenant1.com",\n        "website": "www.tenant1.com",\n        "description": "a simple tenant",\n        "image": "url to image",\n        "created": "2015-10-20 02:08:04",\n        "updated": "2015-10-20 02:08:04"\n    },\n    "db_conf": [\n        {\n            "store": "ar",\n            "server": "a.mongodb.org",\n            "port": 27017,\n            "database": "ar_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        },\n        {\n            "store": "status",\n            "server": "b.mongodb.org",\n            "port": 27017,\n            "database": "status_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        }\n    ],\n    "topology": {\n        "type": "GOCDB",\n        "feed": "gocdb.example.foo"\n    },\n    "users": [\n        {\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        },\n        {\n            "name": "thor",\n            "email": "thor@email.com",\n            "api_key": "TH0RK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),Object(r.b)("h3",{id:"response-3"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 201 Created")),Object(r.b)("h4",{id:"response-body-2"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Tenant was succesfully created",\n        "code": "201"\n    },\n    "data": {\n        "id": "{{ID}}",\n        "links": {\n            "self": "https:///api/v2/admin/tenants/{{ID}}"\n        }\n    }\n}\n')),Object(r.b)("a",{id:"4"}),Object(r.b)("h2",{id:"put-update-information-on-an-existing-tenant"},"[PUT]",": Update information on an existing tenant"),Object(r.b)("p",null,"This method can be used to update information on an existing tenant"),Object(r.b)("h3",{id:"input-4"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"PUT /admin/tenants/{ID}\n")),Object(r.b)("h4",{id:"request-headers-4"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h4",{id:"put-body"},"PUT BODY"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "info": {\n        "name": "Tenant1",\n        "email": "email1@tenant1.com",\n        "description": "a changed description",\n        "image": "a changed url to nwe image",\n        "website": "www.tenant1.com",\n        "created": "2015-10-20 02:08:04",\n        "updated": "2015-10-20 02:08:04"\n    },\n    "db_conf": [\n        {\n            "store": "ar",\n            "server": "a.mongodb.org",\n            "port": 27017,\n            "database": "ar_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        },\n        {\n            "store": "status",\n            "server": "b.mongodb.org",\n            "port": 27017,\n            "database": "status_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        }\n    ],\n    "topology": {\n        "type": "GOCDB",\n        "feed": "gocdb.example.foo"\n    },\n    "users": [\n        {\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        },\n        {\n            "name": "thor",\n            "email": "thor@email.com",\n            "api_key": "TH0RK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),Object(r.b)("h3",{id:"response-4"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-3"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Tenant successfully updated",\n        "code": "200"\n    }\n}\n')),Object(r.b)("a",{id:"5"}),Object(r.b)("h2",{id:"delete-delete-an-existing-tenant"},"[DELETE]",": Delete an existing tenant"),Object(r.b)("p",null,"This method can be used to delete an existing tenant"),Object(r.b)("h3",{id:"input-5"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"DELETE /admin/tenants/{ID}\n")),Object(r.b)("h4",{id:"request-headers-5"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-5"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-4"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Tenant Successfully Deleted",\n        "code": "200"\n    }\n}\n')),Object(r.b)("a",{id:"6"}),Object(r.b)("h2",{id:"get-list-a-specific-tenants-argo-engine-status"},"[GET]",": List A Specific tenant's argo-engine status"),Object(r.b)("p",null,"This method can be used to retrieve specific tenant's status based on its id"),Object(r.b)("h3",{id:"input-6"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/tenants/{ID}/status\n")),Object(r.b)("h4",{id:"request-headers-6"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-6"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-5"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n            "info": {\n                "name": "tenant1",\n                "email": "email1@tenant1.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant1.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "status": {\n                "total_status": false,\n                "ams": {\n                    "metric_data": {\n                        "ingestion": false,\n                        "publishing": false,\n                        "status_streaming": false,\n                        "messages_arrived": 0\n                    },\n                    "sync_data": {\n                        "ingestion": false,\n                        "publishing": false,\n                        "status_streaming": false,\n                        "messages_arrived": 0\n                    }\n                },\n                "hdfs": {\n                    "metric_data": false\n                },\n                "engine_config": false,\n                "last_check": ""\n            }\n        }\n    ]\n}\n')),Object(r.b)("a",{id:"7"}),Object(r.b)("h2",{id:"put-update-argo-engine-status-information-on-an-existing-tenant"},"[PUT]",": Update argo-engine status information on an existing tenant"),Object(r.b)("p",null,"This method can be used to update status information on an existing tenant"),Object(r.b)("h3",{id:"input-7"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"PUT /admin/tenants/{ID}/status\n")),Object(r.b)("h4",{id:"request-headers-7"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h4",{id:"put-body-1"},"PUT BODY"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "ams": {\n        "metric_data": {\n            "ingestion": true,\n            "publishing": true,\n            "status_streaming": false,\n            "messages_arrived": 100\n        },\n        "sync_data": {\n            "ingestion": true,\n            "publishing": false,\n            "status_streaming": true,\n            "messages_arrived": 200\n        }\n    },\n    "hdfs": {\n        "metric_data": true,\n        "sync_data": {\n            "Critical": {\n                "downtimes": true,\n                "group_endpoints": true,\n                "blank_recompuation": true,\n                "group_groups": true,\n                "weights": true,\n                "operations_profile": true,\n                "metric_profile": true,\n                "aggregation_profile": true\n            }\n        }\n    },\n    "engine_config": true,\n    "last_check": "2018-08-10T12:32:45Z"\n}\n')),Object(r.b)("h3",{id:"response-7"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-6"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n    "status": {\n        "message": "Tenant successfully updated",\n        "code": "200"\n    }\n}\n')),Object(r.b)("a",{id:"8"}),Object(r.b)("h2",{id:"post-create-new-user"},"[POST]",": Create new user"),Object(r.b)("p",null,"This method can be used to create a new user on existing tenant"),Object(r.b)("h3",{id:"input-8"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"POST /admin/tenants/{ID}/users\n")),Object(r.b)("h4",{id:"request-headers-8"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h4",{id:"put-body-2"},"PUT BODY"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'  {\n    "name":"new_user",\n    "email":"new_user@email.com",\n    "roles": [\n        "admin"\n    ]\n  }`\n')),Object(r.b)("h3",{id:"response-8"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 201 OK")),Object(r.b)("h4",{id:"response-body-7"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "User was successfully created",\n  "code": "201"\n },\n "data": {\n  "id": "1cb883eb-8b40-428d-bce6-8ec23a9f3ca8",\n  "links": {\n   "self": "https:///api/v2/admin/tenants/6ac7d684-1f8e-4a02-a502-720e8f11e50b/users/1cb883eb-8b40-428d-bce6-8ec23a9f3ca8"\n  }\n }\n}\n')),Object(r.b)("a",{id:"9"}),Object(r.b)("h2",{id:"put-update-user"},"[PUT]",": Update user"),Object(r.b)("p",null,"This method can be used to update an existing user in a specific tenant"),Object(r.b)("h3",{id:"input-9"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"PUT /admin/tenants/{ID}/users/{USER_ID}\n")),Object(r.b)("h4",{id:"request-headers-9"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h4",{id:"put-body-3"},"PUT BODY"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'  {\n    "name":"new_user",\n    "email":"new_user@email.com",\n    "roles": [\n        "admin"\n    ]\n  }`\n')),Object(r.b)("h3",{id:"response-9"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-8"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "User succesfully updated",\n  "code": "200"\n }\n}\n')),Object(r.b)("a",{id:"10"}),Object(r.b)("h2",{id:"post-renew-user-api-key"},"[POST]",": Renew User API key"),Object(r.b)("p",null,"This method can be used to renew a user's api access key"),Object(r.b)("h3",{id:"input-10"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"POST /admin/tenants/{ID}/users/{USER_ID}/renew_api_key\n")),Object(r.b)("h4",{id:"request-headers-10"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-10"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-9"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "status": {\n    "message": "User api key succesfully renewed",\n    "code": "200"\n  },\n  "data": {\n    "api_key": "s3cr3tT0k3n"\n  }\n}\n')),Object(r.b)("a",{id:"11"}),Object(r.b)("h2",{id:"delete-delete-user"},"[DELETE]",": Delete User"),Object(r.b)("p",null,"This method can be used to remove and delete a user from a tenant"),Object(r.b)("h3",{id:"input-11"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"DELETE /admin/tenants/{ID}/users/{USER_ID}\n")),Object(r.b)("h4",{id:"request-headers-11"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-11"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-10"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "User succesfully deleted",\n  "code": "200"\n }\n}\n')),Object(r.b)("a",{id:"12"}),Object(r.b)("h2",{id:"get-list-all-avaliable-users-that-belong-to-a-specific-tenant"},"[GET]",": List all avaliable users that belong to a specific tenant"),Object(r.b)("p",null,"This method can be used to list all available users that are members of a specific tenant"),Object(r.b)("h3",{id:"input-12"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/tenants/{ID}/users\n")),Object(r.b)("h4",{id:"request-headers-12"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-12"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-11"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "acb74194-553a-11e9-8647-d663bd873d93",\n   "name": "user_a",\n   "email": "user_a@email.com",\n   "api_key": "user_a_key",\n   "roles": [\n    "admin",\n    "admin_ui"\n   ]\n  },\n  {\n   "id": "acb74432-553a-11e9-8647-d663bd873d93",\n   "name": "user_b",\n   "email": "user_b@email.com",\n   "api_key": "user_b_key",\n   "roles": [\n    "admin"\n   ]\n  }\n ]\n}\n\n')),Object(r.b)("a",{id:"13"}),Object(r.b)("h2",{id:"get-get-user"},"[GET]",": Get user"),Object(r.b)("p",null,"This method can be used to get information on specific user of a specific tenant"),Object(r.b)("h3",{id:"input-13"},"Input"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"GET /admin/tenants/{ID}/users/{USER_ID}\n")),Object(r.b)("h4",{id:"request-headers-13"},"Request headers"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{}),"x-api-key: shared_key_value\nAccept: application/json\n")),Object(r.b)("h3",{id:"response-13"},"Response"),Object(r.b)("p",null,"Headers: ",Object(r.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(r.b)("h4",{id:"response-body-12"},"Response body"),Object(r.b)("p",null,"Json Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "acb74432-553a-11e9-8647-d663bd873d93",\n   "name": "user_a",\n   "email": "user_a@email.com",\n   "api_key": "user_a_key",\n   "roles": [\n    "admin"\n   ]\n  }\n ]\n}\n\n')))}o.isMDXComponent=!0},89:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var a=t(0),s=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function b(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?b(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var d=s.a.createContext({}),o=function(e){var n=s.a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=o(e.components);return s.a.createElement(d.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return s.a.createElement(s.a.Fragment,{},n)}},u=s.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=o(t),u=a,m=p["".concat(b,".").concat(u)]||p[u]||l[u]||r;return t?s.a.createElement(m,c(c({ref:n},d),{},{components:t})):s.a.createElement(m,c({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,b=new Array(r);b[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,b[1]=c;for(var d=2;d<r;d++)b[d]=t[d];return s.a.createElement.apply(null,b)}return s.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);