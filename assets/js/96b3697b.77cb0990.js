"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[326],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,s=function(e,n){if(null==e)return{};var t,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var d=a.createContext({}),o=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=o(e.components);return a.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,s=e.mdxType,r=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=o(t),c=s,k=m["".concat(d,".").concat(c)]||m[c]||u[c]||r;return t?a.createElement(k,i(i({ref:n},p),{},{components:t})):a.createElement(k,i({ref:n},p))}));function c(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:s,i[1]=l;for(var o=2;o<r;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9729:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var a=t(7462),s=(t(7294),t(3905));const r={id:"tenants",title:"Tenants",slug:"/",sidebar_position:1},i=void 0,l={unversionedId:"tenants_and_feeds/tenants",id:"tenants_and_feeds/tenants",title:"Tenants",description:"API Calls",source:"@site/docs/tenants_and_feeds/tenants.md",sourceDirName:"tenants_and_feeds",slug:"/",permalink:"/argo-web-api/docs/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"tenants",title:"Tenants",slug:"/",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tenants & Feeds",permalink:"/argo-web-api/docs/category/tenants--feeds"},next:{title:"Feeds",permalink:"/argo-web-api/docs/tenants_and_feeds/feeds"}},d={},o=[{value:"API Calls",id:"api-calls",level:2},{value:"GET: List Tenants",id:"get-list-tenants",level:2},{value:"Input",id:"input",level:3},{value:"Request headers",id:"request-headers",level:4},{value:"Response",id:"response",level:3},{value:"Response body for super admin users",id:"response-body-for-super-admin-users",level:4},{value:"Response body for restricted super admin users:",id:"response-body-for-restricted-super-admin-users",level:4},{value:"Response body for super_admin_ui users:",id:"response-body-for-super_admin_ui-users",level:4},{value:"GET: List A Specific tenant",id:"get-list-a-specific-tenant",level:2},{value:"Input",id:"input-1",level:3},{value:"Request headers",id:"request-headers-1",level:4},{value:"Response",id:"response-1",level:3},{value:"Response body",id:"response-body",level:4},{value:"Response body for super_admin_ui users:",id:"response-body-for-super_admin_ui-users-1",level:4},{value:"GET: List A Specific User",id:"get-list-a-specific-user",level:2},{value:"Input",id:"input-2",level:3},{value:"Request headers",id:"request-headers-2",level:4},{value:"Response",id:"response-2",level:3},{value:"Response body",id:"response-body-1",level:4},{value:"NOTE",id:"note",level:3},{value:"POST: Create a new Tenant",id:"post-create-a-new-tenant",level:2},{value:"Input",id:"input-3",level:3},{value:"Request headers",id:"request-headers-3",level:4},{value:"POST BODY",id:"post-body",level:4},{value:"Response",id:"response-3",level:3},{value:"Response body",id:"response-body-2",level:4},{value:"PUT: Update information on an existing tenant",id:"put-update-information-on-an-existing-tenant",level:2},{value:"Input",id:"input-4",level:3},{value:"Request headers",id:"request-headers-4",level:4},{value:"PUT BODY",id:"put-body",level:4},{value:"Response",id:"response-4",level:3},{value:"Response body",id:"response-body-3",level:4},{value:"DELETE: Delete an existing tenant",id:"delete-delete-an-existing-tenant",level:2},{value:"Input",id:"input-5",level:3},{value:"Request headers",id:"request-headers-5",level:4},{value:"Response",id:"response-5",level:3},{value:"Response body",id:"response-body-4",level:4},{value:"GET: List A Specific tenant&#39;s argo-engine status",id:"get-list-a-specific-tenants-argo-engine-status",level:2},{value:"Input",id:"input-6",level:3},{value:"Request headers",id:"request-headers-6",level:4},{value:"Response",id:"response-6",level:3},{value:"Response body",id:"response-body-5",level:4},{value:"PUT: Update argo-engine status information on an existing tenant",id:"put-update-argo-engine-status-information-on-an-existing-tenant",level:2},{value:"Input",id:"input-7",level:3},{value:"Request headers",id:"request-headers-7",level:4},{value:"PUT BODY",id:"put-body-1",level:4},{value:"Response",id:"response-7",level:3},{value:"Response body",id:"response-body-6",level:4},{value:"POST: Create new user",id:"post-create-new-user",level:2},{value:"Input",id:"input-8",level:3},{value:"Request headers",id:"request-headers-8",level:4},{value:"PUT BODY",id:"put-body-2",level:4},{value:"Response",id:"response-8",level:3},{value:"Response body",id:"response-body-7",level:4},{value:"PUT: Update user",id:"put-update-user",level:2},{value:"Input",id:"input-9",level:3},{value:"Request headers",id:"request-headers-9",level:4},{value:"PUT BODY",id:"put-body-3",level:4},{value:"Response",id:"response-9",level:3},{value:"Response body",id:"response-body-8",level:4},{value:"POST: Renew User API key",id:"post-renew-user-api-key",level:2},{value:"Input",id:"input-10",level:3},{value:"Request headers",id:"request-headers-10",level:4},{value:"Response",id:"response-10",level:3},{value:"Response body",id:"response-body-9",level:4},{value:"DELETE: Delete User",id:"delete-delete-user",level:2},{value:"Input",id:"input-11",level:3},{value:"Request headers",id:"request-headers-11",level:4},{value:"Response",id:"response-11",level:3},{value:"Response body",id:"response-body-10",level:4},{value:"GET: List all available users that belong to a specific tenant",id:"get-list-all-available-users-that-belong-to-a-specific-tenant",level:2},{value:"Input",id:"input-12",level:3},{value:"Request headers",id:"request-headers-12",level:4},{value:"Response",id:"response-12",level:3},{value:"Response body",id:"response-body-11",level:4},{value:"GET: Get user",id:"get-get-user",level:2},{value:"Input",id:"input-13",level:3},{value:"Request headers",id:"request-headers-13",level:4},{value:"Response",id:"response-13",level:3},{value:"Response body",id:"response-body-12",level:4}],p={toc:o};function u(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"api-calls"},"API Calls"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Name"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"),(0,s.kt)("th",{parentName:"tr",align:null},"Shortcut"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"GET: List Tenants"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to retrieve a list of current tenants"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#1"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"GET: List a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to retrieve a specific metric tenant based on its id."),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#2"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"POST: Create a new tenant"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to create a new tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#3"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"PUT: Update a tenant"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to update information on an existing tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#4"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"DELETE: Delete a tenant"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to delete an existing tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#5"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"GET: Get a tenant's arg engine status"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to get status for a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#6"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"PUT: Update a tenant's engine status"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to update argo engine status information for a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#7"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"POST: Create tenant user"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to add a new user to existing tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#8"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"PUT: Update tenant user"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to update information on an existing user of a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#9"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"POST: Renew User's API key"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to renew user's api key"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#10"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"DELETE: Delete Users"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to remove and delete a user from a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#11"}," Description"))),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"GET: List Users"),(0,s.kt)("td",{parentName:"tr",align:null},"This method can be used to list all users that belong to a specific tenant"),(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("a",{parentName:"td",href:"#12"}," Description"))))),(0,s.kt)("a",{id:"1"}),(0,s.kt)("h2",{id:"get-list-tenants"},"[GET]",": List Tenants"),(0,s.kt)("p",null,"This method can be used to retrieve a list of current tenants"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note"),": This method restricts tenant database and user information when the x-api-key token holder is a ",(0,s.kt)("strong",{parentName:"p"},"restricted")," super admin\n",(0,s.kt)("strong",{parentName:"p"},"Note"),": This method shows only tenants that have admin ui users when the x-api-key token holder is a ",(0,s.kt)("strong",{parentName:"p"},"super_admin_ui")),(0,s.kt)("h3",{id:"input"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/tenants\n")),(0,s.kt)("h4",{id:"request-headers"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-for-super-admin-users"},"Response body for super admin users"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n   "info": {\n    "name": "Tenant1",\n    "email": "email1@tenant1.com",\n    "description" : "a simple tenant",\n    "image" : "url to image",\n    "website": "www.tenant1.com",\n    "created": "2015-10-20 02:08:04",\n    "updated": "2015-10-20 02:08:04"\n   },\n   "db_conf": [\n    {\n     "store": "ar",\n     "server": "a.mongodb.org",\n     "port": 27017,\n     "database": "ar_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    },\n    {\n     "store": "status",\n     "server": "b.mongodb.org",\n     "port": 27017,\n     "database": "status_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    }\n   ],\n   "topology": {\n    "type": "GOCDB",\n    "feed": "gocdb1.example.foo"\n   },\n   "users": [\n    {\n     "id": "acb74194-553a-11e9-8647-d663bd873d93",\n     "name": "cap",\n     "email": "cap@email.com",\n     "api_key": "C4PK3Y",\n     "roles": [\n        "admin"\n     ]\n    },\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d94",\n     "name": "thor",\n     "email": "thor@email.com",\n     "api_key": "TH0RK3Y",\n     "roles": [\n        "viewer"\n     ]\n    }\n   ]\n  },\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n   "info": {\n    "name": "tenant2",\n    "email": "tenant2@email.com",\n    "description" : "a simple tenant",\n    "image" : "url to image",\n    "website": "www.tenant2.com",\n    "created": "2015-10-20 02:08:04",\n    "updated": "2015-10-20 02:08:04"\n   },\n   "db_conf": [\n    {\n     "store": "ar",\n     "server": "a.mongodb.org",\n     "port": 27017,\n     "database": "ar_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    },\n    "topology": {\n    "type": "GOCDB",\n    "feed": "gocdb2.example.foo"\n   },\n    {\n     "store": "status",\n     "server": "b.mongodb.org",\n     "port": 27017,\n     "database": "status_db",\n     "username": "admin",\n     "password": "3NCRYPT3D"\n    }\n   ],\n   "users": [\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n     "name": "groot",\n     "email": "groot@email.com",\n     "api_key": "GR00TK3Y",\n     "roles": [\n         "admin", "admin_ui"\n      ]\n    },\n    {\n    "id": "acb74194-553a-11e9-8647-d663bd873d97",\n     "name": "starlord",\n     "email": "starlord@email.com",\n     "api_key": "ST4RL0RDK3Y",\n     "roles": [\n         "admin"\n      ]\n    }\n   ]\n  }\n ]\n}\n')),(0,s.kt)("h4",{id:"response-body-for-restricted-super-admin-users"},"Response body for restricted super admin users:"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n            "info": {\n                "name": "Tenant1",\n                "email": "email1@tenant1.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant1.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb1.example.foo"\n            }\n        },\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            }\n        }\n    ]\n}\n')),(0,s.kt)("h4",{id:"response-body-for-super_admin_ui-users"},"Response body for super_admin_ui users:"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                }\n            ]\n        }\n    ]\n}\n')),(0,s.kt)("a",{id:"2"}),(0,s.kt)("h2",{id:"get-list-a-specific-tenant"},"[GET]",": List A Specific tenant"),(0,s.kt)("p",null,"This method can be used to retrieve specific tenant based on its id"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Note"),": This method shows only tenants that have admin ui users when the x-api-key token holder is a ",(0,s.kt)("strong",{parentName:"p"},"super_admin_ui")),(0,s.kt)("h3",{id:"input-1"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/tenants/{ID}\n")),(0,s.kt)("h4",{id:"request-headers-1"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-1"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "db_conf": [\n                {\n                    "store": "ar",\n                    "server": "a.mongodb.org",\n                    "port": 27017,\n                    "database": "ar_db",\n                    "username": "admin",\n                    "password": "3NCRYPT3D"\n                },\n                {\n                    "store": "status",\n                    "server": "b.mongodb.org",\n                    "port": 27017,\n                    "database": "status_db",\n                    "username": "admin",\n                    "password": "3NCRYPT3D"\n                }\n            ],\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb1.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                },\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d97",\n                    "name": "starlord",\n                    "email": "starlord@email.com",\n                    "api_key": "ST4RL0RDK3Y",\n                    "roles": ["admin"]\n                }\n            ]\n        }\n    ]\n}\n')),(0,s.kt)("h4",{id:"response-body-for-super_admin_ui-users-1"},"Response body for super_admin_ui users:"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n            "info": {\n                "name": "tenant2",\n                "email": "tenant2@email.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant2.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "topology": {\n                "type": "GOCDB",\n                "feed": "gocdb2.example.foo"\n            },\n            "users": [\n                {\n                    "id": "acb74194-553a-11e9-8647-d663bd873d95",\n                    "name": "groot",\n                    "email": "groot@email.com",\n                    "api_key": "GR00TK3Y",\n                    "roles": ["admin", "admin_ui"]\n                }\n            ]\n        }\n    ]\n}\n')),(0,s.kt)("h2",{id:"get-list-a-specific-user"},"[GET]",": List A Specific User"),(0,s.kt)("p",null,"This method can be used to retrieve specific user based on its id"),(0,s.kt)("h3",{id:"input-2"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/users:byID/{ID}\n")),(0,s.kt)("h4",{id:"request-headers-2"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-2"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-1"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "acb74194-553a-11e9-8647-d663bd873d93",\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),(0,s.kt)("h3",{id:"note"},"NOTE"),(0,s.kt)("p",null,"Specifying the filter, ",(0,s.kt)("inlineCode",{parentName:"p"},"export=flat"),", it will return a flat user json object"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "acb74194-553a-11e9-8647-d663bd873d93",\n    "name": "cap",\n    "email": "cap@email.com",\n    "api_key": "C4PK3Y",\n    "roles": ["admin"]\n}\n')),(0,s.kt)("a",{id:"3"}),(0,s.kt)("h2",{id:"post-create-a-new-tenant"},"[POST]",": Create a new Tenant"),(0,s.kt)("p",null,"This method can be used to insert a new tenant"),(0,s.kt)("h3",{id:"input-3"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /admin/tenants\n")),(0,s.kt)("h4",{id:"request-headers-3"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h4",{id:"post-body"},"POST BODY"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "info": {\n        "name": "Tenant1",\n        "email": "email1@tenant1.com",\n        "website": "www.tenant1.com",\n        "description": "a simple tenant",\n        "image": "url to image",\n        "created": "2015-10-20 02:08:04",\n        "updated": "2015-10-20 02:08:04"\n    },\n    "db_conf": [\n        {\n            "store": "ar",\n            "server": "a.mongodb.org",\n            "port": 27017,\n            "database": "ar_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        },\n        {\n            "store": "status",\n            "server": "b.mongodb.org",\n            "port": 27017,\n            "database": "status_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        }\n    ],\n    "topology": {\n        "type": "GOCDB",\n        "feed": "gocdb.example.foo"\n    },\n    "users": [\n        {\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        },\n        {\n            "name": "thor",\n            "email": "thor@email.com",\n            "api_key": "TH0RK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),(0,s.kt)("h3",{id:"response-3"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 201 Created")),(0,s.kt)("h4",{id:"response-body-2"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Tenant was succesfully created",\n        "code": "201"\n    },\n    "data": {\n        "id": "{{ID}}",\n        "links": {\n            "self": "https:///api/v2/admin/tenants/{{ID}}"\n        }\n    }\n}\n')),(0,s.kt)("a",{id:"4"}),(0,s.kt)("h2",{id:"put-update-information-on-an-existing-tenant"},"[PUT]",": Update information on an existing tenant"),(0,s.kt)("p",null,"This method can be used to update information on an existing tenant"),(0,s.kt)("h3",{id:"input-4"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PUT /admin/tenants/{ID}\n")),(0,s.kt)("h4",{id:"request-headers-4"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h4",{id:"put-body"},"PUT BODY"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "info": {\n        "name": "Tenant1",\n        "email": "email1@tenant1.com",\n        "description": "a changed description",\n        "image": "a changed url to nwe image",\n        "website": "www.tenant1.com",\n        "created": "2015-10-20 02:08:04",\n        "updated": "2015-10-20 02:08:04"\n    },\n    "db_conf": [\n        {\n            "store": "ar",\n            "server": "a.mongodb.org",\n            "port": 27017,\n            "database": "ar_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        },\n        {\n            "store": "status",\n            "server": "b.mongodb.org",\n            "port": 27017,\n            "database": "status_db",\n            "username": "admin",\n            "password": "3NCRYPT3D"\n        }\n    ],\n    "topology": {\n        "type": "GOCDB",\n        "feed": "gocdb.example.foo"\n    },\n    "users": [\n        {\n            "name": "cap",\n            "email": "cap@email.com",\n            "api_key": "C4PK3Y",\n            "roles": ["admin"]\n        },\n        {\n            "name": "thor",\n            "email": "thor@email.com",\n            "api_key": "TH0RK3Y",\n            "roles": ["admin"]\n        }\n    ]\n}\n')),(0,s.kt)("h3",{id:"response-4"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-3"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Tenant successfully updated",\n        "code": "200"\n    }\n}\n')),(0,s.kt)("a",{id:"5"}),(0,s.kt)("h2",{id:"delete-delete-an-existing-tenant"},"[DELETE]",": Delete an existing tenant"),(0,s.kt)("p",null,"This method can be used to delete an existing tenant"),(0,s.kt)("h3",{id:"input-5"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"DELETE /admin/tenants/{ID}\n")),(0,s.kt)("h4",{id:"request-headers-5"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-5"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-4"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Tenant Successfully Deleted",\n        "code": "200"\n    }\n}\n')),(0,s.kt)("a",{id:"6"}),(0,s.kt)("h2",{id:"get-list-a-specific-tenants-argo-engine-status"},"[GET]",": List A Specific tenant's argo-engine status"),(0,s.kt)("p",null,"This method can be used to retrieve specific tenant's status based on its id"),(0,s.kt)("h3",{id:"input-6"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/tenants/{ID}/status\n")),(0,s.kt)("h4",{id:"request-headers-6"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-6"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-5"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n            "info": {\n                "name": "tenant1",\n                "email": "email1@tenant1.com",\n                "description": "a simple tenant",\n                "image": "url to image",\n                "website": "www.tenant1.com",\n                "created": "2015-10-20 02:08:04",\n                "updated": "2015-10-20 02:08:04"\n            },\n            "status": {\n                "total_status": false,\n                "ams": {\n                    "metric_data": {\n                        "ingestion": false,\n                        "publishing": false,\n                        "status_streaming": false,\n                        "messages_arrived": 0\n                    },\n                    "sync_data": {\n                        "ingestion": false,\n                        "publishing": false,\n                        "status_streaming": false,\n                        "messages_arrived": 0\n                    }\n                },\n                "hdfs": {\n                    "metric_data": false\n                },\n                "engine_config": false,\n                "last_check": ""\n            }\n        }\n    ]\n}\n')),(0,s.kt)("a",{id:"7"}),(0,s.kt)("h2",{id:"put-update-argo-engine-status-information-on-an-existing-tenant"},"[PUT]",": Update argo-engine status information on an existing tenant"),(0,s.kt)("p",null,"This method can be used to update status information on an existing tenant"),(0,s.kt)("h3",{id:"input-7"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PUT /admin/tenants/{ID}/status\n")),(0,s.kt)("h4",{id:"request-headers-7"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h4",{id:"put-body-1"},"PUT BODY"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "ams": {\n        "metric_data": {\n            "ingestion": true,\n            "publishing": true,\n            "status_streaming": false,\n            "messages_arrived": 100\n        },\n        "sync_data": {\n            "ingestion": true,\n            "publishing": false,\n            "status_streaming": true,\n            "messages_arrived": 200\n        }\n    },\n    "hdfs": {\n        "metric_data": true,\n        "sync_data": {\n            "Critical": {\n                "downtimes": true,\n                "group_endpoints": true,\n                "blank_recompuation": true,\n                "group_groups": true,\n                "weights": true,\n                "operations_profile": true,\n                "metric_profile": true,\n                "aggregation_profile": true\n            }\n        }\n    },\n    "engine_config": true,\n    "last_check": "2018-08-10T12:32:45Z"\n}\n')),(0,s.kt)("h3",{id:"response-7"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-6"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "Tenant successfully updated",\n        "code": "200"\n    }\n}\n')),(0,s.kt)("a",{id:"8"}),(0,s.kt)("h2",{id:"post-create-new-user"},"[POST]",": Create new user"),(0,s.kt)("p",null,"This method can be used to create a new user on existing tenant"),(0,s.kt)("h3",{id:"input-8"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /admin/tenants/{ID}/users\n")),(0,s.kt)("h4",{id:"request-headers-8"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h4",{id:"put-body-2"},"PUT BODY"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "name":"new_user",\n    "email":"new_user@email.com",\n    "roles": [\n        "admin"\n    ]\n  }`\n')),(0,s.kt)("h3",{id:"response-8"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 201 OK")),(0,s.kt)("h4",{id:"response-body-7"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "User was successfully created",\n  "code": "201"\n },\n "data": {\n  "id": "1cb883eb-8b40-428d-bce6-8ec23a9f3ca8",\n  "links": {\n   "self": "https:///api/v2/admin/tenants/6ac7d684-1f8e-4a02-a502-720e8f11e50b/users/1cb883eb-8b40-428d-bce6-8ec23a9f3ca8"\n  }\n }\n}\n')),(0,s.kt)("a",{id:"9"}),(0,s.kt)("h2",{id:"put-update-user"},"[PUT]",": Update user"),(0,s.kt)("p",null,"This method can be used to update an existing user in a specific tenant"),(0,s.kt)("h3",{id:"input-9"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"PUT /admin/tenants/{ID}/users/{USER_ID}\n")),(0,s.kt)("h4",{id:"request-headers-9"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h4",{id:"put-body-3"},"PUT BODY"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "name":"new_user",\n    "email":"new_user@email.com",\n    "roles": [\n        "admin"\n    ]\n  }`\n')),(0,s.kt)("h3",{id:"response-9"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-8"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "User succesfully updated",\n  "code": "200"\n }\n}\n')),(0,s.kt)("a",{id:"10"}),(0,s.kt)("h2",{id:"post-renew-user-api-key"},"[POST]",": Renew User API key"),(0,s.kt)("p",null,"This method can be used to renew a user's api access key"),(0,s.kt)("h3",{id:"input-10"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"POST /admin/tenants/{ID}/users/{USER_ID}/renew_api_key\n")),(0,s.kt)("h4",{id:"request-headers-10"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-10"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-9"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": {\n    "message": "User api key succesfully renewed",\n    "code": "200"\n  },\n  "data": {\n    "api_key": "s3cr3tT0k3n"\n  }\n}\n')),(0,s.kt)("a",{id:"11"}),(0,s.kt)("h2",{id:"delete-delete-user"},"[DELETE]",": Delete User"),(0,s.kt)("p",null,"This method can be used to remove and delete a user from a tenant"),(0,s.kt)("h3",{id:"input-11"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"DELETE /admin/tenants/{ID}/users/{USER_ID}\n")),(0,s.kt)("h4",{id:"request-headers-11"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-11"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-10"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "User succesfully deleted",\n  "code": "200"\n }\n}\n')),(0,s.kt)("a",{id:"12"}),(0,s.kt)("h2",{id:"get-list-all-available-users-that-belong-to-a-specific-tenant"},"[GET]",": List all available users that belong to a specific tenant"),(0,s.kt)("p",null,"This method can be used to list all available users that are members of a specific tenant"),(0,s.kt)("h3",{id:"input-12"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/tenants/{ID}/users\n")),(0,s.kt)("h4",{id:"request-headers-12"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-12"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-11"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "acb74194-553a-11e9-8647-d663bd873d93",\n   "name": "user_a",\n   "email": "user_a@email.com",\n   "api_key": "user_a_key",\n   "roles": [\n    "admin",\n    "admin_ui"\n   ]\n  },\n  {\n   "id": "acb74432-553a-11e9-8647-d663bd873d93",\n   "name": "user_b",\n   "email": "user_b@email.com",\n   "api_key": "user_b_key",\n   "roles": [\n    "admin"\n   ]\n  }\n ]\n}\n\n')),(0,s.kt)("a",{id:"13"}),(0,s.kt)("h2",{id:"get-get-user"},"[GET]",": Get user"),(0,s.kt)("p",null,"This method can be used to get information on specific user of a specific tenant"),(0,s.kt)("h3",{id:"input-13"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"GET /admin/tenants/{ID}/users/{USER_ID}\n")),(0,s.kt)("h4",{id:"request-headers-13"},"Request headers"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,s.kt)("h3",{id:"response-13"},"Response"),(0,s.kt)("p",null,"Headers: ",(0,s.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,s.kt)("h4",{id:"response-body-12"},"Response body"),(0,s.kt)("p",null,"Json Response"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "acb74432-553a-11e9-8647-d663bd873d93",\n   "name": "user_a",\n   "email": "user_a@email.com",\n   "api_key": "user_a_key",\n   "roles": [\n    "admin"\n   ]\n  }\n ]\n}\n\n')))}u.isMDXComponent=!0}}]);