"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[795],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var p=a.createContext({}),i=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=i(n),g=l,m=c["".concat(p,".").concat(g)]||c[g]||d[g]||o;return n?a.createElement(m,r(r({ref:t},u),{},{components:n})):a.createElement(m,r({ref:t},u))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var i=2;i<o;i++)r[i]=n[i];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=n(7462),l=(n(7294),n(3905));const o={id:"topology_tags",title:"Topology Tags & Values",sidebar_position:5},r=void 0,s={unversionedId:"topology/topology_tags",id:"topology/topology_tags",title:"Topology Tags & Values",description:"API calls for all available tags and distinct values present in topology items",source:"@site/docs/topology/topology_tags.md",sourceDirName:"topology",slug:"/topology/topology_tags",permalink:"/argo-web-api/docs/topology/topology_tags",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"topology_tags",title:"Topology Tags & Values",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Topology Statistics",permalink:"/argo-web-api/docs/topology/topology_stats"},next:{title:"Profiles & Reports",permalink:"/argo-web-api/docs/category/profiles--reports"}},p={},i=[{value:"API calls for all available tags and distinct values present in topology items",id:"api-calls-for-all-available-tags-and-distinct-values-present-in-topology-items",level:2},{value:"GET: List topology tags",id:"get-list-topology-tags",level:2},{value:"Input",id:"input",level:3},{value:"List All topology tag values",id:"list-all-topology-tag-values",level:5},{value:"Url Parameters",id:"url-parameters",level:4},{value:"Headers",id:"headers",level:4},{value:"Response Code",id:"response-code",level:4},{value:"Response body",id:"response-body",level:3},{value:"Example Request:",id:"example-request",level:6},{value:"Example Response:",id:"example-response",level:6}],u={toc:i};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"api-calls-for-all-available-tags-and-distinct-values-present-in-topology-items"},"API calls for all available tags and distinct values present in topology items"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Shortcut"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GET: List topology tags"),(0,l.kt)("td",{parentName:"tr",align:null},"List available tags and distinct values present in topology items."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{href:"#1"},"Description"))))),(0,l.kt)("a",{id:"1"}),(0,l.kt)("h2",{id:"get-list-topology-tags"},"[GET]",": List topology tags"),(0,l.kt)("p",null,"This method may be used to retrieve available topology tags and their distinct values available "),(0,l.kt)("h3",{id:"input"},"Input"),(0,l.kt)("h5",{id:"list-all-topology-tag-values"},"List All topology tag values"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"/topology/tags?[date]\n")),(0,l.kt)("h4",{id:"url-parameters"},"Url Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"date")),(0,l.kt)("td",{parentName:"tr",align:null},"target a specific data"),(0,l.kt)("td",{parentName:"tr",align:null},"NO"),(0,l.kt)("td",{parentName:"tr",align:null},"today's date")))),(0,l.kt)("h4",{id:"headers"},"Headers"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"x-api-key: secret_key_value\nAccept: application/json\n")),(0,l.kt)("h4",{id:"response-code"},"Response Code"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Status: 200 OK\n")),(0,l.kt)("h3",{id:"response-body"},"Response body"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": {\n        "message": "application/json",\n        "code": "200"\n    },\n    "data": [\n        {\n            "name": "endpoints",\n            "values": [\n                {\n                    "name": "tag1",\n                    "values": ["value1", "value2", "value3"]\n                },\n                {\n                    "name": "tag2",\n                    "values": ["value1", "value2"]\n                }\n            ]\n        },\n        {\n            "name": "groups",\n            "values": [\n                {\n                    "name": "tag3",\n                    "values": ["value1", "value2", "value3"]\n                },\n                {\n                    "name": "tag4",\n                    "values": ["value1"]\n                }\n            ]\n        }\n    ]\n}\n')),(0,l.kt)("h6",{id:"example-request"},"Example Request:"),(0,l.kt)("p",null,"URL:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"/topology/tags?date=2016-01-01\n")),(0,l.kt)("p",null,"Headers:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"x-api-key: secret_key_value\nAccept: application/json\n")),(0,l.kt)("h6",{id:"example-response"},"Example Response:"),(0,l.kt)("p",null,"Code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Status: 200 OK\n")),(0,l.kt)("p",null,"Response body:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "name": "endpoints",\n   "values": [\n    {\n     "name": "scope",\n     "values": [\n      "GROUPB",\n      "GROUPA",\n      "GROUPE",\n      "GROUPD",\n      "GROUPC"\n     ]\n    },\n    {\n     "name": "production",\n     "values": [\n      "0",\n      "1"\n     ]\n    },\n    {\n     "name": "monitored",\n     "values": [\n      "0",\n      "1"\n     ]\n    }\n   ]\n  },\n  {\n   "name": "groups",\n   "values": [\n    {\n     "name": "certification",\n     "values": [\n      "Certified",\n      "Uncertified"\n     ]\n    },\n    {\n     "name": "infrastructure",\n     "values": [\n      "production",\n      "devel",\n      "devtest"\n     ]\n    }\n   ]\n  }\n ]\n}\n')))}d.isMDXComponent=!0}}]);