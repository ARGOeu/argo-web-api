"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[410],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>c});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(t),c=r,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||i;return t?a.createElement(k,l(l({ref:n},d),{},{components:t})):a.createElement(k,l({ref:n},d))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9133:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={id:"operations_profiles",title:"Operation Profiles",sidebar_position:1},l=void 0,o={unversionedId:"profiles_and_reports/operations_profiles",id:"profiles_and_reports/operations_profiles",title:"Operation Profiles",description:"API Calls",source:"@site/docs/profiles_and_reports/operations_profiles.md",sourceDirName:"profiles_and_reports",slug:"/profiles_and_reports/operations_profiles",permalink:"/argo-web-api/docs/profiles_and_reports/operations_profiles",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"operations_profiles",title:"Operation Profiles",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Profiles & Reports",permalink:"/argo-web-api/docs/category/profiles--reports"},next:{title:"Metric Profiles",permalink:"/argo-web-api/docs/profiles_and_reports/metric_profiles"}},s={},p=[{value:"API Calls",id:"api-calls",level:2},{value:"GET: List Operations Profiles",id:"get-list-operations-profiles",level:2},{value:"Input",id:"input",level:3},{value:"Optional Query Parameters",id:"optional-query-parameters",level:4},{value:"Request headers",id:"request-headers",level:4},{value:"Response",id:"response",level:3},{value:"Response body",id:"response-body",level:4},{value:"GET: List A Specific Operations profile",id:"get-list-a-specific-operations-profile",level:2},{value:"Input",id:"input-1",level:3},{value:"Optional Query Parameters",id:"optional-query-parameters-1",level:4},{value:"Request headers",id:"request-headers-1",level:4},{value:"Response",id:"response-1",level:3},{value:"Response body",id:"response-body-1",level:4},{value:"POST: Create a new Operations Profile",id:"post-create-a-new-operations-profile",level:2},{value:"Input",id:"input-2",level:3},{value:"Request headers",id:"request-headers-2",level:4},{value:"Optional Query Parameters",id:"optional-query-parameters-2",level:4},{value:"POST BODY",id:"post-body",level:4},{value:"Response",id:"response-2",level:3},{value:"Response body",id:"response-body-2",level:4},{value:"PUT: Update information on an existing operations profile",id:"put-update-information-on-an-existing-operations-profile",level:2},{value:"Input",id:"input-3",level:3},{value:"Optional Query Parameters",id:"optional-query-parameters-3",level:4},{value:"Request headers",id:"request-headers-3",level:4},{value:"PUT BODY",id:"put-body",level:4},{value:"Response",id:"response-3",level:3},{value:"Response body",id:"response-body-3",level:4},{value:"DELETE: Delete an existing aggregation profile",id:"delete-delete-an-existing-aggregation-profile",level:2},{value:"Input",id:"input-4",level:3},{value:"Request headers",id:"request-headers-4",level:4},{value:"Response",id:"response-4",level:3},{value:"Response body",id:"response-body-4",level:4},{value:"Validation Checks",id:"validation-checks",level:2},{value:"Example invalid profile",id:"example-invalid-profile",level:4},{value:"Response",id:"response-5",level:3},{value:"Response body",id:"response-body-5",level:4}],d={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"api-calls"},"API Calls"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Shortcut"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GET: List Operations Profile Requests"),(0,r.kt)("td",{parentName:"tr",align:null},"This method can be used to retrieve a list of current Operations profiles."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#1"}," Description"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"GET: List a specific  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},"This method can be used to retrieve a specific  Operations profile based on its id."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#2"}," Description"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"POST: Create a new  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},"This method can be used to create a new  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#3"}," Description"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"PUT: Update an Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},"This method can be used to update information on an existing  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#4"}," Description"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DELETE: Delete an  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},"This method can be used to delete an existing  Operations profile"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#5"}," Description"))))),(0,r.kt)("a",{id:"1"}),(0,r.kt)("h2",{id:"get-list-operations-profiles"},"[GET]",": List Operations Profiles"),(0,r.kt)("p",null,"This method can be used to retrieve a list of current  Operations profiles. "),(0,r.kt)("h3",{id:"input"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /operations_profiles\n")),(0,r.kt)("h4",{id:"optional-query-parameters"},"Optional Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Operations profile name to be used as query"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("h4",{id:"request-headers"},"Request headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,r.kt)("h3",{id:"response"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,r.kt)("h4",{id:"response-body"},"Response body"),(0,r.kt)("p",null,"Json Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n   "date": "2019-11-04",\n   "name": "ops1",\n   "available_states": [\n    "A,B,C"\n   ],\n   "defaults": {\n    "down": "B",\n    "missing": "A",\n    "unknown": "C"\n   },\n   "operations": [\n    {\n     "name": "AND",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "B"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "C"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "C"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "A"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "A"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "B"\n      }\n     ]\n    }\n   ]\n  },\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50c",\n   "date": "2019-11-02",\n   "name": "ops2",\n   "available_states": [\n    "X,Y,Z"\n   ],\n   "defaults": {\n    "down": "Y",\n    "missing": "X",\n    "unknown": "Z"\n   },\n   "operations": [\n    {\n     "name": "AND",\n     "truth_table": [\n      {\n       "a": "X",\n       "b": "Y",\n       "x": "Y"\n      },\n      {\n       "a": "X",\n       "b": "Z",\n       "x": "Z"\n      },\n      {\n       "a": "Y",\n       "b": "Z",\n       "x": "Z"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "X",\n       "b": "Y",\n       "x": "X"\n      },\n      {\n       "a": "X",\n       "b": "Z",\n       "x": "X"\n      },\n      {\n       "a": "Y",\n       "b": "Z",\n       "x": "Y"\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n')),(0,r.kt)("a",{id:"2"}),(0,r.kt)("h2",{id:"get-list-a-specific-operations-profile"},"[GET]",": List A Specific Operations profile"),(0,r.kt)("p",null,"This method can be used to retrieve specific Operations profile based on its id"),(0,r.kt)("h3",{id:"input-1"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /operations_profiles/{ID}\n")),(0,r.kt)("h4",{id:"optional-query-parameters-1"},"Optional Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date to retrieve a historic version of the operation profile. If no date parameter is provided the most current profile will be returned"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("h4",{id:"request-headers-1"},"Request headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,r.kt)("h3",{id:"response-1"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,r.kt)("h4",{id:"response-body-1"},"Response body"),(0,r.kt)("p",null,"Json Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Success",\n  "code": "200"\n },\n "data": [\n  {\n   "id": "6ac7d684-1f8e-4a02-a502-720e8f11e50b",\n   "date": "2019-11-04",\n   "name": "ops1",\n   "available_states": [\n    "A,B,C"\n   ],\n   "defaults": {\n    "down": "B",\n    "missing": "A",\n    "unknown": "C"\n   },\n   "operations": [\n    {\n     "name": "AND",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "B"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "C"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "C"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "A"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "A"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "B"\n      }\n     ]\n    }\n   ]\n  }\n ]\n}\n')),(0,r.kt)("a",{id:"3"}),(0,r.kt)("h2",{id:"post-create-a-new-operations-profile"},"[POST]",": Create a new Operations Profile"),(0,r.kt)("p",null,"This method can be used to insert a new operations profile"),(0,r.kt)("h3",{id:"input-2"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /operations_profiles\n")),(0,r.kt)("h4",{id:"request-headers-2"},"Request headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,r.kt)("h4",{id:"optional-query-parameters-2"},"Optional Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date to create a  new historic version of the operation profile. If no date parameter is provided current date will be supplied automatically"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("h4",{id:"post-body"},"POST BODY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "name": "tops1",\n   "available_states": [\n    "A","B","C"\n   ],\n   "defaults": {\n    "down": "B",\n    "missing": "A",\n    "unknown": "C"\n   },\n   "operations": [\n    {\n     "name": "AND",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "B"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "C"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "C"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "A"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "A"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "B"\n      }\n     ]\n    }\n   ]\n  }\n')),(0,r.kt)("h3",{id:"response-2"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 201 Created")),(0,r.kt)("h4",{id:"response-body-2"},"Response body"),(0,r.kt)("p",null,"Json Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Operations Profile successfully created",\n  "code": "201"\n },\n "data": {\n  "id": "{{ID}}",\n  "links": {\n   "self": "https:///api/v2/operations_profiles/{{ID}}"\n  }\n }\n}\n')),(0,r.kt)("a",{id:"4"}),(0,r.kt)("h2",{id:"put-update-information-on-an-existing-operations-profile"},"[PUT]",": Update information on an existing operations profile"),(0,r.kt)("p",null,"This method can be used to update information on an existing operations profile"),(0,r.kt)("h3",{id:"input-3"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"PUT /operations_profiles/{ID}\n")),(0,r.kt)("h4",{id:"optional-query-parameters-3"},"Optional Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"date")),(0,r.kt)("td",{parentName:"tr",align:null},"Date to update a historic version of the operation profile. If no date parameter is provided the current date will be supplied automatically"),(0,r.kt)("td",{parentName:"tr",align:null},"NO")))),(0,r.kt)("h4",{id:"request-headers-3"},"Request headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,r.kt)("h4",{id:"put-body"},"PUT BODY"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n     "name": "tops1",\n     "available_states": [\n        "A","B","C"\n     ],\n     "defaults": {\n        "down": "B",\n        "missing": "A",\n        "unknown": "C"\n     },\n     "operations": [\n        {\n         "name": "AND",\n         "truth_table": [\n            {\n             "a": "A",\n             "b": "B",\n             "x": "B"\n            },\n            {\n             "a": "A",\n             "b": "C",\n             "x": "C"\n            },\n            {\n             "a": "B",\n             "b": "C",\n             "x": "C"\n            }\n         ]\n        },\n        {\n         "name": "OR",\n         "truth_table": [\n            {\n             "a": "A",\n             "b": "B",\n             "x": "A"\n            },\n            {\n             "a": "A",\n             "b": "C",\n             "x": "A"\n            },\n            {\n             "a": "B",\n             "b": "C",\n             "x": "B"\n            }\n         ]\n        }\n     ]\n    }\n')),(0,r.kt)("h3",{id:"response-3"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,r.kt)("h4",{id:"response-body-3"},"Response body"),(0,r.kt)("p",null,"Json Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Operations Profile successfully updated (new snapshot created)",\n  "code": "200"\n }\n}\n')),(0,r.kt)("a",{id:"5"}),(0,r.kt)("h2",{id:"delete-delete-an-existing-aggregation-profile"},"[DELETE]",": Delete an existing aggregation profile"),(0,r.kt)("p",null,"This method can be used to delete an existing aggregation profile"),(0,r.kt)("h3",{id:"input-4"},"Input"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"DELETE /operations_profiles/{ID}\n")),(0,r.kt)("h4",{id:"request-headers-4"},"Request headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"x-api-key: shared_key_value\nAccept: application/json\n")),(0,r.kt)("h3",{id:"response-4"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 200 OK")),(0,r.kt)("h4",{id:"response-body-4"},"Response body"),(0,r.kt)("p",null,"Json Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n "status": {\n  "message": "Operations Profile Successfully Deleted",\n  "code": "200"\n }\n}\n')),(0,r.kt)("h2",{id:"validation-checks"},"Validation Checks"),(0,r.kt)("p",null,"When submitting or updating a new operations profile, validation checks are performed on json POST/PUT body for the following cases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check if user has defined more than once a state name in available states list"),(0,r.kt)("li",{parentName:"ul"},"Check if user has defined more than once an operation name in operations list"),(0,r.kt)("li",{parentName:"ul"},"Check if user used an undefined state in operations"),(0,r.kt)("li",{parentName:"ul"},"Check if truth table statements are adequate to handle all cases")),(0,r.kt)("p",null,"When an invalid operations profile is submitted the api responds with a validation error list:"),(0,r.kt)("h4",{id:"example-invalid-profile"},"Example invalid profile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "name": "ops1",\n   "available_states": [\n    "A","B","C","C"\n   ],\n   "defaults": {\n    "down": "B",\n    "missing": "FOO",\n    "unknown": "C"\n   },\n   "operations": [\n    {\n     "name": "AND",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "B"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "C"\n      },\n      {\n       "a": "B",\n       "b": "BAR",\n       "x": "C"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "A"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "A"\n      },\n      {\n       "a": "B",\n       "b": "CAR",\n       "x": "B"\n      }\n     ]\n    },\n    {\n     "name": "OR",\n     "truth_table": [\n      {\n       "a": "A",\n       "b": "B",\n       "x": "A"\n      },\n      {\n       "a": "A",\n       "b": "C",\n       "x": "A"\n      },\n      {\n       "a": "B",\n       "b": "C",\n       "x": "B"\n      }\n     ]\n    }\n   ]\n  }\n')),(0,r.kt)("p",null,"  The above profile definition contains errors like: duplicate states, undefined states and inadequate statements in truth tables. Api response is the following:"),(0,r.kt)("h3",{id:"response-5"},"Response"),(0,r.kt)("p",null,"Headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Status: 422 Unprocessable Entity")),(0,r.kt)("h4",{id:"response-body-5"},"Response body"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"status": {\n "message": "Validation Error",\n "code": "422"\n},\n"errors": [\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "State:C is duplicated"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Operation:OR is duplicated"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Default Missing State: FOO not in available States"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "In Operation: AND, statement member b: BAR contains undeclared state"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "In Operation: OR, statement member b: CAR contains undeclared state"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:A in operation: AND"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:B in operation: AND"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:C in operation: AND"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:A in operation: OR"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:B in operation: OR"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:C in operation: OR"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:A in operation: OR"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:B in operation: OR"\n },\n {\n  "message": "Validation Failed",\n  "code": "422",\n  "details": "Not enough mentions of state:C in operation: OR"\n }\n]\n}\n')))}u.isMDXComponent=!0}}]);