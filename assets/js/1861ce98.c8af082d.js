"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7748],{2780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=t(4848),s=t(8453);const i={id:"topology_endpoints",title:"Topology Endpoints",sidebar_position:2},d=void 0,r={id:"topology/topology_endpoints",title:"Topology Endpoints",description:"API calls for handling topology endpoint resources",source:"@site/docs/topology/topology_endpoints.md",sourceDirName:"topology",slug:"/topology/topology_endpoints",permalink:"/argo-web-api/docs/topology/topology_endpoints",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"topology_endpoints",title:"Topology Endpoints",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Topology Service Types",permalink:"/argo-web-api/docs/topology/topology_service_types"},next:{title:"Topology Groups",permalink:"/argo-web-api/docs/topology/topology_groups"}},l={},c=[{value:"API calls for handling topology endpoint resources",id:"api-calls-for-handling-topology-endpoint-resources",level:2},{value:"POST: Create endpoint topology for specific date",id:"1",level:2},{value:"Input",id:"input",level:3},{value:"Url Parameters",id:"url-parameters",level:4},{value:"Headers",id:"headers",level:4},{value:"POST BODY",id:"post-body",level:3},{value:"Response Code",id:"response-code",level:4},{value:"Response body",id:"response-body",level:3},{value:"409 Conflict when trying to insert a topology that already exists",id:"409-conflict-when-trying-to-insert-a-topology-that-already-exists",level:2},{value:"Response Code",id:"response-code-1",level:3},{value:"Response body",id:"response-body-1",level:3},{value:"GET: List endpoint topology per date",id:"2",level:2},{value:"Input",id:"input-1",level:3},{value:"List All topology statistics",id:"list-all-topology-statistics",level:5},{value:"Url Parameters",id:"url-parameters-1",level:4},{value:"Headers",id:"headers-1",level:4},{value:"Response Code",id:"response-code-2",level:4},{value:"Response body",id:"response-body-2",level:3},{value:"Combined tenant example",id:"combined-tenant-example",level:3},{value:"Example Request",id:"example-request",level:4},{value:"Response Code",id:"response-code-3",level:4},{value:"Response body",id:"response-body-3",level:4},{value:"[DELETE]: Delete endpoint topology for a specific date",id:"3",level:2},{value:"Input",id:"input-2",level:3},{value:"Request headers",id:"request-headers",level:4},{value:"Response",id:"response",level:3},{value:"Response body",id:"response-body-4",level:4},{value:"GET: List endpoint topology for specific report",id:"4",level:2},{value:"Input",id:"input-3",level:3},{value:"Url Parameters",id:"url-parameters-2",level:4},{value:"Headers",id:"headers-2",level:4},{value:"Example Request",id:"example-request-1",level:4},{value:"Response Code",id:"response-code-4",level:4},{value:"Response body",id:"response-body-5",level:3}];function a(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"api-calls-for-handling-topology-endpoint-resources",children:"API calls for handling topology endpoint resources"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Name"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Shortcut"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"POST: Create endpoint topology for specific date"}),(0,o.jsx)(n.td,{children:"Creates a daily endpoint topology mapping endpoints to endpoint groups"}),(0,o.jsx)(n.td,{children:(0,o.jsx)("a",{href:"#1",children:"Description"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET: List endpoint topology for specific date"}),(0,o.jsx)(n.td,{children:"Lists endpoint topology for a specific date"}),(0,o.jsx)(n.td,{children:(0,o.jsx)("a",{href:"#2",children:"Description"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"DELETE: delete endpoint topology for specific date"}),(0,o.jsx)(n.td,{children:"Deletes all endpoint items (topology) for a specific date"}),(0,o.jsx)(n.td,{children:(0,o.jsx)("a",{href:"#3",children:"Description"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"GET: List endpoint topology for specific report"}),(0,o.jsx)(n.td,{children:"Lists endpoint topology for a specific report"}),(0,o.jsx)(n.td,{children:(0,o.jsx)("a",{href:"#4",children:"Description"})})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"1",children:"POST: Create endpoint topology for specific date"}),"\n",(0,o.jsx)(n.p,{children:"Creates a daily endpoint topology mapping endpoints to endpoint groups"}),"\n",(0,o.jsx)(n.h3,{id:"input",children:"Input"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"POST /topology/endpoints?date=YYYY-MM-DD\n"})}),"\n",(0,o.jsx)(n.h4,{id:"url-parameters",children:"Url Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Default value"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"date"})}),(0,o.jsx)(n.td,{children:"target a specific date"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{children:"today's date"})]})})]}),"\n",(0,o.jsx)(n.h4,{id:"headers",children:"Headers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"x-api-key: secret_key_value\nAccept: application/json\n"})}),"\n",(0,o.jsx)(n.h3,{id:"post-body",children:"POST BODY"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'[\n    {\n        "group": "SITE_A",\n        "hostname": "host1.site-a.foo",\n        "type": "SITES",\n        "service": "a.service.foo",\n        "tags": { "scope": "TENANT", "production": "1", "monitored": "1" }\n    },\n    {\n        "group": "SITE_A",\n        "hostname": "host2.site-b.foo",\n        "type": "SITES",\n        "service": "b.service.foo",\n        "tags": { "scope": "TENANT", "production": "1", "monitored": "1" }\n    },\n    {\n        "group": "SITE_B",\n        "hostname": "host1.site-a.foo",\n        "type": "SITES",\n        "service": "c.service.foo",\n        "tags": { "scope": "TENANT", "production": "1", "monitored": "1" },\n        "notifications": {"contacts": ["email01@example.com"], "enabled": true}\n    }\n]\n'})}),"\n",(0,o.jsx)(n.h4,{id:"response-code",children:"Response Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Status: 201 OK Created\n"})}),"\n",(0,o.jsx)(n.h3,{id:"response-body",children:"Response body"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "message": "Topology of 3 endpoints created for date: YYYY-MM-DD",\n    "code": "201"\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"409-conflict-when-trying-to-insert-a-topology-that-already-exists",children:"409 Conflict when trying to insert a topology that already exists"}),"\n",(0,o.jsx)(n.p,{children:"When trying to insert a topology for a specific date that already exists the api will answer with the following response:"}),"\n",(0,o.jsx)(n.h3,{id:"response-code-1",children:"Response Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Status: 409 Conflict\n"})}),"\n",(0,o.jsx)(n.h3,{id:"response-body-1",children:"Response body"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "message": "topology already exists for date: YYYY-MM-DD, please either update it or delete it first!",\n    "code": "409"\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"User can proceed with either updating the existing endpoint topology OR deleting before trying to create it anew"}),"\n",(0,o.jsx)(n.h2,{id:"2",children:"GET: List endpoint topology per date"}),"\n",(0,o.jsx)(n.p,{children:"List endpoint topology for a specific date or the closest available topology to that date. If date is not provided list the latest available endpoint topology."}),"\n",(0,o.jsx)(n.h3,{id:"input-1",children:"Input"}),"\n",(0,o.jsx)(n.h5,{id:"list-all-topology-statistics",children:"List All topology statistics"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GET /topology/endpoints?date=YYYY-MM-DD\n"})}),"\n",(0,o.jsx)(n.h4,{id:"url-parameters-1",children:"Url Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Default value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"date"})}),(0,o.jsx)(n.td,{children:"target a specific date"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{children:"today's date"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"group"})}),(0,o.jsx)(n.td,{children:"filter by group name"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"type"})}),(0,o.jsx)(n.td,{children:"filter by group type"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"service"})}),(0,o.jsx)(n.td,{children:"filter by service"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"hostname"})}),(0,o.jsx)(n.td,{children:"filter by hostname"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"tags"})}),(0,o.jsxs)(n.td,{children:["filter by tag key",":value"," pairs"]}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mode"})}),(0,o.jsxs)(n.td,{children:["if stating ",(0,o.jsx)(n.code,{children:"mode=combined"})," then if the tenant has data feeds from other tenants their endpoint topology items will be combined in the final results"]}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{children:"empty"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"note"})," : user can use wildcard * in filters\n",(0,o.jsx)(n.em,{children:"note"})," : when using tag filters the query string must follow the pattern: ",(0,o.jsx)(n.code,{children:"?tags=key1:value1,key2:value2"}),"\n",(0,o.jsx)(n.em,{children:"note"})," : You can use ",(0,o.jsx)(n.code,{children:"~"})," as a negative operator in the beginning of a filter value to exclude something: For example you can exclude endpoints with service of value ",(0,o.jsx)(n.code,{children:"SERVICE_A"})," by issuing ",(0,o.jsx)(n.code,{children:"?service:~SERVICE_A"})]}),"\n",(0,o.jsx)(n.h4,{id:"headers-1",children:"Headers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"x-api-key: secret_key_value\nAccept: application/json\n"})}),"\n",(0,o.jsx)(n.h4,{id:"response-code-2",children:"Response Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Status: 200 OK\n"})}),"\n",(0,o.jsx)(n.h3,{id:"response-body-2",children:"Response body"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "date": "2019-12-12",\n            "group": "SITE_A",\n            "hostname": "host1.site-a.foo",\n            "type": "SITES",\n            "service": "a.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            }\n        },\n        {\n            "date": "2019-12-12",\n            "group": "SITE_A",\n            "hostname": "host2.site-b.foo",\n            "type": "SITES",\n            "service": "b.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            }\n        },\n        {\n            "date": "2019-12-12",\n            "group": "SITE_B",\n            "hostname": "host1.site-a.foo",\n            "type": "SITES",\n            "service": "c.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            },\n            "notifications": {\n                "contacts": ["email01@example.com"],\n                "enabled": true\n            }\n        }\n    ]\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"combined-tenant-example",children:"Combined tenant example"}),"\n",(0,o.jsxs)(n.p,{children:["If the tenant is configured to receive data from other tenants in its data feeds the combined mode can be used when retrieving topology endpoint items. In this mode the list of items is enriched with items from tenants specified in the data feeds. Items from those tenants receive an extra ",(0,o.jsx)(n.code,{children:"tenant"})," field to signify their origin. To enable the combine mode use the optional url parameter ",(0,o.jsx)(n.code,{children:"mode=combined"})]}),"\n",(0,o.jsx)(n.h4,{id:"example-request",children:"Example Request"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GET /topology/endpoints?date=2015-07-22?mode=combined\n"})}),"\n",(0,o.jsx)(n.h4,{id:"response-code-3",children:"Response Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Status: 200 OK\n"})}),"\n",(0,o.jsx)(n.h4,{id:"response-body-3",children:"Response body"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "date": "2019-12-12",\n            "group": "SITE_X",\n            "hostname": "host01.site-y.foo",\n            "type": "SITES",\n            "service": "x.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            },\n            "tenant": "TENANT_A"\n        },\n        {\n            "date": "2019-12-12",\n            "group": "SITE_Y",\n            "hostname": "host01.site-y.foo",\n            "type": "SITES",\n            "service": "y.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            },\n            "tenant": "TENANT_B"\n        }\n    ]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"3",children:"[DELETE]: Delete endpoint topology for a specific date"}),"\n",(0,o.jsx)(n.p,{children:"This method can be used to delete all endpoint items contributing to the endpoint topology of a specific date"}),"\n",(0,o.jsx)(n.h3,{id:"input-2",children:"Input"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"DELETE /topology/endpoints?date=YYYY-MM-DD\n"})}),"\n",(0,o.jsx)(n.h4,{id:"request-headers",children:"Request headers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n"})}),"\n",(0,o.jsx)(n.h3,{id:"response",children:"Response"}),"\n",(0,o.jsxs)(n.p,{children:["Headers: ",(0,o.jsx)(n.code,{children:"Status: 200 OK"})]}),"\n",(0,o.jsx)(n.h4,{id:"response-body-4",children:"Response body"}),"\n",(0,o.jsx)(n.p,{children:"Json Response"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "message": "Topology of 3 endpoints deleted for date: 2019-12-12",\n    "code": "200"\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"4",children:"GET: List endpoint topology for specific report"}),"\n",(0,o.jsx)(n.p,{children:"Lists endpoint topology items for specific report"}),"\n",(0,o.jsx)(n.h3,{id:"input-3",children:"Input"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GET /topology/endpoint/by_report/{report-name}?date=YYYY-MM-DD\n"})}),"\n",(0,o.jsx)(n.h4,{id:"url-parameters-2",children:"Url Parameters"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Description"}),(0,o.jsx)(n.th,{children:"Required"}),(0,o.jsx)(n.th,{children:"Default value"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"report-name"})}),(0,o.jsx)(n.td,{children:"target a specific report"}),(0,o.jsx)(n.td,{children:"YES"}),(0,o.jsx)(n.td,{children:"none"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"date"})}),(0,o.jsx)(n.td,{children:"target a specific date"}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{children:"today's date"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"mode"})}),(0,o.jsxs)(n.td,{children:["if stating ",(0,o.jsx)(n.code,{children:"mode=combined"})," then if the tenant has data feeds from other tenants their endpoint topology items will be combined in the final results"]}),(0,o.jsx)(n.td,{children:"NO"}),(0,o.jsx)(n.td,{children:"empty"})]})]})]}),"\n",(0,o.jsx)(n.h4,{id:"headers-2",children:"Headers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"x-api-key: secret_key_value\nAccept: application/json\n"})}),"\n",(0,o.jsx)(n.h4,{id:"example-request-1",children:"Example Request"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GET /topology/endpoints/by_report/Critical?date=2015-07-22\n"})}),"\n",(0,o.jsx)(n.h4,{id:"response-code-4",children:"Response Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Status: 200 OK\n"})}),"\n",(0,o.jsx)(n.h3,{id:"response-body-5",children:"Response body"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n    "status": {\n        "message": "Success",\n        "code": "200"\n    },\n    "data": [\n        {\n            "date": "2019-12-12",\n            "group": "SITE_A",\n            "hostname": "host1.site-a.foo",\n            "type": "SITES",\n            "service": "a.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            }\n        },\n        {\n            "date": "2019-12-12",\n            "group": "SITE_A",\n            "hostname": "host2.site-b.foo",\n            "type": "SITES",\n            "service": "b.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            }\n        },\n        {\n            "date": "2019-12-12",\n            "group": "SITE_B",\n            "hostname": "host1.site-a.foo",\n            "type": "SITES",\n            "service": "c.service.foo",\n            "tags": {\n                "scope": "TENANT",\n                "production": "1",\n                "monitored": "1"\n            },\n            "notifications": {\n                "contacts": ["email01@example.com"],\n                "enabled": true\n            }\n        }\n    ]\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);