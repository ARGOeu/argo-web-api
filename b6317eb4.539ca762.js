(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{83:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(6),i=(n(0),n(93)),o=["components"],c={id:"topology_service_types",title:"Topology Service Types"},l={unversionedId:"topology_service_types",id:"topology_service_types",isDocsHomePage:!1,title:"Topology Service Types",description:"API calls for handling topology list of service types",source:"@site/docs/topology_service_types.md",slug:"/topology_service_types",permalink:"/argo-web-api/docs/topology_service_types",version:"current",sidebar:"someSidebar",previous:{title:"Topology Endpoints",permalink:"/argo-web-api/docs/topology_endpoints"},next:{title:"Topology Statistics",permalink:"/argo-web-api/docs/topology_stats"}},s=[{value:"API calls for handling topology list of service types",id:"api-calls-for-handling-topology-list-of-service-types",children:[]},{value:"POST: Create list of service types for specific date",id:"post-create-list-of-service-types-for-specific-date",children:[{value:"Input",id:"input",children:[]},{value:"POST BODY",id:"post-body",children:[]},{value:"Response body",id:"response-body",children:[]}]},{value:"409 Conflict when trying to insert a topology that already exists",id:"409-conflict-when-trying-to-insert-a-topology-that-already-exists",children:[{value:"Response Code",id:"response-code-1",children:[]},{value:"Response body",id:"response-body-1",children:[]}]},{value:"GET: List service types for specific date",id:"get-list-service-types-for-specific-date",children:[{value:"Input",id:"input-1",children:[]},{value:"Response body",id:"response-body-2",children:[]}]},{value:"DELETE: Delete list of service types for specific date",id:"delete-delete-list-of-service-types-for-specific-date",children:[{value:"Input",id:"input-2",children:[]},{value:"Response",id:"response",children:[]}]}],p={rightToc:s};function b(e){var t=e.components,n=Object(a.a)(e,o);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"api-calls-for-handling-topology-list-of-service-types"},"API calls for handling topology list of service types"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Description"),Object(i.b)("th",{parentName:"tr",align:null},"Shortcut"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"POST: Create list of service types for specific date"),Object(i.b)("td",{parentName:"tr",align:null},"Creates a daily list of available service types for the specific tenant"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{href:"#1"},"Description"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"GET: List service types for specific date"),Object(i.b)("td",{parentName:"tr",align:null},"Lists the available service types per tenant for a specific date"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{href:"#2"},"Description"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"DELETE: Delete list of service types for specific date"),Object(i.b)("td",{parentName:"tr",align:null},"Delete List of available service types for a specific date"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{href:"#3"},"Description"))))),Object(i.b)("a",{id:"1"}),Object(i.b)("h2",{id:"post-create-list-of-service-types-for-specific-date"},"POST: Create list of service types for specific date"),Object(i.b)("p",null,"Creates a daily list of available service types for the specific tenant"),Object(i.b)("h3",{id:"input"},"Input"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"POST /topology/service-types?date=YYYY-MM-DD\n")),Object(i.b)("h4",{id:"url-parameters"},"Url Parameters"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"),Object(i.b)("th",{parentName:"tr",align:null},"Required"),Object(i.b)("th",{parentName:"tr",align:null},"Default value"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"date")),Object(i.b)("td",{parentName:"tr",align:null},"target a specific date"),Object(i.b)("td",{parentName:"tr",align:null},"NO"),Object(i.b)("td",{parentName:"tr",align:null},"today's date")))),Object(i.b)("h4",{id:"headers"},"Headers"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"x-api-key: secret_key_value\nAccept: application/json\n")),Object(i.b)("h3",{id:"post-body"},"POST BODY"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "name": "Service_Type_A",\n    "description": "a short descritpion of service type a"\n  },\n  {\n    "name": "Service_Type_B",\n    "description": "a short descritpion of service type b"\n  },\n  {\n    "name": "Service_Type_C",\n    "description": "a short descritpion of service type c"\n  }\n]\n')),Object(i.b)("h4",{id:"response-code"},"Response Code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Status: 201 OK Created\n")),Object(i.b)("h3",{id:"response-body"},"Response body"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Topology of 3 service types created for date: YYYY-MM-DD",\n    "code": "201"\n}\n')),Object(i.b)("h2",{id:"409-conflict-when-trying-to-insert-a-topology-that-already-exists"},"409 Conflict when trying to insert a topology that already exists"),Object(i.b)("p",null,"When trying to insert a topology for a specific date that already exists the api will answer with the following reponse:"),Object(i.b)("h3",{id:"response-code-1"},"Response Code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Status: 409 Conflict\n")),Object(i.b)("h3",{id:"response-body-1"},"Response body"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Topology list of service types already exists for date: YYYY-MM-DD, please either update it or delete it first!",\n    "code": "409"\n}\n')),Object(i.b)("p",null,"User can proceed with either updating the existing topology OR deleting before trying to create it anew"),Object(i.b)("a",{id:"2"}),Object(i.b)("h2",{id:"get-list-service-types-for-specific-date"},"GET: List service types for specific date"),Object(i.b)("p",null,"Lists the available service types per tenant for a specific date"),Object(i.b)("h3",{id:"input-1"},"Input"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"GET /topology/service-types?date=YYYY-MM-DD\n")),Object(i.b)("h4",{id:"url-parameters-1"},"Url Parameters"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"),Object(i.b)("th",{parentName:"tr",align:null},"Required"),Object(i.b)("th",{parentName:"tr",align:null},"Default value"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"date")),Object(i.b)("td",{parentName:"tr",align:null},"target a specific date"),Object(i.b)("td",{parentName:"tr",align:null},"NO"),Object(i.b)("td",{parentName:"tr",align:null},"today's date")))),Object(i.b)("h4",{id:"headers-1"},"Headers"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"x-api-key: secret_key_value\nAccept: application/json\n")),Object(i.b)("h4",{id:"example-request"},"Example Request"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"GET /topology/service-types?date=2019-03-03\n")),Object(i.b)("h4",{id:"response-code-2"},"Response Code"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"Status: 200 OK\n")),Object(i.b)("h3",{id:"response-body-2"},"Response body"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "status": {\n    "message": "Success",\n    "code": "200"\n  },\n  "data": [\n    {\n      "date": "2019-03-03",\n      "name": "Service_Type_A",\n      "description": "a short descritpion of service type a"\n    },\n    {\n      "date": "2019-03-03",\n      "name": "Service_Type_B",\n      "description": "a short descritpion of service type b"\n    },\n    {\n      "date": "2019-03-03",\n      "name": "Service_Type_C",\n      "description": "a short descritpion of service type c"\n    }\n  ]\n}\n')),Object(i.b)("a",{id:"3"}),Object(i.b)("h2",{id:"delete-delete-list-of-service-types-for-specific-date"},"[DELETE]",": Delete list of service types for specific date"),Object(i.b)("p",null,"This method can be used to delete all servic type items contributing to the list of available service types of a specific date"),Object(i.b)("h3",{id:"input-2"},"Input"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"DELETE /topology/service-types?date=YYYY-MM-DD\n")),Object(i.b)("h4",{id:"request-headers"},"Request headers"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"x-api-key: shared_key_value\nContent-Type: application/json\nAccept: application/json\n")),Object(i.b)("h3",{id:"response"},"Response"),Object(i.b)("p",null,"Headers: ",Object(i.b)("inlineCode",{parentName:"p"},"Status: 200 OK")),Object(i.b)("h4",{id:"response-body-3"},"Response body"),Object(i.b)("p",null,"Json Response"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n    "message": "Topology of 3 service types deleted for date: 2019-12-12",\n    "code": "200"\n}\n')))}b.isMDXComponent=!0},93:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return y}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),u=r,y=b["".concat(o,".").concat(u)]||b[u]||d[u]||i;return n?a.a.createElement(y,c(c({ref:t},s),{},{components:n})):a.a.createElement(y,c({ref:t},s))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);