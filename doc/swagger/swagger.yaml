swagger: '2.0'
info:
  title: ARGO web api
  description: "ARGO is a lightweight service for Service Level Monitoring designed for medium and large sized e-Infrastructures. This swagger UI interface provides access to the ARGO web api, which in turn can be used for either retrieving Availability/Reliability and status results or for defining profiles and reports that should be used within the SLM computations. The ARGO web api is multitenant and can hence be used by multiple e-Infrastructure providers. To list, add, update or remove tenants use the Tenants resource below. Under all other resources use per given tenant the corresponding api key."
  version: 1.9.1
  contact:
    name: ARGO Developers
    url: http://argoeu.github.io/
    email: argo-dev@lists.grnet.gr
host: localhost
schemes:
  - https
basePath: /api/v2
produces:
  - application/json
tags:
  - name: Tenants
    description: ARGO tenants
  - name: Reports
    description: Everything about reports
  - name: Operations Profiles
    description: Possible states and AND/OR truth tables
  - name: Aggregation Profiles
    description: Service types groupings into higher groups
  - name: Metric Profiles
    description: Metrics associated with a given service type
  - name: Factors
    description: Multipliers for grouped aggregated A/R
  - name: Recomputations
    description: A/R recomputations
  - name: Results
    description: Availability/Reliability in numbers
  - name: Status
    description: Status results in detail
  - name: MetricResult
    description: Retrieve the full output of a  metric result
  - name: Issues
    description: List of problematic endpoints
paths:


  /admin/tenants/{TENANT_ID}:
    get:
      summary: List a specific tenant
      operationId: tenants.ListOne
      description: List one specific tenant designated by its unique id
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with one tenant
          schema:
            $ref: '#/definitions/Tenant_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: Update a tenant
      operationId: tenants.Update
      description: update information on a specific tenant definition
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - name: "tenant"
          in: "body"
          description: "Json description of tenant definition to be updated"
          required: true
          schema:
            $ref: '#/definitions/Tenant'
      responses:
        '201':
          description: Tenant definition updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a tenant
      operationId: tenant.Delete
      description: Delete a specific tenant which is targeted by it's unique id
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant definition"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: Tenant definition Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /admin/tenants:
    get:
      summary: List all available tenants
      operationId: tenants.List
      description: List all available tenants in the system
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list of all available tenants
          schema:
            $ref: '#/definitions/Tenant_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a tenant definition
      operationId: tenants.Create
      description: Create a new tenant definition
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "tenant"
          in: "body"
          description: "Json description of the tenant to be created"
          required: true
          schema:
            $ref: '#/definitions/Tenant'
      responses:
        '200':
          description: Tenant definition created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /admin/tenants/{TENANT_ID}/status:
    get:
      summary: List a specific tenant's argo-engine status
      operationId: tenants.ListStatus
      description: List one specific tenant's status designated by its unique id
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with one tenant's argo-engine status
          schema:
            $ref: '#/definitions/Tenant_status_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: Update a tenant's status
      operationId: tenants.UpdateStatus
      description: update information on a specific tenant's argo-engine status definition
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - name: "tenant"
          in: "body"
          description: "Json description of tenant's argo-engine status definition to be updated"
          required: true
          schema:
            $ref: '#/definitions/Tenant_status'
      responses:
        '201':
          description: Tenant's status definition updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  /admin/tenants/{TENANT_ID}/users:
    post:
      summary: Create a new user on existing tenant
      operationId: tenants.CreateUser
      description: Create a new user on existing tenant
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - name: "user"
          in: "body"
          description: "Json description of the user to be created"
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    get:
      summary: List all available users
      operationId: tenants.ListUSers
      description: List all available users in a tenant 
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
      responses:
        '200':
          description: A list of all available user
          schema:
            $ref: '#/definitions/Users_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  /admin/tenants/{TENANT_ID}/users/{USER_ID}:
    put:
      summary: Update a user
      operationId: tenants.UpdateUser
      description: Update an existing user on specific tenant
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - name: "USER_ID"
          in: "path"
          description: "id of the user"
          required: true
          type: string
        - name: "user"
          in: "body"
          description: "Json description of the user to be updated"
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a user from tenant
      operationId: tenant.DeleteUser
      description: Delete a specific user from an existing tenant
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant definition"
          required: true
          type: string
        - name: "USER_ID"
          in: "path"
          description: "id of the user"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: User Deleted and removed from tenant
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    get:
      summary: Get user info
      operationId: tenants.GetUser
      description: Get information of specific user member of specific tenant
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - name: "USER_ID"
          in: "path"
          description: "id of the user"
          required: true
          type: string  
      responses:
        '200':
          description: User information
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
            
  /admin/tenants/{TENANT_ID}/users/{USER_ID}/renew_api_key:
    post:
      summary: Renew a user's api key
      operationId: tenants.UserRenewKey
      description: Renew a user's api key
      tags:
        - Tenants
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "TENANT_ID"
          in: "path"
          description: "id of the tenant"
          required: true
          type: string
        - name: "USER_ID"
          in: "path"
          description: "id of the user"
          required: true
          type: string
      responses:
        '200':
          description: User key renewed
          schema:
            $ref: '#/definitions/RenewedToken'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /admin/users:byID/{USER_ID}:
    get:
      summary: List a specific user
      operationId: tenants.user_by_id
      description: List one specific user designated by its unique id
      tags:
        - Tenants
      produces:
        - "application/json"
      parameters:
        - $ref: '#/parameters/export'
        - name: "USER_ID"
          in: "path"
          description: "id of the user"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with one user
          schema:
            $ref: '#/definitions/Users_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /reports/{REPORT_ID}:
    get:
      summary: List a specific report
      operationId: reports.ListOne
      description: List one specific report designated by its unique id
      tags:
        - Reports
      produces:
        - "application/json"
      parameters:
        - name: "REPORT_ID"
          in: "path"
          description: "id of the report"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with one report
          schema:
            $ref: '#/definitions/Report_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: Update a report
      operationId: reports.Update
      description: update information on a specific report definition
      tags:
        - Reports
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "REPORT_ID"
          in: "path"
          description: "id of the report"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - name: "report"
          in: "body"
          description: "Json description of report definition to be updated"
          required: true
          schema:
            $ref: '#/definitions/Report'
      responses:
        '201':
          description: Report definition updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a report
      operationId: reports.Delete
      description: Delete a specific report which is targeted by it's unique id
      tags:
        - Reports
      produces:
        - "application/json"
      parameters:
        - name: "REPORT_ID"
          in: "path"
          description: "id of the Report definition"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: Report definition Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  /reports:
    get:
      summary: List all available reports
      operationId: reports.List
      description: Reports provide a collection
      tags:
        - Reports
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list of all available Reports
          schema:
            $ref: '#/definitions/Report_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a report definition
      operationId: reports.Create
      description: Create a new Report definition
      tags:
        - Reports
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "report"
          in: "body"
          description: "Json description of the report to be created"
          required: true
          schema:
            $ref: '#/definitions/Report'
      responses:
        '200':
          description: Report definition created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /operations_profiles/{PROFILE_ID}:
    get:
      summary: List a specific operations profile
      operationId: operationsProfiles.ListOne
      description: List one specific operations profile targeted by it's unique id
      tags:
        - Operations Profiles
      produces:
        - "application/json"
      parameters:
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the operations profile"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list with one operations profile
          schema:
            $ref: '#/definitions/Operations_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: Update an operations profile
      operationId: operationsProfiles.Update
      description: update information on a specific Operations Profile which is targeted by it's unique id
      tags:
        - Operations Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the operations profile"
          required: true
          type: string
        - name: "operations_profile"
          in: "body"
          description: "Json description of the operations profile to be updated"
          required: true
          schema:
            $ref: '#/definitions/Operations_profile'
      responses:
        '201':
          description: Operations profile Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete an operations profile
      operationId: operationsProfiles.Delete
      description: Delete a specific Operations Profile which is targeted by it's unique id
      tags:
        - Operations Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the operations profile"
          required: true
          type: string
      responses:
        '200':
          description: Operations profile Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  /operations_profiles:
    get:
      summary: List all operations profiles
      operationId: operationsProfiles.List
      description: Operations Profiles provides a list of available monitoring states and logical operations defined on how to aggregate them
      tags:
        - Operations Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list of Operations profiles
          schema:
            $ref: '#/definitions/Operations_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create an Operations profile
      operationId: operationsProfiles.Create
      description: Create a new Operations Profile
      tags:
        - Operations Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - name: "x-api-key"
          in: "header"
          description: "the x-api-key"
          required: true
          type: "string"
        - name: "operations_profile"
          in: "body"
          description: "Json description of the operations profile to be created"
          required: true
          schema:
            $ref: '#/definitions/Operations_profile'
      responses:
        '200':
          description: Operations profile Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'


  /aggregation_profiles/{PROFILE_ID}:
    get:
      summary: List a specific aggregation profile
      operationId: aggregationProfiles.ListOne
      description: List one specific aggregation profile targeted by it's unique id
      tags:
        - Aggregation Profiles
      produces:
        - "application/json"
      parameters:
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the aggregation profile"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list with one aggregation profile
          schema:
            $ref: '#/definitions/Aggregation_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: Update an aggregation profile
      operationId: aggregationProfiles.Update
      description: update information on a specific aggregation Profile which is targeted by it's unique id
      tags:
        - Aggregation Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the aggregation profile"
          required: true
          type: string
        - name: "aggregation_profile"
          in: "body"
          description: "Json description of the aggregation profile to be updated"
          required: true
          schema:
            $ref: '#/definitions/Aggregation_profile'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '201':
          description: Aggregation profile Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete an aggregation profile
      operationId: aggregationProfiles.Delete
      description: Delete a specific aggregation Profile which is targeted by it's unique id
      tags:
        - Aggregation Profiles
      produces:
        - "application/json"
      parameters:
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the aggregation profile"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: Aggregation profile Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  /aggregation_profiles:
    get:
      summary: List all aggregation profiles
      operationId: aggregationProfiles.List
      description: Aggregation Profiles provide a hiearchy structure of how different services are being aggregated during computations
      tags:
        - Aggregation Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list of aggregation profiles
          schema:
            $ref: '#/definitions/Aggregation_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create an aggregation profile
      operationId: aggregationProfiles.Create
      description: Create a new aggregation Profile
      tags:
        - Aggregation Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "aggregation_profile"
          in: "body"
          description: "Json description of the aggregation profile to be created"
          required: true
          schema:
            $ref: '#/definitions/Aggregation_profile'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Aggregation profile Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '422':
          description: Validation Error
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'


  /metric_profiles/{PROFILE_ID}:
    get:
      summary: List a specific metric profile
      operationId: metricProfiles.ListOne
      description: List one specific metric profile targeted by it's unique id
      tags:
        - Metric Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/apiKey"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the metric profile"
          required: true
          type: string
      responses:
        '200':
          description: A list with one metric profile
          schema:
            $ref: '#/definitions/Metric_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: update a metric profile
      operationId: metricProfiles.Update
      description: update information on a specific metric Profile which is targeted by it's unique id
      tags:
        - Metric Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the metric profile"
          required: true
          type: string
        - name: "metric_profile"
          in: "body"
          description: "Json description of the metric profile to be updated"
          required: true
          schema:
            $ref: '#/definitions/Metric_profile'
      responses:
        '201':
          description: Metric profile Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a metric profile
      operationId: metricProfiles.Delete
      description: Delete a specific metric Profile which is targeted by it's unique id
      tags:
        - Metric Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the metric profile"
          required: true
          type: string
      responses:
        '200':
          description: Metric profile Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  /metric_profiles:
    get:
      summary: List all metric profiles
      operationId: metricProfiles.List
      description: Metric Profiles provide a list of relevant services/metrics to be accounted during a computation
      tags:
        - Metric Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list of metric profiles
          schema:
            $ref: '#/definitions/Metric_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a metric profile
      operationId: metricProfiles.Create
      description: Create a new metric Profile which includes a list of relevant services and metrics to be accounted during a computation
      tags:
        - Metric Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "metric_profile"
          in: "body"
          description: "Json description of the metric profile to be created"
          required: true
          schema:
            $ref: '#/definitions/Metric_profile'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Metric profile Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /thresholds_profiles/{PROFILE_ID}:
    get:
      summary: List a specific threhsolds profile
      operationId: thresholdsProfiles.ListOne
      description: List one specific thresholds profile targeted by it's unique id
      tags:
        - Thresholds Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the thresholds profile"
          required: true
          type: string
      responses:
        '200':
          description: A list with one thresholds profile
          schema:
            $ref: '#/definitions/Thresholds_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: update a threhsolds profile
      operationId: threhsoldsProfiles.Update
      description: update information on a specific thresholds Profile which is targeted by it's unique id
      tags:
        - Thresholds Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the thresholds profile"
          required: true
          type: string
        - name: "thresholds_profile"
          in: "body"
          description: "Json description of the thresholds profile to be updated"
          required: true
          schema:
            $ref: '#/definitions/Thresholds_profile'
      responses:
        '201':
          description: Thresholds profile Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a thresholds profile
      operationId: thresholdsProfiles.Delete
      description: Delete a specific thresholds Profile which is targeted by it's unique id
      tags:
        - Thresholds Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the thresholds profile"
          required: true
          type: string
      responses:
        '200':
          description: Thresholds profile Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /thresholds_profiles:
    get:
      summary: List all threhsolds profiles
      operationId: thresholdsProfiles.List
      description: Thresholds profiles provide a list of threshold rules to be accounted during a computation
      tags:
        - Thresholds Profiles
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list of thresholds profiles
          schema:
            $ref: '#/definitions/Thresholds_profile_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a thresholds profile
      operationId: thresholdsProfiles.Create
      description: Create a new thresholds profile which includes a list of threshold ruels to be accounted during a computation
      tags:
        - Thresholds Profiles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "thresholds_profile"
          in: "body"
          description: "Json description of the thresholds profile to be created"
          required: true
          schema:
            $ref: '#/definitions/Thresholds_profile'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Thresholds profile Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            

    

  /downtimes:
    get:
      summary: List all downtimes resources for specific name
      operationId: downtimes.List
      description: List available downtimes resources
      tags:
        - Downtimes
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list of downtimes resources
          schema:
            $ref: '#/definitions/Downtimes_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a new downtimes resource
      operationId: downtimes.Create
      description: Create a new downtimes resource that includes a list of downtime periods assigned to hosts
      tags:
        - Downtimes
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "downtimes_resource"
          in: "body"
          description: "Json description of the downtimes resource to be created"
          required: true
          schema:
            $ref: '#/definitions/Downtimes'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Downtimes resource Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a downtimes resource
      operationId: downtimes.Delete
      description: Delete a specific downtimes resource which is targeted by it's unique id
      tags:
        - Downtimes
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"

      responses:
        '200':
          description: Downtimes resource deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  
  /weights/{PROFILE_ID}:
    get:
      summary: List a specific weights resource
      operationId: weights.ListOne
      description: List one specific weights resource targeted by it's unique id
      tags:
        - Weights
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the weights resource"
          required: true
          type: string
      responses:
        '200':
          description: A list with a weights resource
          schema:
            $ref: '#/definitions/Weights_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: update an existing weights resource
      operationId: weights.Update
      description: update information on a specific weights resource which is targeted by it's unique id
      tags:
        - Weights
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the weights resource"
          required: true
          type: string
        - name: "weights_resource"
          in: "body"
          description: "Json description of the weight_resource to be updated"
          required: true
          schema:
            $ref: '#/definitions/Weights'
      responses:
        '201':
          description: Weights resource Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    delete:
      summary: Delete a weights resource
      operationId: weights.Delete
      description: Delete a specific weights resource which is targeted by it's unique id
      tags:
        - Weights
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "PROFILE_ID"
          in: "path"
          description: "id of the weights resource"
          required: true
          type: string
      responses:
        '200':
          description: Weights resource deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /weights:
    get:
      summary: List all weight resource
      operationId: weights.List
      description: List available weight resources
      tags:
        - Weights
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: A list of weights resources
          schema:
            $ref: '#/definitions/Weights_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    post:
      summary: Create a new weights resource
      operationId: weights.Create
      description: Create a new weights resource that includes mapping of groups and weights to be used through a computation
      tags:
        - Weights
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "weights_resource"
          in: "body"
          description: "Json description of the weights resource to be created"
          required: true
          schema:
            $ref: '#/definitions/Weights'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Weights resource Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /topology/stats/{report_name}:
    get:
      summary: "List topology statistics for a specific report"
      description: "This request lists number of groups and services contained in the report"
      operationId: topology
      tags:
        - Topology
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/topoDate"

      responses:
        200:
          description: "Successful retrieval of latest metric data"
          schema:
            $ref: "#/definitions/TopologyResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /topology/tags:
    get:
      summary: "List topology tags and values"
      description: "This request lists the available tags and their distinct values present in the daily topology items"
      operationId: topology.tags
      tags:
        - Topology
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/topoDate"

      responses:
        200:
          description: "Successful retrieval of latest metric data"
          schema:
            $ref: "#/definitions/TopologyTags_list"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /topology/groups:
    post:
      summary: Create a new group topology per date
      operationId: topology_groups.create
      description: Create a new group topology which maps top level groups to subgroups
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "group_resource"
          in: "body"
          description: "Json description of group topology items to be created"
          required: true
          schema:
            $ref: '#/definitions/TopologyGroups'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Topology resource Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        '409':
          description: Content already created for specific date
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    get:
      summary: List group topology per date
      operationId: topology_groups.list
      description: List group topology per date
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: name
          type: string
          description: filter results by group name
        - in: query
          name: type
          type: string
          description: filter results by group type
        - in: query
          name: subgroup
          type: string
          description: filter results by subgroup
        - in: query
          name: tags
          type: string
          description: filter results by tags using the pattern tags=key:value,key:value etc...
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Topology resources listed
          schema:
            $ref: '#/definitions/Self_reference'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    
    delete:
      summary: Delete topology of groups for a specific date
      operationId: topology_groups.delete
      description: Delete a list of groups (topology) for a specific date
      tags:
        - Topology
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: groups topology definition Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  /topology/groups/by_report/{report_name}:
    get:
      summary: List group topology per date and filter by report
      operationId: topology_groups_report.list
      description: List group topology per date and filter by report
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: report_name
          type: string
          description: filter results based on selected report
          required: true
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: filtered topology resources listed based on report
          schema:
            $ref: '#/definitions/Self_reference'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  
      
          
  /topology/endpoints:
    post:
      summary: Create a new endpoints topology resource
      operationId: topology_endpoints.create
      description: Create a new endpoints topology resource which maps endpoints to endpoint groups
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "endpoint_resource"
          in: "body"
          description: "Json description of endpoint topology items to be created"
          required: true
          schema:
            $ref: '#/definitions/TopologyEndpoints'
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Topology resource Created
          schema:
            $ref: '#/definitions/Self_reference'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
    get:
      summary: List topology endpoints per date
      operationId: topology_endpoints.list
      description: List topology endpoints per date
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: query
          name: name
          type: string
          description: filter results by group name
        - in: query
          name: type
          type: string
          description: filter results by group type
        - in: query
          name: service
          type: string
          description: filter results by service
        - in: query
          name: hostname
          type: string
          description: filter results by hostname
        - in: query
          name: tags
          type: string
          description: filter results by tags using the pattern tags=key:value,key:value etc...
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Topology resource listed
          schema:
            $ref: '#/definitions/Self_reference'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

    delete:
      summary: Delete topology of endpoints for a specific date
      operationId: topology_endpoints.delete
      description: Delete a list of endpoints (topology) for a specific date
      tags:
        - Topology
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: Endpoint topology definition Deleted
          schema:
            $ref: '#/definitions/Status'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  /topology/endpoints/by_report/{report_name}:
    get:
      summary: List endpoint topology per date and filter by report
      operationId: topology_endpoints_report.list
      description: List endpoint topology per date and filter by report
      tags:
        - Topology
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: report_name
          type: string
          description: filter results based on selected report
          required: true
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/profDate"
      responses:
        '200':
          description: filtered topology resources listed based on report
          schema:
            $ref: '#/definitions/Self_reference'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /latest/{report_name}/{lgroup_type}:
    get:
      summary: "List latest metric data for available in a specific report"
      description: "This request lists the latest metric data  and supports filtering by status value. If user uses filter=non-ok will get all non ok statuses"
      operationId: statusLatestList
      tags:
        - Latest
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/latestDate"
        - $ref: "#/parameters/latestFilter"
        - $ref: "#/parameters/latestLimit"
        - $ref: "#/parameters/strict"


      responses:
        200:
          description: "Successful retrieval of latest metric data"
          schema:
            $ref: "#/definitions/MetricDataList"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"


  /latest/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      summary: "List latest metric data for a target endpoint group and filter by status"
      description: "This request lists the latest metric data available for a specific endpoint group and supports filtering by status value. If user uses filter=non-ok will get all non ok statuses"
      operationId: statusLatestListGroup
      tags:
        - Latest
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/latestDate"
        - $ref: "#/parameters/latestFilter"
        - $ref: "#/parameters/latestLimit"
        - $ref: "#/parameters/strict"


      responses:
        200:
          description: "Successful retrieval of latest metric data"
          schema:
            $ref: "#/definitions/MetricDataList"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  

  /status/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      summary: "List status results for a given endpoint group (i.e. Group_A)"
      description: "This request is used to retrieve all the statuses of endpoint groups that match the given criteria of report name, group type and optionally group name."
      operationId: statusEndpointGroupsNameFilterID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"

      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /status/{report_name}/{lgroup_type}:
    get:
      summary: "List status results for all endpoint groups of a given type"
      description: "This request is used to retrieve all the statuses of endpoint groups that match the given criteria of report name, group type and optionally group name."
      operationId: statusEndpointGroupsID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /status/{report_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      summary: "List status results for all services of a given endpoint group"
      description: "This method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group)"
      operationId: statusServicesID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      summary: "List status results for a given service (under a given endpoint group)"
      description: "This method may be used to retrieve a specific service type status timeline (applies for a specific service endpoint group)"
      operationId: statusServicesNameFilteredID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      summary: "List status results for all endpoints (under a given service and endpoint group)"
      description: "This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type)"
      operationId: statusEndpointID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusEndpointResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}:
    get:
      summary: "List status results for a given endpoint (under a given service and endpoint group)"
      description: "This method may be used to retrieve a specific service endpoint status timeline (applies on a specific service type)"
      operationId: statusEndpointNameFilteredID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusEndpointResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics:
    get:
      summary: "List status results for all metrics (under a given endpoint, service and endpoint group)"
      description: "This method may be used to retrieve a specific and detailed metric result."
      operationId: statusMetricID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusMetricResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics/{metric_name}:
    get:
      summary: "List status results for a given metric (under a given endpoint, service and endpoint group)"
      description: "This method may be used to retrieve a specific and detailed metric result."
      operationId: statusMetricNameFilteredID
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/endpoint_name"
        - $ref: "#/parameters/metric_name"
      responses:
        200:
          description: "Successful retrieval of statuses"
          schema:
            $ref: "#/definitions/StatusMetricResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /status/{report_name}/endpoints:
    get:
      summary: "Flat List status results of all endpoints"
      description: "This method returns a flat list of all endpoint status results based on a given report."
      operationId: statusFlatEndpoints
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/FlatEndpointStatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  
  /status/{report_name}/metrics/{metric_name}:
    get:
      summary: "Flat List endpoint metric results by metric name"
      description: "This method returns a flat list of all endpoint status results based on a given metric."
      operationId: statusFlatMetrics
      tags:
        - Status
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - name: "metric_name"
          in: path
          description: "The name of the probe (metric)"
          required: true
          type: string
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/FlatMetricsStatusResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /metric_result/{endpoint}:
    get:
      summary: Retrieve a list of all metric results for a specific day and a specific host
      description: Retrieve a list with  the full output of all metric results for a specific date
      tags:
        - MetricResult
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "endpoint"
          in: path
          description: "The fqdn of the monitored host"
          required: true
          type: string
        - $ref: "#/parameters/execDate"
        - $ref: "#/parameters/latestFilter"
      responses:
        200:
          description: "Successful retrieval of multiple metric results"
          schema:
            $ref: "#/definitions/MultipleMetricResults"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"


  /metric_result/{endpoint}/{metric_name}:
    get:
      summary: Retrieve the full output of a metric result
      description: Retrieve the full output of a metric result
      tags:
        - MetricResult
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "endpoint"
          in: path
          description: "The fqdn of the monitored host"
          required: true
          type: string
        - name: "metric_name"
          in: path
          description: "The name of the probe (metric)"
          required: true
          type: string
        - $ref: "#/parameters/execDate"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/MetricResult"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      summary: "List A/R results of all services (under a given endpoint group)"
      description: "This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceGroup
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/ServiceResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      summary: "List A/R results of a given service (under a given endpoint group)"
      description: "This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceGroupWithServiceFilter
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/ServiceResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{lgroup_type}/{lgroup_name}/services:
    get:
      summary: "List A/R results of all services (under a given endpoint group)"
      description: "This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceEndpointGroup
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/ServiceResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}:
    get:
      summary: "List A/R results of a given service (under a given endpoint group)"
      description: "This method retrieves the results of a specified service flavor that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceEndpointGroupWithServiceFilter
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/ServiceResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      summary: "List A/R results of all endpoints (under a given service)"
      description: "This method retrieves the results of specified service's endpoints that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsGroupServiceEndpoints
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/service_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}:
    get:
      summary: "List A/R results of a given endpoint (under a given service)"
      description: "This method retrieves the results of a specified endpoint that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsGroupServiceEndpoint
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints:
    get:
      summary: "List A/R results of all endpoints (under a given service)"
      description: "This method retrieves the results of endpoints under a specific service that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceEndpoints
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/service_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /results/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}:
    get:
      summary: "List A/R results of a given endpoint (under a given service)"
      description: "This method retrieves the results of a specified endpoint that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsServiceEndpoint
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/endpoints:
    get:
      summary: "List A/R results of all endpoints (under a given group)"
      description: "This method retrieves the results of specified group's endpoints that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsGroupEndpoints
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"

      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}/endpoints/{endpoint_name}:
    get:
      summary: "List A/R results of a given endpoint (under a given group)"
      description: "This method retrieves the results of a specified endpoint that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsGroupEndpoint
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/service_name"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{lgroup_type}/{lgroup_name}/endpoints:
    get:
      summary: "List A/R results of all endpoints (under a given group)"
      description: "This method retrieves the results of endpoints under a specific group that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsEndpoints
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
  /results/{report_name}/{lgroup_type}/{lgroup_name}/endpoints/{endpoint_name}:
    get:
      summary: "List A/R results of a given endpoint (under a given group)"
      description: "This method retrieves the results of a specified endpoint that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsEndpoint
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
        - $ref: "#/parameters/endpoint_name"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /results/{report_name}/endpoints:
    get:
      summary: "Flat List A/R results of all endpoints"
      description: "This method returns a flat list of all endpoint a/r results based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsFlatEndpoints
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/FlatEndpointResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}/{group_name}/{lgroup_type}/{lgroup_name}:
    get:
      summary: "List A/R results for a given endpoint group"
      description: "his method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsEndpointGroupWithServiceFilter
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/groupName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointGroupResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{group_type}:
    get:
      summary: "List A/R results for a given type of supergroup"
      description: "his method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsEndpointGroupWithoutSuperGroup
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/groupType"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/GroupResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"

  /results/{report_name}/{lgroup_type}/{lgroup_name}:
    get:
      summary: "List A/R results for a given endpoint group"
      description: "This method retrieves the results of a specified endpoint group or multiple endpoint groups of a specific type that where computed based on a given report. Results can be retrieved on daily or monthly granularity."
      operationId: resultsGroupWithServiceFilter
      tags:
        - Results
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - $ref: "#/parameters/reportName"
        - $ref: "#/parameters/lgroupType"
        - $ref: "#/parameters/lgroupName"
        - $ref: "#/parameters/startDate"
        - $ref: "#/parameters/endDate"
        - $ref: "#/parameters/Granularity"
      responses:
        200:
          description: "Successful retrieval of results"
          schema:
            $ref: "#/definitions/EndpointGroupResultsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /issues/{REPORT_NAME}/endpoints:
    get:
      summary: List problematic endpoints
      operationId: issues.ListEndpoints
      description: List endpoints that are in problematic status (critical, warning, missing etc)
      tags:
        - Issues
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/apiKey"
        - name: "filter"
          in: "query"
          description: "name of the problematic status to filter by"
          required: false
          type: string
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with problematic endpoints
          schema:
            $ref: '#/definitions/Endpoint_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  
  /trends/{REPORT_NAME}/status/metrics:
    get:
      summary: List trends for top status service endpoint metrics
      operationId: trends.StatusMetrics
      description: List top status service endpoint metrics by status events
      tags:
        - Trends
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/trendsStartDate"
        - $ref: "#/parameters/trendsEndDate"
        - $ref: "#/parameters/trendsTop"
        - $ref: "#/parameters/trendsGran"
        - $ref: "#/parameters/apiKey"
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with status metrics per status
          schema:
            $ref: '#/definitions/Trends_status_metrics_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'  
  
  
            
  /trends/{REPORT_NAME}/flapping/metrics:
    get:
      summary: List trends for top flapping service endpoint metrics
      operationId: trends.FlappingMetrics
      description: List top flapping service endpoint metrics (that change status frequently)
      tags:
        - Trends
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/trendsStartDate"
        - $ref: "#/parameters/trendsEndDate"
        - $ref: "#/parameters/trendsTop"
        - $ref: "#/parameters/trendsGran"
        - $ref: "#/parameters/apiKey"
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with flapping metrics
          schema:
            $ref: '#/definitions/Trends_metrics_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /trends/{REPORT_NAME}/flapping/endpoints:
    get:
      summary: List trends for top flapping service endpoints
      operationId: trends.FlappingEdpoints
      description: List top flapping service endpoints (that change status frequently)
      tags:
        - Trends
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/trendsStartDate"
        - $ref: "#/parameters/trendsEndDate"
        - $ref: "#/parameters/trendsTop"
        - $ref: "#/parameters/trendsGran"
        - $ref: "#/parameters/apiKey"
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with flapping endpoints
          schema:
            $ref: '#/definitions/Trends_endpoints_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
            
  /trends/{REPORT_NAME}/flapping/services:
    get:
      summary: List trends for top flapping services
      operationId: trends.FlappingServices
      description: List top flapping services (that change status frequently)
      tags:
        - Trends
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/trendsStartDate"
        - $ref: "#/parameters/trendsEndDate"
        - $ref: "#/parameters/trendsTop"
        - $ref: "#/parameters/trendsGran"
        - $ref: "#/parameters/apiKey"
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with flapping services
          schema:
            $ref: '#/definitions/Trends_services_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /trends/{REPORT_NAME}/flapping/groups:
    get:
      summary: List trends for top flapping endpoint groups
      operationId: trends.FlappingGroups
      description: List top flapping endpoint groups (that change status frequently)
      tags:
        - Trends
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/profDate"
        - $ref: "#/parameters/trendsStartDate"
        - $ref: "#/parameters/trendsEndDate"
        - $ref: "#/parameters/trendsTop"
        - $ref: "#/parameters/trendsGran"
        - $ref: "#/parameters/apiKey"
        - name: "REPORT_NAME"
          in: "path"
          description: "name of the report"
          required: true
          type: string
      responses:
        '200':
          description: A list with flapping endpoint groups
          schema:
            $ref: '#/definitions/Trends_groups_list'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'

  /factors:
    get:
      summary: "List Factors Requests"
      description: "This method can be used to retrieve a list of factors."
      operationId: factorsId
      tags:
        - Factors
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
      responses:
        200:
          description: "Successful retrieval of factors"
          schema:
            $ref: "#/definitions/FactorsResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
          
  /feeds/topology:
    get:
      summary: List of topology feed parameters
      operationId: feeds.topology.list
      description: list of topology feed parameters
      tags:
        - Feeds
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with a topology feed parameters
          schema:
            $ref: '#/definitions/FeedsTopo'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: update toplogy feed parameters
      operationId: feeds.topo.update
      description: update topology feeds parameters
      tags:
        - Feeds
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "feeds_topo_resource"
          in: "body"
          description: "Json description of the feeds topology resource to be updated"
          required: true
          schema:
            $ref: '#/definitions/FeedsTopo'
      responses:
        '201':
          description: Feeds topology resource Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  
  /feeds/weights:
    get:
      summary: List of weights feed parameters
      operationId: feeds.weights.list
      description: list of weights feed parameters
      tags:
        - Feeds
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
      responses:
        '200':
          description: A list with weights feed parameters
          schema:
            $ref: '#/definitions/FeedsTopo'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
    put:
      summary: update weights feeds parameters
      operationId: feeds.weights.update
      description: update weights feeds parameters
      tags:
        - Feeds
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "feeds_topo_resource"
          in: "body"
          description: "Json description of the feeds weights resource to be updated"
          required: true
          schema:
            $ref: '#/definitions/FeedsTopo'
      responses:
        '201':
          description: Feeds weights resource Updated
          schema:
            $ref: '#/definitions/Status'
        '400':
          description: Bad request due to malformed JSON in put body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '404':
          description: Item not found
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'  
          
  /recomputations/{ID}/status:
    post:
      summary: "change recomputation status"
      description: "change status of a recomputation with a given ID"
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - name: "ID"
          in: "path"
          description: "the recomputation id"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
        - name: "status"
          in: "body"
          description: "incoming status recomputation"
          schema:
            $ref: "#/definitions/recomputation_status"
      responses:
        200:
          description: "Successful change of status in recomputation"
          schema:
            $ref: "#/definitions/Status"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
    delete:
      summary: "reset a recomputation status"
      description: "reset status for a given recomputation"
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - name: "ID"
          in: "path"
          description: "the recomputation id"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        200:
          description: "Successful reset status of recomputation"
          schema:
            $ref: '#/definitions/Status'
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/ServerError"

  /recomputations/{ID}:
    get:
      summary: "Get Recomputation details"
      description: "Get details of a recomputation with id ID."
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - name: "ID"
          in: "path"
          description: "the recomputation id"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        200:
          description: "Successful retrieval of recomputation details"
          schema:
            $ref: "#/definitions/RecomputationsListResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
    delete:
      summary: "Delete a specific recomputation"
      description: "Delete a specific recomputation using its ID."
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - name: "ID"
          in: "path"
          description: "the recomputation id"
          required: true
          type: string
        - $ref: "#/parameters/apiKey"
      responses:
        200:
          description: "Successful deletion of recomputation "
          schema:
            $ref: '#/definitions/Status'
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        404:
          $ref: "#/responses/404"
        500:
          $ref: "#/responses/ServerError"
  /recomputations:
    get:
      summary: "List Recomputation Requests"
      description: "This method can be used to retrieve a list of recomputation requests."
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "date"
          in: "query"
          type: string
          description: "specific date in YYYY-MM-DD format to retrieve relevant recomputations that cover this date"
          required: false
        - name: "report"
          in: "query"
          type: string
          description: "filter recomputation requests by report name"
          required: false
      responses:
        200:
          description: "Successful retrieval of recomputations"
          schema:
            $ref: "#/definitions/RecomputationsListResponse"
        400:
          $ref: "#/responses/404"
        401:
          $ref: "#/responses/Unauthorized"
        406:
          $ref: "#/responses/406"
        422:
          $ref: "#/responses/422"
        500:
          $ref: "#/responses/ServerError"
    post:
      summary: "Create a new recomputation"
      description: "This method can be used to create a new recomputation request."
      tags:
        - Recomputations
      produces:
        - "application/json"
        - "application/xml"
      parameters:
        - $ref: "#/parameters/apiKey"
        - name: "recomputation_request"
          in: "body"
          description: "Json description of the recomputation to be created"
          required: true
          schema:
            $ref: '#/definitions/recomputation_request'
      responses:
        '200':
          description: Recomputation Request Created
          schema:
            $ref: '#/definitions/Self_reference'
        '400':
          description: Bad request due to malformed JSON in post body
          schema:
            $ref: '#/definitions/Status_error'
        '401':
          description: Unauthorized user
          schema:
            $ref: '#/definitions/Status_error'
        '406':
          description: Content Not acceptable
          schema:
            $ref: '#/definitions/Status_error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Status_error'
  /version:
    get:
      summary: "List API Version information"
      description: "List api version information such as release version, commit hash etc"
      tags:
        - Version
      produces:
        - "application/json"
        - "application/xml"
      responses:
        200:
          description: "Successful retrieval of version info"
          schema:
            $ref: "#/definitions/Version"


parameters:
  trendsGran:
    name: "granularity"
    in: "query"
    type: string
    description: "use granularity=monthly to get a monthly view of the results"
    default: empty
  profDate:
    name: "date"
    in: "query"
    type: string
    description: "target date to retrieve a historic version of the profile"
    default: todays_date in YYYY-MM-DD format
  trendsStartDate:
    name: "start_date"
    in: "query"
    type: string
    description: "start date used to define a range of results"
  trendsEndDate:
    name: "end_date"
    in: "query"
    type: string
    description: "end date used to define a range of results"
  trendsTop:
    name: "top"
    in: "query"
    type: string
    description: "define a number of top results"
  topoDate:
    name: "date"
    in: "query"
    type: string
    description: "target day to get latest topology statistics"
    default: todays_date in YYYY-MM-DD format
  latestDate:
    name: "date"
    in: "query"
    type: string
    description: "target day to get latest metric data"
    default: todays_date_zulu_format
  latestFilter:
    name: "filter"
    in: "query"
    type: string
    description: "filter by statuses: ok, non-ok, critical, warning, ok, unknown, missing, all"
    default: all
  latestLimit:
    name: "limit"
    in: "query"
    type: string
    description: "limit latest results by number"
    default: 500
  apiKey:
    name: "x-api-key"
    in: "header"
    description: "the x-api-key"
    required: true
    type: "string"
    default: SecretKey123
  reportName:
    name: "report_name"
    in: "path"
    description: "report the probes belong to"
    required: true
    type: string
    default: CRITICAL
  groupType:
    name: "group_type"
    in: "path"
    description: "group type of the probes"
    required: true
    type: string
    default: SuperGroup
  groupName:
    name: group_name
    in: path
    description: group names of the probes
    required: true
    type: string
    default: ALL
  lgroupName:
    name: lgroup_name
    in: path
    description: endpoint group names of the probes
    required: true
    type: string
    default: Group_A
  lgroupType:
    name: lgroup_type
    in: path
    description: endpoing group type of the probes
    required: true
    type: string
    default: EndpointGroup
  service_name:
    name: service_name
    in: path
    description: service name of the probes
    required: true
    type: string
    default: "argo.test.metric.profile.service.1"
  endpoint_name:
    name: endpoint_name
    in: path
    description: endpoint_name of the probes
    required: true
    type: string
    default: "example1.com"
  metric_name:
    name: metric_name
    in: path
    description: name of the metric profile
    required: true
    type: string
    default: "argo.mem.check"
  startDate:
    name: start_time
    in: query
    description: "start date of query in zulu format"
    required: true
    type: string
    default: "2006-01-01T00:04:05Z"
  endDate:
    name: end_time
    in: query
    description: "end date of query in zulu format"
    required: true
    type: string
    default: "2006-01-03T15:04:05Z"
  Granularity:
    name: granularity
    in: query
    description: "daily or monthly granularity"
    required: false
    type: string
    default: "daily"
  execDate:
    name: exec_time
    in: query
    description: "The execution date of query in zulu format. In order to get the correct execution time get status results for all metrics (under a given endpoint, service and endpoint group). ( GET /status/{report_name}/{lgroup_type}/{lgroup_name}/services/{service_name}/endpoints/{endpoint_name}/metrics List) "
    required: true
    type: string
    default: "2006-01-01T00:04:05Z"
  export:
    name: "export"
    in: "query"
    type: string
    description: "the service will respond with just a flat json user object when this parameter is given(export=flat)"
    default: ""
  strict:
    name: "strict"
    in: query
    type: string
    description: "the servce will return only the latest entry grouped by endpoint_group/host/service/metric"
    default: "false"

responses:
  Unauthorized:
    description: unauthorized
    schema:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
        details:
          type: string
  ServerError:
    description: internal server error
    schema:
      type: string
  404:
    description: Item not found
    schema:
      $ref: '#/definitions/Status_error'
  406:
    description: Content Not acceptable
    schema:
      $ref: '#/definitions/Status_error'
  422:
    description: Validation Error
    schema:
      $ref: '#/definitions/Status_error'

definitions:

  Endpoint_list:
    type: array
    items:
      $ref: '#/definitions/Endpoint'

  Endpoint:
    type: object
    properties:
      endpoint:
        type: string
        description: "name of the endpoint"
      endpoint_group:
        type: string
        description: "name of the group the endpoint belongs to"
      service:
        type: string
        description: "name of the service the endpoint hosts"
      status:
        type: string
        description: "status value"
      timestamp:
        type: string
        description: "ISO8601 timestamp since when the status last updated"
      info:
        type: object
        description: "optional dictionary with various other information about the endpoint"


  TopologyEndpoint:
    type: object
    properties:
      group:
        type: string
        description: "name of the endpoint group"
      type:
        type: string
        description: "type of the endpoint group, for example: SITES or SERVICEGROUPS etc... "
      service:
        type: string
        description: "service type of the endpoint belonging to the endpoint group"
      hostname:
        type: string
        description: "hostname of the endpoint belonging to the endpoint group"
      tags:
        type: object
        description: "key value tags"

  TopologyEndpoints:
    type: array
    items:
      $ref: '#/definitions/TopologyEndpoint'
      
  TopologyGroups:
    type: array
    items:
      $ref: '#/definitions/TopologyGroup'
      
  TopologyGroup:
    type: object
    properties:
      group:
        type: string
        description: "name of the topology group"
      type:
        type: string
        description: "type of the topology group, eg. PROJECTS, NGIS etc... "
      subgroup:
        type: string
        description: "name of subgroup contained in the top level group"
      tags:
        type: object
        description: "key value tags"
      

  FactorsResponse:
    type: object
    properties:
      factors:
        description: "List of endpoint groups and their relevant weights"
        type: array
        items:
          type: object
          properties:
            site:
              type: string
              description: "The name of the endpoint group"
            weight:
              type: string
              description: "The weighting factor of the given endpoint group. The higher the factor the more significant the contribution of the given endpoint group in the overall A/R results."

  RecomputationsListResponse:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/recomputation'

  timestamp_value:
    type: object
    properties:
      timestamp:
        type: string
      value:
        type: string

  results:
    type: array
    items:
      type: object
      properties:
        timestamp:
          type: string
        availability:
          type: string
        reliability:
          type: string
        unknown:
          type: string
        uptime:
          type: string
        downtime:
          type: string

  GroupResultsResponse:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            results:
              type: array
              items:
                type: object
                properties:
                  timestamp:
                    type: string
                  availability:
                    type: string
                  reliability:
                    type: string

  EndpointGroupResultsResponse:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            endpoints:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  results:
                    $ref: "#/definitions/results"

  ServiceResultsResponse:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            serviceflavors:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  results:
                    $ref: "#/definitions/results"
                    
  FlatEndpointStatusResponse:
    type: object
    properties:
      endpoints:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            service:
              type: string
            supergroup:
              type: string
            statuses:
              type: array
              items:
                $ref: "#/definitions/timestamp_value"
      pageSize:
        type: integer
      nextPageToken:
        type: string


  FlatMetricsStatusResponse:
    type: object
    properties:
      endpoints:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            service:
              type: string
            supergroup:
              type: string
            metric:
              type: string
            statuses:
              type: array
              items:
                $ref: "#/definitions/timestamp_value"
      pageSize:
        type: integer
      nextPageToken:
        type: string
        


                    
  FlatEndpointResultsResponse:
    type: object
    properties:
      endpoints:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            service:
              type: string
            supergroup:
              type: string
            results:
              $ref: "#/definitions/results"
      pageSize:
        type: integer
      nextPageToken:
        type: string
                        

  EndpointResultsResponse:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            serviceflavors:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        type:
                          type: string
                        info:
                          type : object
                        results:
                          $ref: "#/definitions/results"


  StatusEndpointResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            services:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        statuses:
                          type: array
                          items:
                            $ref: "#/definitions/timestamp_value"

  StatusMetricResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            services:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string
                  endpoints:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        metrics:
                          type: array
                          items:
                            $ref: "#/definitions/timestamp_value"

  StatusResponse:
    type: object
    properties:
      groups:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            type:
              type: string
            statuses:
              type: array
              items:
                $ref: "#/definitions/timestamp_value"



  Status:
    type: object
    properties:
      message:
        type: string
      code:
        type: string

  MetricDataList:
    type: object
    properties:
      status:
        type: object
        properties:
          message:
            type: string
          code:
            type: string
      data:
        type: object
        properties:
          metric_data:
            type: array
            items:
              $ref: "#/definitions/MetricData"


  MetricData:
    type: object
    properties:
      endpoint_group:
        type: string
      service:
        type: string
      endpoint:
        type: string
      metric:
        type: string
      timestamp:
        type: string
      status:
        type: string

        
  MultipleMetricResults:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            Name:
              type: string
              description: "The fqdn of the monitored endpoint"
            Metrics:
              type: array
              items:
                type: object
                properties:
                  Name:
                    type: string
                    description: "The name of the probe (metric)"
                  Service:
                    type: string
                    description: "Name of the corresponding service type"
                  Details:
                    type: array
                    items:
                      type: object
                      properties:
                        Timestamp:
                          type: string
                          description: "The execution time of the probe (metric)"
                        Value:
                          type: string
                          description: "The resulting state of the probe (metric)"
                        Summary:
                          type: string
                          description: "A summary of the metric result"
                        Message:
                          type: string
                          description: "The detailed output message of the probe (metric)"

  MetricResult:
    type: object
    properties:
      root:
        type: array
        items:
          type: object
          properties:
            Name:
              type: string
              description: "The fqdn of the monitored endpoint"
            Metrics:
              type: array
              items:
                type: object
                properties:
                  Name:
                    type: string
                    description: "The name of the probe (metric)"
                  Details:
                    type: array
                    items:
                      type: object
                      properties:
                        Timestamp:
                          type: string
                          description: "The execution time of the probe (metric)"
                        Value:
                          type: string
                          description: "The resulting state of the probe (metric)"
                        Summary:
                          type: string
                          description: "A summary of the metric result"
                        Message:
                          type: string
                          description: "The detailed output message of the probe (metric)"

  RenewedToken:
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        type: object
        properties:
          api_key: 
            type: string
  
  Self_reference:
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      data:
        type: object
        properties:
          id:
            type: string
          links:
            type: object
            properties:
              self:
                type: string

  Metric_profile_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Metric_profile'

  recomputation:
    type: object
    properties:
      id:
        type: string
      requester_name:
        type: string
      requester_email:
        type: string
      report:
        type: string
      reason:
        type: string
        description: "The reason why this request has been submitted"
      start_time:
        type: string
        description: "The start date regarding this A/R recomputation"
      end_time:
        type: string
        description: "The end date regarding this A/R recomputation"
      exclude:
        type: array
        description: "Comma separated list of excluded endpoint groups"
        items:
          type: string
      status:
        type: string
        description: "Can be one of approved, rejected, pending, running or done"
      timestamp:
        type: string
        description: "Creation timestamp"
      history:
        type: array
        description: "List of status changes"
        items:
          $ref: '#/definitions/recomputation_status_item'

  recomputation_status_item:
    type: object
    properties:
      status:
        type: string
        description: "Can be one of approved, rejected, pending, running or done"
      timestamp:
        type: string
        description: "zulu format timestamp when the status was changed"
        
  recomputation_status:
    type: object
    properties:
      status:
        type: string
        description: "Can be one of approved, rejected, pending, running or done"

  recomputation_request:
    type: object
    properties:
      requester_name:
        type: string
        description: "Name of the person submitting the recompuatation request"
      requester_email:
        type: string
        description: "Email of the person submitting the recomputation request"
      reason:
        type: string
        description: "A reason why this request is being submitted"
      start_time:
        type: string
        default: "2006-01-03T15:04:05Z"
        description: "start date for A/R recomputation in zulu format"
      end_time:
        type: string
        default: "2006-01-03T15:04:05Z"
        description: "end date for A/R recomputation in zulu format"
      exclude:
        type: array
        description: "Comma separated list of endpoint groups to exclude"
        items:
          type: string
      report:
        type: string
        description: "Name of job report"

  Metric_profile:
    type: object
    properties:
      id:
        type: string
      services:
        type: array
        items:
          $ref: '#/definitions/Service'

  Service:
    type: object
    properties:
      name:
        type: string
      metrics:
        type: array
        items:
          type: string

  Status_error:
    type: object
    properties:
      message:
        type: string
      code:
        type: string
      details:
        type: string
      errors:
        type: array
        items:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
            details:
              type: string
              

  Trends_status_metrics:
    type: object
    properties:
      endpoint_group:
        type: string
      service:
        type: string
      endpoint:
        type: string
      metric:
        type: string
      status:
        type: string
      events:
        type: integer

              
  Trends_metrics:
    type: object
    properties:
      endpoint_group:
        type: string
      service:
        type: string
      endpoint:
        type: string
      metric:
        type: string
      flapping:
        type: integer
        
  Trends_endpoints:
    type: object
    properties:
      endpoint_group:
        type: string
      service:
        type: string
      endpoint:
        type: string
      flapping:
        type: integer
        
  Trends_services:
    type: object
    properties:
      endpoint_group:
        type: string
      service:
        type: string
      flapping:
        type: integer 

  Trends_groups:
    type: object
    properties:
      endpoint_group:
        type: string
      flapping:
        type: integer 
        
  
  
  Trends_status_metrics_group:
    type: object
    properties:
      status:
        type: string
      top:
        type: array
        items:
          $ref: '#/definitions/Trends_status_metrics'
          
  Trends_status_metrics_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Trends_status_metrics_group'
  
  
  Trends_metrics_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Trends_metrics'
          
  Trends_endpoints_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Trends_endpoints'
          
          
  Trends_services_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Trends_services'
          
  Trends_groups_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Trends_groups'

  Downtimes_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Downtimes'
              
  Weights_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Weights'

  Thresholds_profile_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Thresholds_profile'

  Thresholds_profile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      rules:
        type: array
        items:
          $ref: '#/definitions/Threshold_rule'

  Threshold_rule:
    type: object
    properties:
      endpoint_group:
        type: string
      host:
        type: string
      metric:
        type: string
      threshold:
        type: string


  Aggregation_profile_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Aggregation_profile'

  Aggregation_profile:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      namespace:
        type: string
      endpoint_group:
        type: string
      metric_operation:
        type: string
      profile_operation:
        type: string
      metric_profile:
        type: object
        properties:
          name:
            type: string
          id:
            type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/Service_group'

  Service_group:
    type: object
    properties:
      name:
        type: string
      operation:
        type: string
      services:
        type: array
        items:
           $ref: '#/definitions/Service_ops'

  Service_ops:
    type: object
    properties:
      name:
        type: string
      operation:
        type: string


  Operations_profile_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Operations_profile'

  Tenant_status_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Tenant_status'

  Tenant_status:
    type: object
    properties:
      total_status:
        type: boolean
      ams:
        type: object
        properties:
          metric_data:
            type: object
            properties:
              ingestion:
                type: boolean
              publishing:
                type: boolean
              status_streaming:
                type: boolean
              messages_arrived:
                type: integer
          sync_data:
            type: object
            properties:
              ingestion:
                type: boolean
              publishing:
                type: boolean
              status_streaming:
                type: boolean
              messages_arrived:
                type: integer
      hdfs:
        type: object
        properties:
          metric_data:
            type: boolean
          sync_data:
            type: object
            additionalProperties:
              type: object
              properties:
                downtimes:
                  type: boolean
                group_endpoints:
                  type: boolean
                blank_recomputation:
                  type: boolean
                group_groups:
                  type: boolean
                weights:
                  type: boolean
                operations_profile:
                  type: boolean
                metric_profile:
                  type: boolean
                aggregation_profile:
                  type: boolean

      engine_config:
        type: boolean
      last_check:
        type: string

      name:
        type: string
      available_states:
        type: array
        items:
          type: string
      defaults:
        type: object
        properties:
          down:
            type: string
          missing:
            type: string
          unknown:
            type: string
      operations:
        type: array
        items:
          $ref: '#/definitions/Operation'
          
  Downtimes:
    type: object
    properties:
      date:
        type: string
      endpoints:
        type: array
        items:
          $ref: '#/definitions/HostDowntime'

  HostDowntime:
    type: object
    properties:
      hostname: 
        type: string
      service:
        type: string
      start_time:
        type: string
      end_time:
        type: string
          
  Weights:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      name:
        type: string
      weight_type:
        type: string
      group_type:
        type: string
      groups:
        type: array
        items:
          $ref: '#/definitions/GroupWeight'

  GroupWeight:
    type: object
    properties:
      name: 
        type: string
      value:
        type: number
    

  Operations_profile:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
      name:
        type: string
      available_states:
        type: array
        items:
          type: string
      defaults:
        type: object
        properties:
          down:
            type: string
          missing:
            type: string
          unknown:
            type: string
      operations:
        type: array
        items:
          $ref: '#/definitions/Operation'

  Operation:
    type: object
    properties:
      name:
        type: string
      truth_table:
        type: array
        items:
          $ref: '#/definitions/Truth_statement'

  Truth_statement:
    type: object
    properties:
      a:
        type: string
      b:
        type: string
      x:
        type: string

  Report_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Report'

  Report:
    type: object
    properties:
      id:
        type: string
      tenant:
        type: string
      disabled:
        type: string
      weight:
        type: string
      info:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
          created:
            type: string
          updated:
            type: string
      thresholds:
        type: object
        properties:
          availability:
            type: number
          reliability:
            type: number
          uptime:
            type: number
          unknown: 
            type: number
          downtime: 
            type: number
      topology_schema:
        type: object
        properties:
          group:
            type: object
            properties:
              type:
                type: string
              group:
                type: object
                properties:
                  type:
                    type: string
      profiles:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            type:
              type: string
            name:
              type: string

      filter_tags:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
            context:
              type: string
  
  FeedsTopo:
    type: object
    properties:
      type:
        type: string
      feed_url: 
        type: string
      paginated:
        type: string
      fetch_type:
        type: array
        items:
          type: string
      uid_endpoints:
        type: string
        
  FeedsWeights:
    type: object
    properties:
      type:
        type: string
      feed_url: 
        type: string
      weight_type:
        type: string
      group_type:
        type: string

  TopologyResponse:
    type: object
    properties:
      group_count:
        type: integer
      group_type:
        type: string
      group_list:
        type: array
        items:
          type: string
      endpoint_group_count:
        type: integer
      endpoint_group_type:
        type: string
      endpoint_group_list:
        type: array
        items:
          type: string
      service_count:
        type: integer
      service_list:
        type: array
        items:
          type: string

  Tenant_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/Tenant'

  Users_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/User'
          
          
  TopologyTags_list:
    type: object
    properties:
      status:
       $ref: '#/definitions/Status'
      data:
        type: array
        items:
          $ref: '#/definitions/TopologyTags'
    
  
  TopologyTags:
    type: array
    items:
      type: object
      properties:
        name: 
          type: string
        values:
          type: array
          items:
            type: object
            properties:
              name: 
                type: string
              values:
                type: array
                items:
                  type: string
              

  User:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      api-key:
        type: string
      roles:
        type: array
        items:
          type: string

  Tenant:
    type: object
    properties:
      id:
        type: string
      info:
        type: object
        properties:
          name:
            type: string
          email:
            type: string
          description: 
            type: string
          image: 
            type: string
          website:
            type: string
          created:
            type: string
          updated:
            type: string
      db_conf:
        type: array
        items:
          type: object
          properties:
            store:
              type: string
            server:
              type: string
            port:
              type: integer
            username:
              type: string
            password:
              type: string
      topology:
        type: object
        properties:
          type: 
            type: string
          feed:
            type: string
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
            api-key:
              type: string
            roles:
              type: array
              items:
                type: string
                
  Version:
    type: object
    properties:
      release:
        type: string
      commit: 
        type: string        
      build_time: 
        type: string
      golang:
        type: string
      compiler: 
        type: string
      os: 
        type: string
      architecture:
          type: string